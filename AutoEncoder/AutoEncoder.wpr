#!wing
#!version=8.0
##################################################################
# Wing project file                                              #
##################################################################
[project attributes]
proj.directory-list = [{'dirloc': loc('.'),
                        'excludes': (),
                        'filter': '*',
                        'include_hidden': False,
                        'recursive': True,
                        'watch_for_changes': True}]
proj.file-type = 'normal'
proj.launch-config = {loc('ae.py'): ('project',
                                     ('--help',
                                      ''))}
[user attributes]
debug.recent-run-args = {loc('ae.py'): ['--help']}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'dtaAtJloNhSft7SabFzspl0xqEmVIDbK',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.25,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [(0,)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('../../../../Program Files (x86)/Wing Personal 8/resources/typeshed/stdlib/3/builtins.pyi'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../Program Files (x86)/Wing Personal 8/resources/typeshed/stdlib/3/builtins.pyi'),
                      'BlockingIOError')]},
        loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/artist.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/artist.py'),
                      'allow_rasterization')]},
        loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/colors.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/colors.py'),
                             '_warn_if_global_cmap_modified')]],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/colors.py'),
                      'BoundaryNorm')]},
        loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/lines.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/lines.py'),
                      'drawStyles')]},
        loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/nn/modules/linear.py'): {'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/nn/modules/linear.py'),
                             'Linear')]],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/nn/modules/linear.py'),
                      'Bilinear')]},
        loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/nn/modules/module.py'): {'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/nn/modules/module.py'),
                             '_IncompatibleKeys')]],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/nn/modules/module.py'),
                      'Module')]},
        loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/utils/data/dataloader.py'): {'expanded-nodes': [[('class def',
        loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/utils/data/dataloader.py'),
        'DataLoader')]],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/utils/data/dataloader.py'),
                      'DataLoader')]},
        loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/utils/data/sampler.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/utils/data/sampler.py'),
                      'BatchSampler')]},
        loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/tensorflow/python/framework/func_graph.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/tensorflow/python/framework/func_graph.py'),
                      'check_mutation')]},
        loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/tensorflow/python/keras/layers/core.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/tensorflow/python/keras/layers/core.py'),
                      'Activation')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/PIL/Image.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/PIL/Image.py'),
                      'ADAPTIVE')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/artist.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/artist.py'),
                      'allow_rasterization')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_axes.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_axes.py'),
                      'Axes')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_base.py'),
                      '_AxesBase')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/gridspec.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/gridspec.py'),
                      'GridSpec')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/pyplot.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/pyplot.py'),
                      'acorr')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/texmanager.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/texmanager.py'),
                      'TexManager')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/numpy/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/numpy/conftest.py'),
                      '')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/pandas/core/generic.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/pandas/core/generic.py'),
                      'bool_t')]},
        loc('../../anaconda3/Lib/_collections_abc.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../anaconda3/Lib/_collections_abc.py'),
                      'AsyncGenerator')]},
        loc('../LeNet5.py'): {'expanded-nodes': [],
                              'selected-nodes': [],
                              'top-node': [('generic attribute',
        loc('../LeNet5.py'),
        'accuracy')]},
        loc('../README.md'): {'expanded-nodes': [],
                              'selected-nodes': [],
                              'top-node': None},
        loc('../ae.py'): {'expanded-nodes': [],
                          'selected-nodes': [],
                          'top-node': [('generic attribute',
        loc('../ae.py'),
        'args')]},
        loc('../bayes1.py'): {'expanded-nodes': [],
                              'selected-nodes': [],
                              'top-node': [('generic attribute',
        loc('../bayes1.py'),
        'alphas')]},
        loc('../cavi1.py'): {'expanded-nodes': [],
                             'selected-nodes': [],
                             'top-node': [('generic attribute',
        loc('../cavi1.py'),
        'args')]},
        loc('../cavi3.py'): {'expanded-nodes': [],
                             'selected-nodes': [None],
                             'top-node': None},
        loc('../em.py'): {'expanded-nodes': [],
                          'selected-nodes': [],
                          'top-node': [('generic attribute',
        loc('../em.py'),
        'args')]},
        loc('../fashion.py'): {'expanded-nodes': [],
                               'selected-nodes': [[('generic attribute',
        loc('../fashion.py'),
        '_')]],
                               'top-node': [('generic attribute',
        loc('../fashion.py'),
        'class_names')]},
        loc('../fcs.py'): {'expanded-nodes': [],
                           'selected-nodes': [None],
                           'top-node': None},
        loc('../fcs/README.md'): {'expanded-nodes': [],
                                  'selected-nodes': [],
                                  'top-node': None},
        loc('../fcs/fcs.py'): {'expanded-nodes': [],
                               'selected-nodes': [],
                               'top-node': [('generic attribute',
        loc('../fcs/fcs.py'),
        'args')]},
        loc('../fcs/gcps.py'): {'expanded-nodes': [],
                                'selected-nodes': [],
                                'top-node': [('generic attribute',
        loc('../fcs/gcps.py'),
        'a')]},
        loc('../fcs/partition.py'): {'expanded-nodes': [],
                                     'selected-nodes': [],
                                     'top-node': [('generic attribute',
        loc('../fcs/partition.py'),
        'args')]},
        loc('../fcs/plotreds.py'): {'expanded-nodes': [],
                                    'selected-nodes': [],
                                    'top-node': [('generic attribute',
        loc('../fcs/plotreds.py'),
        'args')]},
        loc('../flowers.py'): {'expanded-nodes': [],
                               'selected-nodes': [[('generic attribute',
        loc('../flowers.py'),
        '_')]],
                               'top-node': [('generic attribute',
        loc('../flowers.py'),
        'args')]},
        loc('../gibbs.py'): {'expanded-nodes': [],
                             'selected-nodes': [],
                             'top-node': [('generic attribute',
        loc('../gibbs.py'),
        'a')]},
        loc('../hopfield.py'): {'expanded-nodes': [],
                                'selected-nodes': [],
                                'top-node': [('generic attribute',
        loc('../hopfield.py'),
        'dE')]},
        loc('../train.py'): {'expanded-nodes': [],
                             'selected-nodes': [[('generic attribute',
        loc('../train.py'),
        '_')]],
                             'top-node': [('generic attribute',
        loc('../train.py'),
        'alpha')]},
        loc('../untitled-1.py'): {'expanded-nodes': [],
                                  'selected-nodes': [[('generic attribute',
        loc('../untitled-1.py'),
        'E')]],
                                  'top-node': [('generic attribute',
        loc('../untitled-1.py'),
        'ax')]},
        loc('../untitled-2.py'): {'expanded-nodes': [],
                                  'selected-nodes': [[('generic attribute',
        loc('../untitled-2.py'),
        'Z')]],
                                  'top-node': [('generic attribute',
        loc('../untitled-2.py'),
        'angle')]},
        loc('unknown:<untitled> #3'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('generic attribute',
        loc('unknown:<untitled> #4'),
        'E')]},
        loc('unknown:<untitled> #5'): {'expanded-nodes': [],
                                       'selected-nodes': [[('generic attribute',
        loc('unknown:<untitled> #6'),
        'Z')]],
                                       'top-node': [('generic attribute',
        loc('unknown:<untitled> #7'),
        'angle')]}},
                                'browse_mode': 'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {'Derived Classes': False,
        'Imported': False,
        'Modules': True}}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [3,
                          0],
        'notebook_display': 'normal',
        'notebook_percent': 0.30000000000000004,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': 'import',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': 'args.root',
                                       'fReverse': False,
                                       'fSearchText': 'silh',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {},
                       'launch-id': None,
                       'sel-line': 2,
                       'sel-line-start': 157,
                       'selection_end': 157,
                       'selection_start': 157,
                       'zoom': 0}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('os-command',
                      'wide',
                      1,
                      {'last-percent': 0.8,
                       'toolbox-percent': 1.0,
                       'toolbox-tree-sel': ''})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('../em.py'),
        {'attrib-starts': [],
         'code-line': '    plot_Likelihoods(Likelihoods,\r\n',
         'first-line': 136,
         'folded-linenos': [],
         'sel-line': 149,
         'sel-line-start': 7249,
         'selection_end': 7269,
         'selection_start': 7253,
         'zoom': 0},
        1640210952.166822],
        [loc('../em.py'),
         {'attrib-starts': [],
          'code-line': '    Likelihoods,alphas,mus,sigmas = maximize_likelihood(xs,\r\n',
          'first-line': 121,
          'folded-linenos': [],
          'sel-line': 139,
          'sel-line-start': 6724,
          'selection_end': 6779,
          'selection_start': 6760,
          'zoom': 0},
         1640211056.8599813],
        [loc('../em.py'),
         {'attrib-starts': [],
          'code-line': 'from random            import seed\r\n',
          'first-line': 24,
          'folded-linenos': [],
          'sel-line': 28,
          'sel-line-start': 1485,
          'selection_end': 1519,
          'selection_start': 1519,
          'zoom': 0},
         1640211188.716906],
        [loc('../em.py'),
         {'attrib-starts': [],
          'code-line': '    plot_Likelihoods(Likelihoods,\r\n',
          'first-line': 129,
          'folded-linenos': [],
          'sel-line': 148,
          'sel-line-start': 7191,
          'selection_end': 7211,
          'selection_start': 7195,
          'zoom': 0},
         1640211256.932152],
        [loc('../em.py'),
         {'attrib-starts': [],
          'code-line': '    Likelihoods,_,mus,sigmas = maximize_likelihood(xs,\r\n',
          'first-line': 121,
          'folded-linenos': [],
          'sel-line': 139,
          'sel-line-start': 6707,
          'selection_end': 6757,
          'selection_start': 6738,
          'zoom': 0},
         1640211504.760627],
        [loc('../em.py'),
         {'attrib-starts': [],
          'code-line': 'from random            import choice, seed\r\n',
          'first-line': 15,
          'folded-linenos': [],
          'sel-line': 28,
          'sel-line-start': 1485,
          'selection_end': 1522,
          'selection_start': 1522,
          'zoom': 0},
         1640211523.477635],
        [loc('../em.py'),
         {'attrib-starts': [],
          'code-line': '                                                   mus    = [choice(xs)],\r\n',
          'first-line': 122,
          'folded-linenos': [],
          'sel-line': 140,
          'sel-line-start': 6771,
          'selection_end': 6841,
          'selection_start': 6841,
          'zoom': 0},
         1640211611.1080606],
        [loc('../cavi1.py'),
         {'attrib-starts': [],
          'code-line': '    plot_ELBO(ELBOs,ax=subplot(212))\r\n',
          'first-line': 140,
          'folded-linenos': [],
          'sel-line': 155,
          'sel-line-start': 6627,
          'selection_end': 6662,
          'selection_start': 6641,
          'zoom': 0},
         1640211612.424854],
        [loc('../README.md'),
         {'attrib-starts': [],
          'code-line': 'cavi1.py|CAVI for Univariate Gaussian from [Univariate Gaussian Example](https://suzyahyah.github.io/bayesian%20inference/machine%20learning/2019/03/20/CAVI.html)\r\n',
          'first-line': 39,
          'folded-linenos': [],
          'sel-line': 57,
          'sel-line-start': 3237,
          'selection_end': 3398,
          'selection_start': 3398,
          'zoom': 0},
         1640212095.1016617],
        [loc('../cavi1.py'),
         {'attrib-starts': [],
          'code-line': '    time_em                 = time()\r\n',
          'first-line': 131,
          'folded-linenos': [],
          'sel-line': 149,
          'sel-line-start': 6484,
          'selection_end': 6510,
          'selection_start': 6510,
          'zoom': 0},
         1640220037.879763],
        [loc('../cavi1.py'),
         {'attrib-starts': [],
          'code-line': '    time_em                 = time()\r\n',
          'first-line': 22,
          'folded-linenos': [],
          'sel-line': 149,
          'sel-line-start': 6484,
          'selection_end': 6510,
          'selection_start': 6510,
          'zoom': 0},
         1640220079.1385725],
        [loc('../em.py'),
         {'attrib-starts': [],
          'code-line': '                                                   mus    = [choice(xs)],\r\n',
          'first-line': 146,
          'folded-linenos': [],
          'sel-line': 140,
          'sel-line-start': 6771,
          'selection_end': 6841,
          'selection_start': 6841,
          'zoom': 0},
         1640815706.0334008],
        [loc('../cavi3.py'),
         {'attrib-starts': [('cavi|0|',
                             50)],
          'code-line': '    def getELBO():\r\n',
          'first-line': 21,
          'folded-linenos': [],
          'sel-line': 78,
          'sel-line-start': 3102,
          'selection_end': 3117,
          'selection_start': 3110,
          'zoom': 0},
         1640815707.5733619],
        [loc('../cavi1.py'),
         {'attrib-starts': [],
          'code-line': '    time_em                 = time()\r\n',
          'first-line': 22,
          'folded-linenos': [],
          'sel-line': 149,
          'sel-line-start': 6484,
          'selection_end': 6510,
          'selection_start': 6510,
          'zoom': 0},
         1640815708.5552893],
        [loc('../ae.py'),
         {'attrib-starts': [('Displayer|0|',
                             292),
                            ('Displayer|0|.display|0|',
                             306)],
          'code-line': '                      colours = [colour for colour in self.create_xkcd_colours(filter = lambda R,G,B:R<192 and max(R,G,B)>32)][::-1])\r\n',
          'first-line': 295,
          'folded-linenos': [],
          'sel-line': 318,
          'sel-line-start': 12321,
          'selection_end': 12453,
          'selection_start': 12343,
          'zoom': 0},
         1640815711.4308276],
        [loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/pandas/core/generic.py'),
         {'attrib-starts': [],
          'code-line': 'from __future__ import annotations\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 0,
          'sel-line-start': 0,
          'selection_end': 0,
          'selection_start': 0,
          'zoom': 0},
         1640816429.456362],
        [loc('../ae.py'),
         {'attrib-starts': [('Displayer|0|',
                             292),
                            ('Displayer|0|.display|0|',
                             306)],
          'code-line': '                      colours = [colour for colour in self.create_xkcd_colours(filter = lambda R,G,B:R<192 and max(R,G,B)>32)][::-1])\r\n',
          'first-line': 295,
          'folded-linenos': [],
          'sel-line': 318,
          'sel-line-start': 12321,
          'selection_end': 12453,
          'selection_start': 12343,
          'zoom': 0},
         1641093332.0754857],
        [loc('../../../../Program Files (x86)/Wing Personal 8/doc/TOC'),
         {'displayed-index': -1,
          'viewer-state': {'history': [-1,
                                       0],
                           'history-pos': 0,
                           'index': -1,
                           'top': 0,
                           'top-left-pos': 0}},
         1641098946.2649758],
        [loc('../../../../Program Files (x86)/Wing Personal 8/doc/TOC'),
         {'displayed-index': 0,
          'viewer-state': {'history': [-1,
                                       0],
                           'history-pos': 1,
                           'index': 0,
                           'top': 0,
                           'top-left-pos': 0}},
         1641099022.6661625],
        [loc('ae.py'),
         {'attrib-starts': [],
          'code-line': '# Copyright (C) 2021 Greenweaves Software Limited\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 0,
          'sel-line-start': 0,
          'selection_end': 0,
          'selection_start': 0,
          'zoom': 0},
         1641099084.7414093]],
        20),
        'current-loc': loc('ae.py'),
        'editor-state-list': [(loc('ae.py'),
                               {'attrib-starts': [],
                                'code-line': '# Copyright (C) 2021 Greenweaves Software Limited\r\n',
                                'first-line': 409,
                                'folded-linenos': [],
                                'sel-line': 0,
                                'sel-line-start': 0,
                                'selection_end': 0,
                                'selection_start': 0,
                                'zoom': 0}),
                              (loc('../../../../Program Files (x86)/Wing Personal 8/doc/TOC'),
                               {'displayed-index': 0,
                                'viewer-state': {'history': [-1,
        0],
        'history-pos': 1,
        'index': 0,
        'top': 0,
        'top-left-pos': 0}})],
        'has-focus': True,
        'locked': False},
        [loc('ae.py'),
         loc('../../../../Program Files (x86)/Wing Personal 8/doc/TOC')]),
                               'open_files': ['../../../../Program Files (x86)/Wing Personal 8/doc/TOC',
        'ae.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.5},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((1,
                           0),
                          1641099099.4635878),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {},
                 'splits': 1,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    0),
                                   1641098939.5012279),
                 'user_data': {}},
        'window-alloc': (-131,
                         33,
                         1548,
                         834)}]}
guimgr.recent-documents = [loc('ae.py')]
proj.pyexec = {None: ('custom',
                      'c:\\Users\\Weka\\AppData\\Local\\Programs\\Python\\Python38\\python.exe')}
