#!wing
#!version=8.0
##################################################################
# Wing project file                                              #
##################################################################
[project attributes]
proj.directory-list = [{'dirloc': loc('.'),
                        'excludes': ['saved-lr(0.0005).pt',
                                     'train.pt',
                                     'freqs.png',
                                     'saved-lr(0.001).pt',
                                     'ae.py',
                                     'saved-lr(0.002).pt',
                                     'train.csv',
                                     'validation.pt',
                                     'training-lr(0.002).png',
                                     'training-lr(0.0005).png',
                                     'training-lr(0.01).png',
                                     'saved-lr(0.01).pt',
                                     'training-lr(0.001).png'],
                        'filter': '*',
                        'include_hidden': False,
                        'recursive': True,
                        'watch_for_changes': True}]
proj.file-type = 'normal'
proj.launch-config = {loc('ae.py'): ('project',
                                     ('--help',
                                      '')),
                      loc('prepare.py'): ('project',
        ('--show',
         '')),
                      loc('tune.py'): ('project',
                                       ('--show --lr 0.001',
        ''))}
[user attributes]
debug.recent-run-args = {loc('ae.py'): ['--help'],
                         loc('prepare.py'): ['--show',
        '--s',
        '--help'],
                         loc('tune.py'): ['--show --lr 0.001',
        '--show --lr 0.01',
        '--show --lr 0.1',
        '--show -lr 0.01',
        '--show',
        '--lr 0.0001 --show',
        '--lr 0.0005',
        '-h']}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'dtaAtJloNhSft7SabFzspl0xqEmVIDbK',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.25,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('../../../../Program Files (x86)/Wing Personal 8/resources/typeshed/stdlib/3/builtins.pyi'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../Program Files (x86)/Wing Personal 8/resources/typeshed/stdlib/3/builtins.pyi'),
                      'BlockingIOError')]},
        loc('../../AppData/Local/Programs/Python/Python38/Lib/argparse.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python38/Lib/argparse.py'),
                      'Action')]},
        loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/artist.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/artist.py'),
                      'allow_rasterization')]},
        loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/backend_bases.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/backend_bases.py'),
                      'button_press_handler')]},
        loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/colors.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/colors.py'),
                             '_warn_if_global_cmap_modified')]],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/colors.py'),
                      'BoundaryNorm')]},
        loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/lines.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/lines.py'),
                      'drawStyles')]},
        loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/pyplot.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/pyplot.py'),
                      'acorr')]},
        loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/nn/modules/linear.py'): {'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/nn/modules/linear.py'),
                             'Linear')]],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/nn/modules/linear.py'),
                      'Bilinear')]},
        loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/nn/modules/module.py'): {'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/nn/modules/module.py'),
                             '_IncompatibleKeys')]],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/nn/modules/module.py'),
                      'Module')]},
        loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/serialization.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/serialization.py'),
                      'check_module_version_greater_or_equal')]},
        loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/utils/data/dataloader.py'): {'expanded-nodes': [[('class def',
        loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/utils/data/dataloader.py'),
        'DataLoader')]],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/utils/data/dataloader.py'),
                      'DataLoader')]},
        loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/utils/data/sampler.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/utils/data/sampler.py'),
                      'BatchSampler')]},
        loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/tensorflow/python/framework/func_graph.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/tensorflow/python/framework/func_graph.py'),
                      'check_mutation')]},
        loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/tensorflow/python/keras/layers/core.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/tensorflow/python/keras/layers/core.py'),
                      'Activation')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/PIL/Image.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/PIL/Image.py'),
                      'ADAPTIVE')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/artist.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/artist.py'),
                      'allow_rasterization')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_axes.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_axes.py'),
                      'Axes')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_base.py'),
                      '_AxesBase')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/gridspec.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/gridspec.py'),
                      'GridSpec')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/pyplot.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/pyplot.py'),
                      'acorr')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/texmanager.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/texmanager.py'),
                      'TexManager')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/numpy/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/numpy/conftest.py'),
                      '')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/pandas/core/generic.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/pandas/core/generic.py'),
                      'bool_t')]},
        loc('../../anaconda3/Lib/_collections_abc.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../anaconda3/Lib/_collections_abc.py'),
                      'AsyncGenerator')]},
        loc('../LeNet5.py'): {'expanded-nodes': [],
                              'selected-nodes': [],
                              'top-node': [('generic attribute',
        loc('../LeNet5.py'),
        'accuracy')]},
        loc('../README.md'): {'expanded-nodes': [],
                              'selected-nodes': [],
                              'top-node': None},
        loc('../ae.py'): {'expanded-nodes': [],
                          'selected-nodes': [],
                          'top-node': [('generic attribute',
        loc('../ae.py'),
        'args')]},
        loc('../bayes1.py'): {'expanded-nodes': [],
                              'selected-nodes': [],
                              'top-node': [('generic attribute',
        loc('../bayes1.py'),
        'alphas')]},
        loc('../cavi1.py'): {'expanded-nodes': [],
                             'selected-nodes': [],
                             'top-node': [('generic attribute',
        loc('../cavi1.py'),
        'args')]},
        loc('../cavi3.py'): {'expanded-nodes': [],
                             'selected-nodes': [None],
                             'top-node': None},
        loc('../em.py'): {'expanded-nodes': [],
                          'selected-nodes': [],
                          'top-node': [('generic attribute',
        loc('../em.py'),
        'args')]},
        loc('../fashion.py'): {'expanded-nodes': [],
                               'selected-nodes': [[('generic attribute',
        loc('../fashion.py'),
        '_')]],
                               'top-node': [('generic attribute',
        loc('../fashion.py'),
        'class_names')]},
        loc('../fcs.py'): {'expanded-nodes': [],
                           'selected-nodes': [None],
                           'top-node': None},
        loc('../fcs/README.md'): {'expanded-nodes': [],
                                  'selected-nodes': [],
                                  'top-node': None},
        loc('../fcs/fcs.py'): {'expanded-nodes': [],
                               'selected-nodes': [],
                               'top-node': [('generic attribute',
        loc('../fcs/fcs.py'),
        'args')]},
        loc('../fcs/gcps.py'): {'expanded-nodes': [],
                                'selected-nodes': [],
                                'top-node': [('generic attribute',
        loc('../fcs/gcps.py'),
        'a')]},
        loc('../fcs/partition.py'): {'expanded-nodes': [],
                                     'selected-nodes': [],
                                     'top-node': [('generic attribute',
        loc('../fcs/partition.py'),
        'args')]},
        loc('../fcs/plotreds.py'): {'expanded-nodes': [],
                                    'selected-nodes': [],
                                    'top-node': [('generic attribute',
        loc('../fcs/plotreds.py'),
        'args')]},
        loc('../flowers.py'): {'expanded-nodes': [],
                               'selected-nodes': [[('generic attribute',
        loc('../flowers.py'),
        '_')]],
                               'top-node': [('generic attribute',
        loc('../flowers.py'),
        'args')]},
        loc('../gibbs.py'): {'expanded-nodes': [],
                             'selected-nodes': [],
                             'top-node': [('generic attribute',
        loc('../gibbs.py'),
        'a')]},
        loc('../hopfield.py'): {'expanded-nodes': [],
                                'selected-nodes': [],
                                'top-node': [('generic attribute',
        loc('../hopfield.py'),
        'dE')]},
        loc('../train.py'): {'expanded-nodes': [],
                             'selected-nodes': [[('generic attribute',
        loc('../train.py'),
        '_')]],
                             'top-node': [('generic attribute',
        loc('../train.py'),
        'alpha')]},
        loc('../untitled-1.py'): {'expanded-nodes': [],
                                  'selected-nodes': [[('generic attribute',
        loc('../untitled-1.py'),
        'E')]],
                                  'top-node': [('generic attribute',
        loc('../untitled-1.py'),
        'ax')]},
        loc('../untitled-2.py'): {'expanded-nodes': [],
                                  'selected-nodes': [[('generic attribute',
        loc('../untitled-2.py'),
        'Z')]],
                                  'top-node': [('generic attribute',
        loc('../untitled-2.py'),
        'angle')]},
        loc('AutoEncoder.py'): {'expanded-nodes': [],
                                'selected-nodes': [[('generic attribute',
        loc('AutoEncoder.py'),
        'transform')]],
                                'top-node': [('generic attribute',
        loc('AutoEncoder.py'),
        'args')]},
        loc('README.md'): {'expanded-nodes': [],
                           'selected-nodes': [],
                           'top-node': None},
        loc('extract.py'): {'expanded-nodes': [],
                            'selected-nodes': [],
                            'top-node': [('generic attribute',
        loc('extract.py'),
        'args')]},
        loc('prepare.py'): {'expanded-nodes': [],
                            'selected-nodes': [[('generic attribute',
        loc('prepare.py'),
        'validation')]],
                            'top-node': [('generic attribute',
        loc('prepare.py'),
        'args')]},
        loc('train.py'): {'expanded-nodes': [],
                          'selected-nodes': [],
                          'top-node': [('generic attribute',
        loc('train.py'),
        'args')]},
        loc('tune.py'): {'expanded-nodes': [],
                         'selected-nodes': [],
                         'top-node': [('generic attribute',
                                       loc('tune.py'),
                                       'args')]},
        loc('unknown:<untitled> #1'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('function def',
        loc('unknown:<untitled> #2'),
        'parse_args')]},
        loc('unknown:<untitled> #3'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('generic attribute',
        loc('unknown:<untitled> #4'),
        'E')]},
        loc('unknown:<untitled> #5'): {'expanded-nodes': [],
                                       'selected-nodes': [[('generic attribute',
        loc('unknown:<untitled> #6'),
        'Z')]],
                                       'top-node': [('generic attribute',
        loc('unknown:<untitled> #7'),
        'angle')]}},
                                'browse_mode': 'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {'Derived Classes': False,
        'Imported': False,
        'Modules': True}}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [0,
                          0],
        'notebook_display': 'normal',
        'notebook_percent': 0.30000000000000004,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': '784',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': 'args.root',
                                       'fReverse': False,
                                       'fSearchText': 'load',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {},
                       'launch-id': None,
                       'sel-line': 2,
                       'sel-line-start': 157,
                       'selection_end': 157,
                       'selection_start': 157,
                       'zoom': 0}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('os-command',
                      'wide',
                      1,
                      {'last-percent': 0.8,
                       'toolbox-percent': 1.0,
                       'toolbox-tree-sel': ''})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('AutoEncoder.py'),
        {'attrib-starts': [('Trainer|0|',
                            122),
                           ('Trainer|0|.get_input_length|0|',
                            252)],
         'code-line': '        return self.enc\r\n',
         'first-line': 241,
         'folded-linenos': [],
         'sel-line': 253,
         'sel-line-start': 10397,
         'selection_end': 10420,
         'selection_start': 10420,
         'zoom': 0},
        1641509545.81526],
        [loc('AutoEncoder.py'),
         {'attrib-starts': [('Trainer|0|',
                             122),
                            ('Trainer|0|.get_input_length|0|',
                             252)],
          'code-line': '        return self.enc\r\n',
          'first-line': 67,
          'folded-linenos': [],
          'sel-line': 253,
          'sel-line-start': 10397,
          'selection_end': 10420,
          'selection_start': 10420,
          'zoom': 0},
         1641509580.5206637],
        [loc('extract.py'),
         {'attrib-starts': [('extract|0|',
                             33)],
          'code-line': "                out.write(f'{separator.join([str(x) for x in xs])},{y}\\n')\r\n",
          'first-line': 12,
          'folded-linenos': [],
          'sel-line': 41,
          'sel-line-start': 1721,
          'selection_end': 1759,
          'selection_start': 1759,
          'zoom': 0},
         1641509602.6962686],
        [loc('AutoEncoder.py'),
         {'attrib-starts': [('AutoEncoder|0|',
                             36),
                            ('AutoEncoder|0|.__init__|0|',
                             70)],
          'code-line': '        self.encoder_sizes = [size for size in encoder_sizes]\r\n',
          'first-line': 67,
          'folded-linenos': [],
          'sel-line': 84,
          'sel-line-start': 3872,
          'selection_end': 3898,
          'selection_start': 3880,
          'zoom': 0},
         1641509684.2366092],
        [loc('AutoEncoder.py'),
         {'attrib-starts': [('Trainer|0|',
                             122),
                            ('Trainer|0|.get_params|0|',
                             248)],
          'code-line': '\r\n',
          'first-line': 232,
          'folded-linenos': [],
          'sel-line': 252,
          'sel-line-start': 10402,
          'selection_end': 10402,
          'selection_start': 10402,
          'zoom': 0},
         1641509707.6720023],
        [loc('AutoEncoder.py'),
         {'attrib-starts': [('AutoEncoder|0|',
                             36),
                            ('AutoEncoder|0|.get_input_length|0|',
                             122)],
          'code-line': '\r\n',
          'first-line': 103,
          'folded-linenos': [],
          'sel-line': 124,
          'sel-line-start': 5527,
          'selection_end': 5527,
          'selection_start': 5527,
          'zoom': 0},
         1641509719.8650677],
        [loc('extract.py'),
         {'attrib-starts': [('extract|0|',
                             33)],
          'code-line': "                out.write(f'{separator.join([str(x) for x in xs])},{y}\\n')\r\n",
          'first-line': 39,
          'folded-linenos': [],
          'sel-line': 41,
          'sel-line-start': 1721,
          'selection_end': 1759,
          'selection_start': 1759,
          'zoom': 0},
         1641509754.2099648],
        [loc('extract.py'),
         {'attrib-starts': [('extract|0|',
                             33)],
          'code-line': '            batch_features = batch_features.view(-1, model.g)\r\n',
          'first-line': 18,
          'folded-linenos': [],
          'sel-line': 38,
          'sel-line-start': 1546,
          'selection_end': 1606,
          'selection_start': 1606,
          'zoom': 0},
         1641509773.2628999],
        [loc('AutoEncoder.py'),
         {'attrib-starts': [('AutoEncoder|0|',
                             36)],
          'code-line': '    def get_input_length(self):\r\n',
          'first-line': 103,
          'folded-linenos': [],
          'sel-line': 122,
          'sel-line-start': 5459,
          'selection_end': 5483,
          'selection_start': 5467,
          'zoom': 0},
         1641509782.6870732],
        [loc('extract.py'),
         {'attrib-starts': [('extract|0|',
                             33)],
          'code-line': '            batch_features = batch_features.view(-1, model.get_input_length())\r\n',
          'first-line': 18,
          'folded-linenos': [],
          'sel-line': 38,
          'sel-line-start': 1546,
          'selection_end': 1546,
          'selection_start': 1546,
          'zoom': 0},
         1641509839.2121997],
        [loc('AutoEncoder.py'),
         {'attrib-starts': [('AutoEncoder|0|',
                             36),
                            ('AutoEncoder|0|.get_input_length|0|',
                             122)],
          'code-line': '        return self.encoder_sizes[0]\r\n',
          'first-line': 103,
          'folded-linenos': [],
          'sel-line': 123,
          'sel-line-start': 5492,
          'selection_end': 5528,
          'selection_start': 5528,
          'zoom': 0},
         1641509850.754641],
        [loc('extract.py'),
         {'attrib-starts': [('extract|0|',
                             36)],
          'code-line': "    '''\r\n",
          'first-line': 30,
          'folded-linenos': [],
          'sel-line': 39,
          'sel-line-start': 1499,
          'selection_end': 1506,
          'selection_start': 1506,
          'zoom': 0},
         1641510087.2325397],
        [loc('AutoEncoder.py'),
         {'attrib-starts': [('Trainer|0|',
                             125),
                            ('Trainer|0|.train|0|',
                             154)],
          'code-line': '                batch_features = batch_features.view(-1, 784).to(self.dev)\r\n',
          'first-line': 142,
          'folded-linenos': [],
          'sel-line': 171,
          'sel-line-start': 7365,
          'selection_end': 7425,
          'selection_start': 7422,
          'zoom': 0},
         1641510096.0734534],
        [loc('tune.py'),
         {'attrib-starts': [('Trainer|0|',
                             29),
                            ('Trainer|0|.validation_step|0|',
                             80)],
          'code-line': '        with no_grad():\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 85,
          'sel-line-start': 3219,
          'selection_end': 3457,
          'selection_start': 3219,
          'zoom': 0},
         1641510102.2043676],
        [loc('tune.py'),
         {'attrib-starts': [('Trainer|0|',
                             29),
                            ('Trainer|0|.validation_step|0|',
                             80)],
          'code-line': '                outputs               = self.model(batch_features)\r\n',
          'first-line': 69,
          'folded-linenos': [],
          'sel-line': 88,
          'sel-line-start': 3391,
          'selection_end': 3457,
          'selection_start': 3431,
          'zoom': 0},
         1641510108.2363102],
        [loc('extract.py'),
         {'attrib-starts': [('extract|0|',
                             36)],
          'code-line': "    '''\r\n",
          'first-line': 30,
          'folded-linenos': [],
          'sel-line': 39,
          'sel-line-start': 1499,
          'selection_end': 1506,
          'selection_start': 1506,
          'zoom': 0},
         1641510116.224467],
        [loc('AutoEncoder.py'),
         {'attrib-starts': [('Trainer|0|',
                             125),
                            ('Trainer|0|.train|0|',
                             154)],
          'code-line': '                batch_features = batch_features.view(-1, 784).to(self.dev)\r\n',
          'first-line': 148,
          'folded-linenos': [],
          'sel-line': 171,
          'sel-line-start': 7365,
          'selection_end': 7425,
          'selection_start': 7422,
          'zoom': 0},
         1641510140.3068721],
        [loc('extract.py'),
         {'attrib-starts': [('extract|0|',
                             36)],
          'code-line': '            batch_features = batch_features.view(-1, model.get_input_length())\r\n',
          'first-line': 30,
          'folded-linenos': [],
          'sel-line': 43,
          'sel-line-start': 1646,
          'selection_end': 1723,
          'selection_start': 1699,
          'zoom': 0},
         1641510152.9315534],
        [loc('AutoEncoder.py'),
         {'attrib-starts': [('Trainer|0|',
                             125),
                            ('Trainer|0|.train|0|',
                             154)],
          'code-line': '                batch_features = batch_features.view(-1, 784).to(self.dev)\r\n',
          'first-line': 148,
          'folded-linenos': [],
          'sel-line': 171,
          'sel-line-start': 7365,
          'selection_end': 7425,
          'selection_start': 7422,
          'zoom': 0},
         1641510179.9672394],
        [loc('tune.py'),
         {'attrib-starts': [('Trainer|0|',
                             29),
                            ('Trainer|0|.validation_step|0|',
                             80)],
          'code-line': '                batch_features        = batch_features.view(-1, self.model.get_input_length())\r\n',
          'first-line': 64,
          'folded-linenos': [],
          'sel-line': 87,
          'sel-line-start': 3347,
          'selection_end': 3416,
          'selection_start': 3416,
          'zoom': 0},
         1641510292.08797]],
        20),
        'current-loc': loc('AutoEncoder.py'),
        'editor-state-list': [(loc('AutoEncoder.py'),
                               {'attrib-starts': [('Displayer|0|',
        297),
        ('Displayer|0|.plot_encoding|0|',
         367),
        ('Displayer|0|.plot_encoding|0|.extract_batch|0|',
         374)],
                                'code-line': '            batch_features = batch_features.view(-1,  self.model.get_input_length()).to(dev)\r\n',
                                'first-line': 354,
                                'folded-linenos': [],
                                'sel-line': 377,
                                'sel-line-start': 15090,
                                'selection_end': 15173,
                                'selection_start': 15173,
                                'zoom': 0}),
                              (loc('extract.py'),
                               {'attrib-starts': [('extract|0|',
        36)],
                                'code-line': '            batch_features = batch_features.view(-1, model.get_input_length())\r\n',
                                'first-line': 30,
                                'folded-linenos': [],
                                'sel-line': 43,
                                'sel-line-start': 1646,
                                'selection_end': 1723,
                                'selection_start': 1699,
                                'zoom': 0}),
                              (loc('tune.py'),
                               {'attrib-starts': [('Trainer|0|',
        29),
        ('Trainer|0|.validation_step|0|',
         80)],
                                'code-line': '                batch_features        = batch_features.view(-1, self.model.get_input_length())\r\n',
                                'first-line': 64,
                                'folded-linenos': [],
                                'sel-line': 87,
                                'sel-line-start': 3347,
                                'selection_end': 3416,
                                'selection_start': 3416,
                                'zoom': 0})],
        'has-focus': True,
        'locked': False},
        [loc('AutoEncoder.py'),
         loc('extract.py'),
         loc('tune.py')]),
                               'open_files': ['extract.py',
        'tune.py',
        'AutoEncoder.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.5},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((1,
                           0),
                          1641510305.1883721),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {},
                 'splits': 1,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    0),
                                   1641510261.7581866),
                 'user_data': {}},
        'window-alloc': (-131,
                         33,
                         1548,
                         834)}]}
guimgr.recent-documents = [loc('AutoEncoder.py'),
                           loc('tune.py'),
                           loc('extract.py')]
guimgr.visual-state = {loc('../../../../Program Files (x86)/Wing Personal 8/resources/typeshed/stdlib/3/multiprocessing/__init__.pyi'): {'attrib-starts': [],
        'code-line': 'def cpu_count() -> int: ...\n',
        'first-line': 43,
        'folded-linenos': [],
        'sel-line': 58,
        'sel-line-start': 2676,
        'selection_end': 2689,
        'selection_start': 2680,
        'zoom': 0},
                       loc('../../AppData/Local/Programs/Python/Python38/Lib/argparse.py'): {'attrib-starts': [('_ActionsContainer|0|',
        1252),
        ('_ActionsContainer|0|.add_argument|0|',
         1336)],
        'code-line': '        action = action_class(**kwargs)\r\n',
        'first-line': 1362,
        'folded-linenos': [],
        'sel-line': 1367,
        'sel-line-start': 49699,
        'selection_end': 49699,
        'selection_start': 49699,
        'zoom': 0},
                       loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/backend_bases.py'): {'attrib-starts': [('FigureCanvasBase|0|',
        1643),
        ('FigureCanvasBase|0|._get_output_canvas|0|',
         2046)],
        'code-line': '        raise ValueError(\r\n',
        'first-line': 2064,
        'folded-linenos': [],
        'sel-line': 2078,
        'sel-line-start': 74570,
        'selection_end': 74570,
        'selection_start': 74570,
        'zoom': 0},
                       loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/pyplot.py'): {'attrib-starts': [],
        'code-line': 'def close(fig=None):\r\n',
        'first-line': 778,
        'folded-linenos': [],
        'sel-line': 793,
        'sel-line-start': 26468,
        'selection_end': 26477,
        'selection_start': 26472,
        'zoom': 0},
                       loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/serialization.py'): {'attrib-starts': [],
        'code-line': 'def load(f, map_location=None, pickle_module=pickle, **pickle_load_args):\r\n',
        'first-line': 486,
        'folded-linenos': [],
        'sel-line': 501,
        'sel-line-start': 17917,
        'selection_end': 17925,
        'selection_start': 17921,
        'zoom': 0},
                       loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torchvision/datasets/mnist.py'): {'attrib-starts': [],
        'code-line': 'class MNIST(VisionDataset):\r\n',
        'first-line': 2,
        'folded-linenos': [],
        'sel-line': 15,
        'sel-line-start': 382,
        'selection_end': 393,
        'selection_start': 388,
        'zoom': 0},
                       loc('AutoEncoder.py'): {'attrib-starts': [],
        'code-line': 'class Displayer:\r\n',
        'first-line': 317,
        'folded-linenos': [],
        'sel-line': 292,
        'sel-line-start': 11480,
        'selection_end': 11495,
        'selection_start': 11486,
        'zoom': 0},
                       loc('README.md'): {'attrib-starts': [],
        'code-line': 'train.py|Use compressed data for training digit recognizer (WIP)\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 10,
        'sel-line-start': 316,
        'selection_end': 374,
        'selection_start': 325,
        'zoom': 0},
                       loc('ae.py'): {'attrib-starts': [],
                                      'code-line': '',
                                      'first-line': 0,
                                      'folded-linenos': [],
                                      'sel-line': 0,
                                      'sel-line-start': 0,
                                      'selection_end': 0,
                                      'selection_start': 0,
                                      'zoom': 0},
                       loc('extract.py'): {'attrib-starts': [],
        'code-line': '# Copyright (C) 2022 Greenweaves Software Limited\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('prepare.py'): {'attrib-starts': [],
        'code-line': 'from matplotlib.pyplot      import figure, hist, legend, savefig, show, title, xticks\r\n',
        'first-line': 16,
        'folded-linenos': [],
        'sel-line': 21,
        'sel-line-start': 885,
        'selection_end': 920,
        'selection_start': 920,
        'zoom': 0},
                       loc('train.py'): {'attrib-starts': [],
        'code-line': '    Use compressed data for training digit recognizer\r\n',
        'first-line': 6,
        'folded-linenos': [],
        'sel-line': 16,
        'sel-line-start': 693,
        'selection_end': 746,
        'selection_start': 746,
        'zoom': 0},
                       loc('tune.py'): {'attrib-starts': [],
        'code-line': "if __name__=='__main__':\r\n",
        'first-line': 158,
        'folded-linenos': [],
        'sel-line': 174,
        'sel-line-start': 6550,
        'selection_end': 6602,
        'selection_start': 6550,
        'zoom': 0}}
proj.pyexec = {None: ('custom',
                      'c:\\Users\\Weka\\AppData\\Local\\Programs\\Python\\Python38\\python.exe')}
search.search-history = ['784',
                         'load']
