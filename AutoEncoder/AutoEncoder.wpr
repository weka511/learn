#!wing
#!version=8.0
##################################################################
# Wing project file                                              #
##################################################################
[project attributes]
proj.directory-list = [{'dirloc': loc('.'),
                        'excludes': ['train.pt',
                                     'temp',
                                     'training-dim(3)-lr(0.001).png',
                                     'training-dim(3)-lr(0.0001).png',
                                     'training-dim(12)-lr(5e-05).png',
                                     'saved-lr(0.002).pt',
                                     'training-lr(0.001).png',
                                     'validation.csv',
                                     'saved-dim(6)-lr(0.0001).pt',
                                     'training-lr(0.01).png',
                                     'training-lr(0.0005).png',
                                     'saved-dim(6)-lr(0.001).pt',
                                     'saved-dim(12)-lr(1e-05).pt',
                                     'ae.py',
                                     'training-dim(4)-lr(0.001).png',
                                     'saved-dim(12)-lr(0.0001).pt',
                                     'training-dim(12)-lr(1e-05).png',
                                     'train.py',
                                     'saved-dim(12)-lr(5e-05).pt',
                                     'training-lr(0.002).png',
                                     'saved-dim(4)-lr(0.001).pt',
                                     'training-dim(6)-lr(0.0001).png',
                                     'freqs.png',
                                     'validation.png',
                                     'saved-dim(3)-lr(0.001).pt',
                                     'saved-lr(0.001).pt',
                                     'saved-lr(0.01).pt',
                                     'training-dim(12)-lr(0.0001).png',
                                     'data',
                                     'validation.pt',
                                     'train.csv',
                                     'saved-dim(3)-lr(0.0001).pt',
                                     'saved-lr(0.0005).pt',
                                     'figs',
                                     'train.png'],
                        'filter': '*',
                        'include_hidden': False,
                        'recursive': True,
                        'watch_for_changes': True}]
proj.file-type = 'normal'
proj.launch-config = {loc('ae.py'): ('project',
                                     ('--help',
                                      '')),
                      loc('cancer.py'): ('project',
        ('tune --show --dimension 6 --lr 0.000001',
         '')),
                      loc('classify.py'): ('project',
        ('--show',
         '')),
                      loc('extract.py'): ('project',
        ('--encode train.pt --plot3d --show --load saved-dim(6)-lr(0.001)-wd(0.01).pt',
         '')),
                      loc('tune.py'): ('project',
                                       ('--show --lr 0.0005 --dimension 6 --weight_decay 0.01 ',
        ''))}
[user attributes]
debug.recent-run-args = {loc('ae.py'): ['--help'],
                         loc('cancer.py'): ['tune --show --dimension 6 --lr 0.000001',
        'tune --show --dimension 25 --lr 0.0001',
        'tune --show --dimension 25',
        'tune --show',
        'split --show',
        'split'],
                         loc('classify.py'): ['--show',
        '--n_neighbours 3 --show',
        '--n_neighbours 11',
        '--n_neighbours 7',
        '--n_neighbours 5',
        '--n_neighbours 23'],
                         loc('extract.py'): ['--encode train.pt --plot3d --show --load saved-dim(6)-lr(0.001)-wd(0.01).pt',
        '--encode validation.pt --plot3d --show --load saved-dim(6)-lr(0.001)-wd(0.01).pt',
        '--data validation.pt --plot3d --show --load saved-dim(6)-lr(0.001)-wd(0.01).pt',
        '--data validation.pt --plot3d --show --data temp --fig temp --load saved-dim(6)-lr(0.001)-wd(0.01).pt',
        '--data validation.pt --plot3d --show --data temp --fig temp --load saved-dim(6)-lr(0.001)-wd(0.01)',
        '--data validation.pt --plot3d --show --data temp --fig temp',
        '--data validation.pt --plot3d --show',
        '--data train.pt --plot3d --show',
        '--data validation.pt --plot3d',
        '--data validate.pt --plot3d',
        '--data train.pt --plot3d',
        '--output train.pt',
        '--help'],
                         loc('prepare.py'): ['--show --data ./temp --figs ./temp',
        '--show --path ./temp --figs ./temp',
        '--show',
        '--s',
        '--help'],
                         loc('tune.py'): ['--show --lr 0.0005 --dimension 6 --weight_decay 0.01 ',
        '--show --lr 0.0005 --dimension 6 --weight_decay 0.01 --data ./temp --figs ./temp',
        '--show --lr 0.0005 --dimension 6 --weight_decay 0.01',
        '--show --lr 0.001 --dimension 6 --weight_decay 0.01',
        '--show --lr 0.001 --dimension 3',
        '--show --lr 0.001 --dimension 4',
        '--show --lr 0.001',
        '--show --lr 0.01',
        '--show --lr 0.1',
        '--show -lr 0.01',
        '--show',
        '--lr 0.0001 --show',
        '--lr 0.0005',
        '-h']}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'dtaAtJloNhSft7SabFzspl0xqEmVIDbK',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.25,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [(7,)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('../../../../Program Files (x86)/Wing Personal 8/resources/typeshed/stdlib/3/builtins.pyi'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../Program Files (x86)/Wing Personal 8/resources/typeshed/stdlib/3/builtins.pyi'),
                      'BlockingIOError')]},
        loc('../../AppData/Local/Programs/Python/Python38/Lib/argparse.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python38/Lib/argparse.py'),
                      'Action')]},
        loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/artist.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/artist.py'),
                      'allow_rasterization')]},
        loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/backend_bases.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/backend_bases.py'),
                      'button_press_handler')]},
        loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/colors.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/colors.py'),
                             '_warn_if_global_cmap_modified')]],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/colors.py'),
                      'BoundaryNorm')]},
        loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/lines.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/lines.py'),
                      'drawStyles')]},
        loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/pyplot.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/pyplot.py'),
                      'axis')]},
        loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/tensorflow/python/framework/func_graph.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/tensorflow/python/framework/func_graph.py'),
                      'check_mutation')]},
        loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/tensorflow/python/keras/layers/core.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/tensorflow/python/keras/layers/core.py'),
                      'Activation')]},
        loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/_tensor.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/_tensor.py'),
                      'Tensor')]},
        loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/_utils.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/_utils.py'),
                      'annotate')]},
        loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/nn/functional.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/nn/functional.pyi'),
                      'adaptive_avg_pool1d')]},
        loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/nn/modules/linear.py'): {'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/nn/modules/linear.py'),
                             'Linear')]],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/nn/modules/linear.py'),
                      'Bilinear')]},
        loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/nn/modules/loss.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/nn/modules/loss.py'),
                      'BCELoss')]},
        loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/nn/modules/module.py'): {'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/nn/modules/module.py'),
                             '_IncompatibleKeys')]],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/nn/modules/module.py'),
                      'Module')]},
        loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/serialization.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/serialization.py'),
                      'check_module_version_greater_or_equal')]},
        loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/utils/data/dataloader.py'): {'expanded-nodes': [[('class def',
        loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/utils/data/dataloader.py'),
        'DataLoader')]],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/utils/data/dataloader.py'),
                      'DataLoader')]},
        loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/utils/data/sampler.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/utils/data/sampler.py'),
                      'BatchSampler')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/PIL/Image.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/PIL/Image.py'),
                      'ADAPTIVE')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/artist.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/artist.py'),
                      'allow_rasterization')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_axes.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_axes.py'),
                      'Axes')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_base.py'),
                      '_AxesBase')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/gridspec.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/gridspec.py'),
                      'GridSpec')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/pyplot.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/pyplot.py'),
                      'acorr')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/texmanager.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/texmanager.py'),
                      'TexManager')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/numpy/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/numpy/conftest.py'),
                      '')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/pandas/core/generic.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/pandas/core/generic.py'),
                      'bool_t')]},
        loc('../../anaconda3/Lib/_collections_abc.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../anaconda3/Lib/_collections_abc.py'),
                      'AsyncGenerator')]},
        loc('../LeNet5.py'): {'expanded-nodes': [],
                              'selected-nodes': [],
                              'top-node': [('generic attribute',
        loc('../LeNet5.py'),
        'accuracy')]},
        loc('../README.md'): {'expanded-nodes': [],
                              'selected-nodes': [],
                              'top-node': None},
        loc('../ae.py'): {'expanded-nodes': [],
                          'selected-nodes': [],
                          'top-node': [('generic attribute',
        loc('../ae.py'),
        'args')]},
        loc('../bayes1.py'): {'expanded-nodes': [],
                              'selected-nodes': [],
                              'top-node': [('generic attribute',
        loc('../bayes1.py'),
        'alphas')]},
        loc('../cavi1.py'): {'expanded-nodes': [],
                             'selected-nodes': [],
                             'top-node': [('generic attribute',
        loc('../cavi1.py'),
        'args')]},
        loc('../cavi3.py'): {'expanded-nodes': [],
                             'selected-nodes': [None],
                             'top-node': None},
        loc('../em.py'): {'expanded-nodes': [],
                          'selected-nodes': [],
                          'top-node': [('generic attribute',
        loc('../em.py'),
        'args')]},
        loc('../fashion.py'): {'expanded-nodes': [],
                               'selected-nodes': [[('generic attribute',
        loc('../fashion.py'),
        '_')]],
                               'top-node': [('generic attribute',
        loc('../fashion.py'),
        'class_names')]},
        loc('../fcs.py'): {'expanded-nodes': [],
                           'selected-nodes': [None],
                           'top-node': None},
        loc('../fcs/README.md'): {'expanded-nodes': [],
                                  'selected-nodes': [],
                                  'top-node': None},
        loc('../fcs/fcs.py'): {'expanded-nodes': [],
                               'selected-nodes': [],
                               'top-node': [('generic attribute',
        loc('../fcs/fcs.py'),
        'args')]},
        loc('../fcs/gcps.py'): {'expanded-nodes': [],
                                'selected-nodes': [],
                                'top-node': [('generic attribute',
        loc('../fcs/gcps.py'),
        'a')]},
        loc('../fcs/partition.py'): {'expanded-nodes': [],
                                     'selected-nodes': [],
                                     'top-node': [('generic attribute',
        loc('../fcs/partition.py'),
        'args')]},
        loc('../fcs/plotreds.py'): {'expanded-nodes': [],
                                    'selected-nodes': [],
                                    'top-node': [('generic attribute',
        loc('../fcs/plotreds.py'),
        'args')]},
        loc('../flowers.py'): {'expanded-nodes': [],
                               'selected-nodes': [[('generic attribute',
        loc('../flowers.py'),
        '_')]],
                               'top-node': [('generic attribute',
        loc('../flowers.py'),
        'args')]},
        loc('../gibbs.py'): {'expanded-nodes': [],
                             'selected-nodes': [],
                             'top-node': [('generic attribute',
        loc('../gibbs.py'),
        'a')]},
        loc('../hopfield.py'): {'expanded-nodes': [],
                                'selected-nodes': [],
                                'top-node': [('generic attribute',
        loc('../hopfield.py'),
        'dE')]},
        loc('../train.py'): {'expanded-nodes': [],
                             'selected-nodes': [[('generic attribute',
        loc('../train.py'),
        '_')]],
                             'top-node': [('generic attribute',
        loc('../train.py'),
        'alpha')]},
        loc('../untitled-1.py'): {'expanded-nodes': [],
                                  'selected-nodes': [[('generic attribute',
        loc('../untitled-1.py'),
        'E')]],
                                  'top-node': [('generic attribute',
        loc('../untitled-1.py'),
        'ax')]},
        loc('../untitled-2.py'): {'expanded-nodes': [],
                                  'selected-nodes': [[('generic attribute',
        loc('../untitled-2.py'),
        'Z')]],
                                  'top-node': [('generic attribute',
        loc('../untitled-2.py'),
        'angle')]},
        loc('AutoEncoder.py'): {'expanded-nodes': [[('class def',
        loc('AutoEncoder.py'),
        'Plot')]],
                                'selected-nodes': [[('generic attribute',
        loc('AutoEncoder.py'),
        'transform')]],
                                'top-node': [('generic attribute',
        loc('AutoEncoder.py'),
        'args')]},
        loc('README.md'): {'expanded-nodes': [],
                           'selected-nodes': [],
                           'top-node': None},
        loc('cancer.py'): {'expanded-nodes': [],
                           'selected-nodes': [],
                           'top-node': [('generic attribute',
        loc('cancer.py'),
        'args')]},
        loc('classify.py'): {'expanded-nodes': [],
                             'selected-nodes': [],
                             'top-node': [('generic attribute',
        loc('classify.py'),
        'args')]},
        loc('extract.py'): {'expanded-nodes': [],
                            'selected-nodes': [],
                            'top-node': [('generic attribute',
        loc('extract.py'),
        'args')]},
        loc('prepare.py'): {'expanded-nodes': [],
                            'selected-nodes': [[('generic attribute',
        loc('prepare.py'),
        'validation')]],
                            'top-node': [('generic attribute',
        loc('prepare.py'),
        'args')]},
        loc('train.py'): {'expanded-nodes': [],
                          'selected-nodes': [],
                          'top-node': [('generic attribute',
        loc('train.py'),
        'args')]},
        loc('tune.py'): {'expanded-nodes': [[('class def',
        loc('tune.py'),
        'Trainer')]],
                         'selected-nodes': [[('class def',
        loc('tune.py'),
        'Plotter')]],
                         'top-node': [('generic attribute',
                                       loc('tune.py'),
                                       'args')]},
        loc('unknown:<untitled> #1'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': None},
        loc('unknown:<untitled> #2'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': None},
        loc('unknown:<untitled> #3'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('function def',
        loc('unknown:<untitled> #4'),
        'parse_args')]},
        loc('unknown:<untitled> #5'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('generic attribute',
        loc('unknown:<untitled> #6'),
        'E')]},
        loc('unknown:<untitled> #7'): {'expanded-nodes': [],
                                       'selected-nodes': [[('generic attribute',
        loc('unknown:<untitled> #8'),
        'Z')]],
                                       'top-node': [('generic attribute',
        loc('unknown:<untitled> #9'),
        'angle')]}},
                                'browse_mode': 'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {'Derived Classes': False,
        'Imported': False,
        'Modules': True}}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [0,
                          1],
        'notebook_display': 'normal',
        'notebook_percent': 0.30000000000000004,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': 'tick',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': 'product',
                                       'fReverse': True,
                                       'fSearchText': 'FIXME',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {},
                       'launch-id': None,
                       'sel-line': 2,
                       'sel-line-start': 157,
                       'selection_end': 157,
                       'selection_start': 157,
                       'zoom': 0}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('os-command',
                      'wide',
                      1,
                      {'last-percent': 0.8,
                       'toolbox-percent': 1.0,
                       'toolbox-tree-sel': ''})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('cancer.py'),
        {'attrib-starts': [('CancerDataset|0|',
                            31),
                           ('CancerDataset|0|.__init__|0|',
                            36)],
         'code-line': "        self.df     = read_csv(join(path,f'{file_name}.{ext}'), sep='\\t')\r\n",
         'first-line': 18,
         'folded-linenos': [],
         'sel-line': 42,
         'sel-line-start': 1769,
         'selection_end': 1842,
         'selection_start': 1782,
         'zoom': 0},
        1642914601.5225542],
        [loc('cancerEDA.py'),
         {'attrib-starts': [],
          'code-line': 'from os.path import join\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 15,
          'sel-line-start': 688,
          'selection_end': 712,
          'selection_start': 712,
          'zoom': 0},
         1642914625.2727463],
        [loc('cancer.py'),
         {'attrib-starts': [('CancerDataset|0|',
                             31)],
          'code-line': "                 path      = r'D:\\data\\cancer_mutations',\r\n",
          'first-line': 18,
          'folded-linenos': [],
          'sel-line': 37,
          'sel-line-start': 1555,
          'selection_end': 1672,
          'selection_start': 1572,
          'zoom': 0},
         1642914635.0359948],
        [loc('cancerEDA.py'),
         {'attrib-starts': [],
          'code-line': '    ',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 23,
          'sel-line-start': 944,
          'selection_end': 948,
          'selection_start': 948,
          'zoom': 0},
         1642914687.7739193],
        [loc('cancer.py'),
         {'attrib-starts': [('CancerDataset|0|',
                             31)],
          'code-line': "                 path      = r'D:\\data\\cancer_mutations',\r\n",
          'first-line': 21,
          'folded-linenos': [],
          'sel-line': 37,
          'sel-line-start': 1555,
          'selection_end': 1672,
          'selection_start': 1572,
          'zoom': 0},
         1642914712.1384878],
        [loc('cancerEDA.py'),
         {'attrib-starts': [],
          'code-line': '    cancer    = df[df.]',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 23,
          'sel-line-start': 945,
          'selection_end': 967,
          'selection_start': 967,
          'zoom': 0},
         1642914733.8677053],
        [loc('cancer.py'),
         {'attrib-starts': [('CancerDataset|0|',
                             31),
                            ('CancerDataset|0|.__init__|0|',
                             36)],
          'code-line': "        self.df.drop(['cancer_type'],\r\n",
          'first-line': 21,
          'folded-linenos': [],
          'sel-line': 44,
          'sel-line-start': 1890,
          'selection_end': 1924,
          'selection_start': 1913,
          'zoom': 0},
         1642914741.6753752],
        [loc('cancerEDA.py'),
         {'attrib-starts': [],
          'code-line': '    print (cancer)\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 24,
          'sel-line-start': 985,
          'selection_end': 1003,
          'selection_start': 1003,
          'zoom': 0},
         1642914767.0322635],
        [loc('../../AppData/Local/Programs/Python/Python38/Lib/ntpath.py'),
         {'attrib-starts': [('join|0|',
                             76)],
          'code-line': '    path = os.fspath(path)\r\n',
          'first-line': 52,
          'folded-linenos': [],
          'sel-line': 77,
          'sel-line-start': 2508,
          'selection_end': 2508,
          'selection_start': 2508,
          'zoom': 0},
         1642914776.227577],
        [loc('cancerEDA.py'),
         {'attrib-starts': [],
          'code-line': "    df        = read_csv(join(path,f'{file_name}.{ext}'), sep='\\t')\r\n",
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 22,
          'sel-line-start': 876,
          'selection_end': 876,
          'selection_start': 876,
          'zoom': 0},
         1642914816.4045565],
        [loc('../../AppData/Local/Programs/Python/Python38/Lib/ntpath.py'),
         {'attrib-starts': [('join|0|',
                             76)],
          'code-line': '    path = os.fspath(path)\r\n',
          'first-line': 63,
          'folded-linenos': [],
          'sel-line': 77,
          'sel-line-start': 2508,
          'selection_end': 2508,
          'selection_start': 2508,
          'zoom': 0},
         1642914824.2931623],
        [loc('cancerEDA.py'),
         {'attrib-starts': [],
          'code-line': "    p = join(path,f'{file_name}.{ext}')\r\n",
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 22,
          'sel-line-start': 877,
          'selection_end': 916,
          'selection_start': 916,
          'zoom': 0},
         1642914888.6069875],
        [loc('../../AppData/Local/Programs/Python/Python38/Lib/ntpath.py'),
         {'attrib-starts': [('join|0|',
                             76)],
          'code-line': '    path = os.fspath(path)\r\n',
          'first-line': 63,
          'folded-linenos': [],
          'sel-line': 77,
          'sel-line-start': 2508,
          'selection_end': 2508,
          'selection_start': 2508,
          'zoom': 0},
         1642914892.850199],
        [loc('cancerEDA.py'),
         {'attrib-starts': [],
          'code-line': '    cancer    = df.loc[df.cancer_type==1,1:]\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 23,
          'sel-line-start': 945,
          'selection_end': 988,
          'selection_start': 988,
          'zoom': 0},
         1642915078.5057223],
        [loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/pandas/core/indexes/base.py'),
         {'attrib-starts': [('Index|0|',
                             149),
                            ('Index|0|.get_loc|0|',
                             3035)],
          'code-line': '                raise KeyError(key) from err\r\n',
          'first-line': 3056,
          'folded-linenos': [],
          'sel-line': 3081,
          'sel-line-start': 100141,
          'selection_end': 100141,
          'selection_start': 100141,
          'zoom': 0},
         1642915080.679346],
        [loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/pandas/core/indexes/base.py'),
         {'attrib-starts': [('Index|0|',
                             149),
                            ('Index|0|._maybe_cast_slice_bound|0|',
                             5310)],
          'code-line': '            raise self._invalid_indexer("slice", label)\r\n',
          'first-line': 5312,
          'folded-linenos': [],
          'sel-line': 5337,
          'sel-line-start': 178653,
          'selection_end': 178653,
          'selection_start': 178653,
          'zoom': 0},
         1642915085.5459611],
        [loc('cancerEDA.py'),
         {'attrib-starts': [],
          'code-line': '    cancer1    = df.loc[df.cancer_type==1,]\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 24,
          'sel-line-start': 990,
          'selection_end': 1032,
          'selection_start': 1032,
          'zoom': 0},
         1642915159.2919745],
        [loc('cancer.py'),
         {'attrib-starts': [('CancerDataset|0|',
                             31),
                            ('CancerDataset|0|.__init__|0|',
                             36)],
          'code-line': "        self.df.drop(['cancer_type'],\r\n",
          'first-line': 21,
          'folded-linenos': [],
          'sel-line': 44,
          'sel-line-start': 1890,
          'selection_end': 2000,
          'selection_start': 1905,
          'zoom': 0},
         1642915169.478877],
        [loc('cancerEDA.py'),
         {'attrib-starts': [],
          'code-line': "    savefig('cancerEDA.png',dpi=2048)\r\n",
          'first-line': 37,
          'folded-linenos': [],
          'sel-line': 57,
          'sel-line-start': 2218,
          'selection_end': 2254,
          'selection_start': 2254,
          'zoom': 0},
         1642918292.5865576],
        [loc('README.md'),
         {'attrib-starts': [],
          'code-line': '-|cancerEDA.py|Exploratory data analysis of cancer mutations dataset\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 12,
          'sel-line-start': 519,
          'selection_end': 564,
          'selection_start': 564,
          'zoom': 0},
         1642918350.989708]],
        20),
        'current-loc': loc('cancerEDA.py'),
        'editor-state-list': [(loc('cancer.py'),
                               {'attrib-starts': [('CancerDataset|0|',
        31),
        ('CancerDataset|0|.__init__|0|',
         36)],
                                'code-line': "        self.df.drop(['cancer_type'],\r\n",
                                'first-line': 21,
                                'folded-linenos': [],
                                'sel-line': 44,
                                'sel-line-start': 1890,
                                'selection_end': 2000,
                                'selection_start': 1905,
                                'zoom': 0}),
                              (loc('cancerEDA.py'),
                               {'attrib-starts': [],
                                'code-line': "    savefig('cancerEDA.png')\r\n",
                                'first-line': 31,
                                'folded-linenos': [],
                                'sel-line': 57,
                                'sel-line-start': 2198,
                                'selection_end': 2225,
                                'selection_start': 2225,
                                'zoom': 0}),
                              (loc('../../AppData/Local/Programs/Python/Python38/Lib/ntpath.py'),
                               {'attrib-starts': [('join|0|',
        76)],
                                'code-line': '    path = os.fspath(path)\r\n',
                                'first-line': 63,
                                'folded-linenos': [],
                                'sel-line': 77,
                                'sel-line-start': 2508,
                                'selection_end': 2508,
                                'selection_start': 2508,
                                'zoom': 0}),
                              (loc('README.md'),
                               {'attrib-starts': [],
                                'code-line': '-|cancerEDA.py|Exploratory data analysis of cancer mutations dataset\r\n',
                                'first-line': 0,
                                'folded-linenos': [],
                                'sel-line': 12,
                                'sel-line-start': 519,
                                'selection_end': 564,
                                'selection_start': 564,
                                'zoom': 0}),
                              (loc('tune.py'),
                               {'attrib-starts': [],
                                'code-line': '                            })\r\n',
                                'first-line': 236,
                                'folded-linenos': [],
                                'sel-line': 251,
                                'sel-line-start': 10517,
                                'selection_end': 10545,
                                'selection_start': 10545,
                                'zoom': 0})],
        'has-focus': True,
        'locked': False},
        [loc('cancer.py'),
         loc('cancerEDA.py'),
         loc('../../AppData/Local/Programs/Python/Python38/Lib/ntpath.py'),
         loc('README.md'),
         loc('tune.py')]),
                               'open_files': ['tune.py',
        'cancer.py',
        'README.md',
        'cancerEDA.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.5},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((1,
                           1),
                          1642918637.5803325),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {},
                 'splits': 1,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    0),
                                   1642915576.7332008),
                 'user_data': {}},
        'window-alloc': (41,
                         0,
                         1536,
                         828)}]}
guimgr.recent-documents = [loc('cancerEDA.py'),
                           loc('README.md'),
                           loc('cancer.py'),
                           loc('../../AppData/Local/Programs/Python/Python38/Lib/ntpath.py'),
                           loc('tune.py')]
guimgr.visual-state = {loc('../../../../Program Files (x86)/Wing Personal 8/resources/typeshed/stdlib/3/multiprocessing/__init__.pyi'): {'attrib-starts': [],
        'code-line': 'def cpu_count() -> int: ...\n',
        'first-line': 43,
        'folded-linenos': [],
        'sel-line': 58,
        'sel-line-start': 2676,
        'selection_end': 2689,
        'selection_start': 2680,
        'zoom': 0},
                       loc('../../AppData/Local/Programs/Python/Python38/Lib/argparse.py'): {'attrib-starts': [('_ActionsContainer|0|',
        1252),
        ('_ActionsContainer|0|.add_argument|0|',
         1336)],
        'code-line': '        action = action_class(**kwargs)\r\n',
        'first-line': 1362,
        'folded-linenos': [],
        'sel-line': 1367,
        'sel-line-start': 49699,
        'selection_end': 49699,
        'selection_start': 49699,
        'zoom': 0},
                       loc('../../AppData/Local/Programs/Python/Python38/Lib/ntpath.py'): {'attrib-starts': [('join|0|',
        76)],
        'code-line': '    path = os.fspath(path)\r\n',
        'first-line': 63,
        'folded-linenos': [],
        'sel-line': 77,
        'sel-line-start': 2508,
        'selection_end': 2508,
        'selection_start': 2508,
        'zoom': 0},
                       loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/backend_bases.py'): {'attrib-starts': [('FigureCanvasBase|0|',
        1643),
        ('FigureCanvasBase|0|._get_output_canvas|0|',
         2046)],
        'code-line': '        raise ValueError(\r\n',
        'first-line': 2064,
        'folded-linenos': [],
        'sel-line': 2078,
        'sel-line-start': 74570,
        'selection_end': 74570,
        'selection_start': 74570,
        'zoom': 0},
                       loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/pyplot.py'): {'attrib-starts': [],
        'code-line': 'def plot(*args, scalex=True, scaley=True, data=None, **kwargs):\r\n',
        'first-line': 2823,
        'folded-linenos': [],
        'sel-line': 2838,
        'sel-line-start': 100912,
        'selection_end': 100920,
        'selection_start': 100916,
        'zoom': 0},
                       loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/pandas/core/indexes/base.py'): {'attrib-starts': [('Index|0|',
        149),
        ('Index|0|._maybe_cast_slice_bound|0|',
         5310)],
        'code-line': '            raise self._invalid_indexer("slice", label)\r\n',
        'first-line': 5312,
        'folded-linenos': [],
        'sel-line': 5337,
        'sel-line-start': 178653,
        'selection_end': 178653,
        'selection_start': 178653,
        'zoom': 0},
                       loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/pandas/io/common.py'): {'attrib-starts': [('get_handle|0|',
        490)],
        'code-line': '            handle = open(\r\n',
        'first-line': 616,
        'folded-linenos': [],
        'sel-line': 641,
        'sel-line-start': 21474,
        'selection_end': 21474,
        'selection_start': 21474,
        'zoom': 0},
                       loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/_tensor.py'): {'attrib-starts': [('Tensor|0|',
        79),
        ('Tensor|0|.__iter__|0|',
         631)],
        'code-line': "            raise TypeError('iteration over a 0-d tensor')\r\n",
        'first-line': 616,
        'folded-linenos': [],
        'sel-line': 641,
        'sel-line-start': 30501,
        'selection_end': 30501,
        'selection_start': 30501,
        'zoom': 0},
                       loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/_utils.py'): {'attrib-starts': [('ExceptionWrapper|0|',
        401),
        ('ExceptionWrapper|0|.reraise|0|',
         412)],
        'code-line': '        raise exception\r\n',
        'first-line': 408,
        'folded-linenos': [],
        'sel-line': 433,
        'sel-line-start': 18357,
        'selection_end': 18357,
        'selection_start': 18357,
        'zoom': 0},
                       loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/autograd/__init__.py'): {'attrib-starts': [('backward|0|',
        68)],
        'code-line': '    Variable._execution_engine.run_backward(\r\n',
        'first-line': 128,
        'folded-linenos': [],
        'sel-line': 153,
        'sel-line-start': 7923,
        'selection_end': 7923,
        'selection_start': 7923,
        'zoom': 0},
                       loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/nn/functional.py'): {'attrib-starts': [('binary_cross_entropy|0|',
        2848)],
        'code-line': '    return torch._C._nn.binary_cross_entropy(input, target, weight, reduction_enum)\r\n',
        'first-line': 2900,
        'folded-linenos': [],
        'sel-line': 2914,
        'sel-line-start': 117300,
        'selection_end': 117300,
        'selection_start': 117300,
        'zoom': 0},
                       loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/nn/modules/loss.py'): {'attrib-starts': [('BCELoss|0|',
        522),
        ('BCELoss|0|.forward|0|',
         601)],
        'code-line': '        return F.binary_cross_entropy(input, target, weight=self.weight, reduction=self.reduction)\r\n',
        'first-line': 588,
        'folded-linenos': [],
        'sel-line': 602,
        'sel-line-start': 30165,
        'selection_end': 30165,
        'selection_start': 30165,
        'zoom': 0},
                       loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/serialization.py'): {'attrib-starts': [('_open_file|0|',
        208),
        ('_open_file|0|.__init__|0|',
         209)],
        'code-line': '        super(_open_file, self).__init__(open(name, mode))\r\n',
        'first-line': 205,
        'folded-linenos': [],
        'sel-line': 210,
        'sel-line-start': 6698,
        'selection_end': 6698,
        'selection_start': 6698,
        'zoom': 0},
                       loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/utils/data/dataloader.py'): {'attrib-starts': [('_BaseDataLoaderIter|0|',
        483),
        ('_BaseDataLoaderIter|0|.__next__|0|',
         516)],
        'code-line': '            data = self._next_data()\r\n',
        'first-line': 495,
        'folded-linenos': [],
        'sel-line': 520,
        'sel-line-start': 26334,
        'selection_end': 26334,
        'selection_start': 26334,
        'zoom': 0},
                       loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/utils/data/dataset.py'): {'attrib-starts': [('random_split|0|',
        368)],
        'code-line': '    if sum(lengths) != len(dataset):\r\n',
        'first-line': 357,
        'folded-linenos': [],
        'sel-line': 382,
        'sel-line-start': 15060,
        'selection_end': 15060,
        'selection_start': 15060,
        'zoom': 0},
                       loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/torchvision/datasets/mnist.py'): {'attrib-starts': [],
        'code-line': 'class MNIST(VisionDataset):\r\n',
        'first-line': 2,
        'folded-linenos': [],
        'sel-line': 15,
        'sel-line-start': 382,
        'selection_end': 393,
        'selection_start': 388,
        'zoom': 0},
                       loc('AutoEncoder.py'): {'attrib-starts': [('AutoEncoder|0|',
        36)],
        'code-line': '                 encoding_dimension    = 6,\r\n',
        'first-line': 56,
        'folded-linenos': [],
        'sel-line': 72,
        'sel-line-start': 3193,
        'selection_end': 3236,
        'selection_start': 3236,
        'zoom': 0},
                       loc('README.md'): {'attrib-starts': [],
        'code-line': '-|cancer.py| Read the cancer mutations dataset, and partition training dataset into training and validation\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 11,
        'sel-line-start': 410,
        'selection_end': 437,
        'selection_start': 437,
        'zoom': 0},
                       loc('ae.py'): {'attrib-starts': [],
                                      'code-line': '',
                                      'first-line': 0,
                                      'folded-linenos': [],
                                      'sel-line': 0,
                                      'sel-line-start': 0,
                                      'selection_end': 0,
                                      'selection_start': 0,
                                      'zoom': 0},
                       loc('cancer.py'): {'attrib-starts': [],
        'code-line': 'def split_dataset(args):\r\n',
        'first-line': 168,
        'folded-linenos': [],
        'sel-line': 120,
        'sel-line-start': 5209,
        'selection_end': 5233,
        'selection_start': 5233,
        'zoom': 0},
                       loc('classify.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 4,
        'folded-linenos': [],
        'sel-line': 170,
        'sel-line-start': 5870,
        'selection_end': 5870,
        'selection_start': 5870,
        'zoom': 0},
                       loc('extract.py'): {'attrib-starts': [('Plotter|0|',
        103)],
        'code-line': '    def __enter__(self):\r\n',
        'first-line': 191,
        'folded-linenos': [],
        'sel-line': 131,
        'sel-line-start': 5130,
        'selection_end': 5226,
        'selection_start': 5130,
        'zoom': 0},
                       loc('prepare.py'): {'attrib-starts': [('save_plot_dataset|0|',
        30)],
        'code-line': '         density = density,\r\n',
        'first-line': 80,
        'folded-linenos': [],
        'sel-line': 51,
        'sel-line-start': 1993,
        'selection_end': 2019,
        'selection_start': 2019,
        'zoom': 0},
                       loc('train.py'): {'attrib-starts': [],
        'code-line': '    Use compressed data for training digit recognizer\r\n',
        'first-line': 6,
        'folded-linenos': [],
        'sel-line': 16,
        'sel-line-start': 693,
        'selection_end': 746,
        'selection_start': 746,
        'zoom': 0},
                       loc('training-dim(6)-lr(0.0001).png'): {'attrib-starts': [],
        'code-line': '\x89PNG\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('tune.py'): {'attrib-starts': [('Trainer|0|',
        30),
        ('Trainer|0|.train_step|0|',
         71)],
        'code-line': '            train_loss     = self.criterion(outputs.float(), batch_features.float())  # FIXME - quick hack for #36\r\n',
        'first-line': 60,
        'folded-linenos': [],
        'sel-line': 80,
        'sel-line-start': 3304,
        'selection_end': 3304,
        'selection_start': 3304,
        'zoom': 0}}
proj.pyexec = {None: ('custom',
                      'c:\\Users\\Weka\\AppData\\Local\\Programs\\Python\\Python38\\python.exe')}
search.search-history = ['tick',
                         'ti',
                         't',
                         'FIXME',
                         'FIXM',
                         'FIX',
                         'FI',
                         'F',
                         'dimen',
                         '3',
                         'legend',
                         '784',
                         'load']
