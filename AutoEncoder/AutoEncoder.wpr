#!wing
#!version=8.0
##################################################################
# Wing project file                                              #
##################################################################
[project attributes]
proj.directory-list = [{'dirloc': loc('.'),
                        'excludes': ['train.pt',
                                     'temp',
                                     'training-dim(3)-lr(0.001).png',
                                     'training-dim(3)-lr(0.0001).png',
                                     'training-dim(12)-lr(5e-05).png',
                                     'saved-lr(0.002).pt',
                                     'training-lr(0.001).png',
                                     'validation.csv',
                                     'saved-dim(6)-lr(0.0001).pt',
                                     'training-lr(0.01).png',
                                     'training-lr(0.0005).png',
                                     'saved-dim(6)-lr(0.001).pt',
                                     'saved-dim(12)-lr(1e-05).pt',
                                     'ae.py',
                                     'training-dim(4)-lr(0.001).png',
                                     'saved-dim(12)-lr(0.0001).pt',
                                     'training-dim(12)-lr(1e-05).png',
                                     'train.py',
                                     'saved-dim(12)-lr(5e-05).pt',
                                     'training-lr(0.002).png',
                                     'saved-dim(4)-lr(0.001).pt',
                                     'training-dim(6)-lr(0.0001).png',
                                     'freqs.png',
                                     'validation.png',
                                     'saved-dim(3)-lr(0.001).pt',
                                     'saved-lr(0.001).pt',
                                     'saved-lr(0.01).pt',
                                     'training-dim(12)-lr(0.0001).png',
                                     'data',
                                     'validation.pt',
                                     'train.csv',
                                     'saved-dim(3)-lr(0.0001).pt',
                                     'saved-lr(0.0005).pt',
                                     'figs',
                                     'train.png'],
                        'filter': '*',
                        'include_hidden': False,
                        'recursive': True,
                        'watch_for_changes': True}]
proj.file-type = 'normal'
proj.launch-config = {loc('ae.py'): ('project',
                                     ('--help',
                                      '')),
                      loc('extract.py'): ('project',
        ('--data validation.pt --plot3d --show',
         '')),
                      loc('prepare.py'): ('project',
        ('--show --data ./temp --figs ./temp',
         '')),
                      loc('tune.py'): ('project',
                                       ('--show --lr 0.0005 --dimension 6 --weight_decay 0.01 --data ./temp --figs ./temp',
        ''))}
[user attributes]
debug.recent-run-args = {loc('ae.py'): ['--help'],
                         loc('extract.py'): ['--data validation.pt --plot3d --show',
        '--data train.pt --plot3d --show',
        '--data validation.pt --plot3d',
        '--data validate.pt --plot3d',
        '--data train.pt --plot3d',
        '--output train.pt',
        '--help'],
                         loc('prepare.py'): ['--show --data ./temp --figs ./temp',
        '--show --path ./temp --figs ./temp',
        '--show',
        '--s',
        '--help'],
                         loc('tune.py'): ['--show --lr 0.0005 --dimension 6 --weight_decay 0.01 --data ./temp --figs ./temp',
        '--show --lr 0.0005 --dimension 6 --weight_decay 0.01',
        '--show --lr 0.001 --dimension 6 --weight_decay 0.01',
        '--show --lr 0.001 --dimension 3',
        '--show --lr 0.001 --dimension 4',
        '--show --lr 0.001',
        '--show --lr 0.01',
        '--show --lr 0.1',
        '--show -lr 0.01',
        '--show',
        '--lr 0.0001 --show',
        '--lr 0.0005',
        '-h']}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'dtaAtJloNhSft7SabFzspl0xqEmVIDbK',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.25,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [(0,)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('../../../../Program Files (x86)/Wing Personal 8/resources/typeshed/stdlib/3/builtins.pyi'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../Program Files (x86)/Wing Personal 8/resources/typeshed/stdlib/3/builtins.pyi'),
                      'BlockingIOError')]},
        loc('../../AppData/Local/Programs/Python/Python38/Lib/argparse.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python38/Lib/argparse.py'),
                      'Action')]},
        loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/artist.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/artist.py'),
                      'allow_rasterization')]},
        loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/backend_bases.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/backend_bases.py'),
                      'button_press_handler')]},
        loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/colors.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/colors.py'),
                             '_warn_if_global_cmap_modified')]],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/colors.py'),
                      'BoundaryNorm')]},
        loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/lines.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/lines.py'),
                      'drawStyles')]},
        loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/pyplot.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/pyplot.py'),
                      'axis')]},
        loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/tensorflow/python/framework/func_graph.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/tensorflow/python/framework/func_graph.py'),
                      'check_mutation')]},
        loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/tensorflow/python/keras/layers/core.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/tensorflow/python/keras/layers/core.py'),
                      'Activation')]},
        loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/nn/modules/linear.py'): {'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/nn/modules/linear.py'),
                             'Linear')]],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/nn/modules/linear.py'),
                      'Bilinear')]},
        loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/nn/modules/module.py'): {'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/nn/modules/module.py'),
                             '_IncompatibleKeys')]],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/nn/modules/module.py'),
                      'Module')]},
        loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/serialization.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/serialization.py'),
                      'check_module_version_greater_or_equal')]},
        loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/utils/data/dataloader.py'): {'expanded-nodes': [[('class def',
        loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/utils/data/dataloader.py'),
        'DataLoader')]],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/utils/data/dataloader.py'),
                      'DataLoader')]},
        loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/utils/data/sampler.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/utils/data/sampler.py'),
                      'BatchSampler')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/PIL/Image.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/PIL/Image.py'),
                      'ADAPTIVE')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/artist.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/artist.py'),
                      'allow_rasterization')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_axes.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_axes.py'),
                      'Axes')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_base.py'),
                      '_AxesBase')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/gridspec.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/gridspec.py'),
                      'GridSpec')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/pyplot.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/pyplot.py'),
                      'acorr')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/texmanager.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/texmanager.py'),
                      'TexManager')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/numpy/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/numpy/conftest.py'),
                      '')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/pandas/core/generic.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/pandas/core/generic.py'),
                      'bool_t')]},
        loc('../../anaconda3/Lib/_collections_abc.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../anaconda3/Lib/_collections_abc.py'),
                      'AsyncGenerator')]},
        loc('../LeNet5.py'): {'expanded-nodes': [],
                              'selected-nodes': [],
                              'top-node': [('generic attribute',
        loc('../LeNet5.py'),
        'accuracy')]},
        loc('../README.md'): {'expanded-nodes': [],
                              'selected-nodes': [],
                              'top-node': None},
        loc('../ae.py'): {'expanded-nodes': [],
                          'selected-nodes': [],
                          'top-node': [('generic attribute',
        loc('../ae.py'),
        'args')]},
        loc('../bayes1.py'): {'expanded-nodes': [],
                              'selected-nodes': [],
                              'top-node': [('generic attribute',
        loc('../bayes1.py'),
        'alphas')]},
        loc('../cavi1.py'): {'expanded-nodes': [],
                             'selected-nodes': [],
                             'top-node': [('generic attribute',
        loc('../cavi1.py'),
        'args')]},
        loc('../cavi3.py'): {'expanded-nodes': [],
                             'selected-nodes': [None],
                             'top-node': None},
        loc('../em.py'): {'expanded-nodes': [],
                          'selected-nodes': [],
                          'top-node': [('generic attribute',
        loc('../em.py'),
        'args')]},
        loc('../fashion.py'): {'expanded-nodes': [],
                               'selected-nodes': [[('generic attribute',
        loc('../fashion.py'),
        '_')]],
                               'top-node': [('generic attribute',
        loc('../fashion.py'),
        'class_names')]},
        loc('../fcs.py'): {'expanded-nodes': [],
                           'selected-nodes': [None],
                           'top-node': None},
        loc('../fcs/README.md'): {'expanded-nodes': [],
                                  'selected-nodes': [],
                                  'top-node': None},
        loc('../fcs/fcs.py'): {'expanded-nodes': [],
                               'selected-nodes': [],
                               'top-node': [('generic attribute',
        loc('../fcs/fcs.py'),
        'args')]},
        loc('../fcs/gcps.py'): {'expanded-nodes': [],
                                'selected-nodes': [],
                                'top-node': [('generic attribute',
        loc('../fcs/gcps.py'),
        'a')]},
        loc('../fcs/partition.py'): {'expanded-nodes': [],
                                     'selected-nodes': [],
                                     'top-node': [('generic attribute',
        loc('../fcs/partition.py'),
        'args')]},
        loc('../fcs/plotreds.py'): {'expanded-nodes': [],
                                    'selected-nodes': [],
                                    'top-node': [('generic attribute',
        loc('../fcs/plotreds.py'),
        'args')]},
        loc('../flowers.py'): {'expanded-nodes': [],
                               'selected-nodes': [[('generic attribute',
        loc('../flowers.py'),
        '_')]],
                               'top-node': [('generic attribute',
        loc('../flowers.py'),
        'args')]},
        loc('../gibbs.py'): {'expanded-nodes': [],
                             'selected-nodes': [],
                             'top-node': [('generic attribute',
        loc('../gibbs.py'),
        'a')]},
        loc('../hopfield.py'): {'expanded-nodes': [],
                                'selected-nodes': [],
                                'top-node': [('generic attribute',
        loc('../hopfield.py'),
        'dE')]},
        loc('../train.py'): {'expanded-nodes': [],
                             'selected-nodes': [[('generic attribute',
        loc('../train.py'),
        '_')]],
                             'top-node': [('generic attribute',
        loc('../train.py'),
        'alpha')]},
        loc('../untitled-1.py'): {'expanded-nodes': [],
                                  'selected-nodes': [[('generic attribute',
        loc('../untitled-1.py'),
        'E')]],
                                  'top-node': [('generic attribute',
        loc('../untitled-1.py'),
        'ax')]},
        loc('../untitled-2.py'): {'expanded-nodes': [],
                                  'selected-nodes': [[('generic attribute',
        loc('../untitled-2.py'),
        'Z')]],
                                  'top-node': [('generic attribute',
        loc('../untitled-2.py'),
        'angle')]},
        loc('AutoEncoder.py'): {'expanded-nodes': [[('class def',
        loc('AutoEncoder.py'),
        'Plot')]],
                                'selected-nodes': [[('generic attribute',
        loc('AutoEncoder.py'),
        'transform')]],
                                'top-node': [('generic attribute',
        loc('AutoEncoder.py'),
        'args')]},
        loc('README.md'): {'expanded-nodes': [],
                           'selected-nodes': [],
                           'top-node': None},
        loc('classify.py'): {'expanded-nodes': [],
                             'selected-nodes': [],
                             'top-node': [('generic attribute',
        loc('classify.py'),
        'args')]},
        loc('extract.py'): {'expanded-nodes': [[('class def',
        loc('extract.py'),
        'Plot')]],
                            'selected-nodes': [[('function def',
        loc('extract.py'),
        'Plot|0|.__exit__'),
        ('function def',
         loc('extract.py'),
         'Plot|0|.__exit__')]],
                            'top-node': [('generic attribute',
        loc('extract.py'),
        'args')]},
        loc('prepare.py'): {'expanded-nodes': [],
                            'selected-nodes': [[('generic attribute',
        loc('prepare.py'),
        'validation')]],
                            'top-node': [('generic attribute',
        loc('prepare.py'),
        'args')]},
        loc('train.py'): {'expanded-nodes': [],
                          'selected-nodes': [],
                          'top-node': [('generic attribute',
        loc('train.py'),
        'args')]},
        loc('tune.py'): {'expanded-nodes': [[('class def',
        loc('tune.py'),
        'Trainer')]],
                         'selected-nodes': [],
                         'top-node': [('generic attribute',
                                       loc('tune.py'),
                                       'args')]},
        loc('unknown:<untitled> #1'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': None},
        loc('unknown:<untitled> #2'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': None},
        loc('unknown:<untitled> #3'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('function def',
        loc('unknown:<untitled> #4'),
        'parse_args')]},
        loc('unknown:<untitled> #5'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('generic attribute',
        loc('unknown:<untitled> #6'),
        'E')]},
        loc('unknown:<untitled> #7'): {'expanded-nodes': [],
                                       'selected-nodes': [[('generic attribute',
        loc('unknown:<untitled> #8'),
        'Z')]],
                                       'top-node': [('generic attribute',
        loc('unknown:<untitled> #9'),
        'angle')]}},
                                'browse_mode': 'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {'Derived Classes': False,
        'Imported': False,
        'Modules': True}}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [1,
                          0],
        'notebook_display': 'normal',
        'notebook_percent': 0.30000000000000004,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': '784',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': 'product',
                                       'fReverse': False,
                                       'fSearchText': 'save',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {},
                       'launch-id': None,
                       'sel-line': 2,
                       'sel-line-start': 157,
                       'selection_end': 157,
                       'selection_start': 157,
                       'zoom': 0}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('os-command',
                      'wide',
                      1,
                      {'last-percent': 0.8,
                       'toolbox-percent': 1.0,
                       'toolbox-tree-sel': ''})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('prepare.py'),
        {'attrib-starts': [('parse_args|0|',
                            54)],
         'code-line': "                        help    = 'Path for storing intermediate data, such as training and validation and saved weights')\r\n",
         'first-line': 50,
         'folded-linenos': [],
         'sel-line': 62,
         'sel-line-start': 2403,
         'selection_end': 2525,
         'selection_start': 2525,
         'zoom': 0},
        1642545388.2840052],
        [loc('prepare.py'),
         {'attrib-starts': [],
          'code-line': 'from os.path                import join\r\n',
          'first-line': 2,
          'folded-linenos': [],
          'sel-line': 22,
          'sel-line-start': 972,
          'selection_end': 1011,
          'selection_start': 972,
          'zoom': 0},
         1642545393.4392107],
        [loc('tune.py'),
         {'attrib-starts': [],
          'code-line': 'from os.path           import join\r\n',
          'first-line': 3,
          'folded-linenos': [],
          'sel-line': 24,
          'sel-line-start': 1004,
          'selection_end': 1027,
          'selection_start': 1027,
          'zoom': 0},
         1642545414.337046],
        [loc('tune.py'),
         {'attrib-starts': [],
          'code-line': "                                           'validation.pt')),\r\n",
          'first-line': 211,
          'folded-linenos': [],
          'sel-line': 221,
          'sel-line-start': 9029,
          'selection_end': 9072,
          'selection_start': 9072,
          'zoom': 0},
         1642545542.3807912],
        [loc('tune.py'),
         {'attrib-starts': [('Trainer|0|',
                             30)],
          'code-line': '    def train_step(self):\r\n',
          'first-line': 62,
          'folded-linenos': [],
          'sel-line': 67,
          'sel-line-start': 2721,
          'selection_end': 2739,
          'selection_start': 2729,
          'zoom': 0},
         1642545841.9393942],
        [loc('tune.py'),
         {'attrib-starts': [('Trainer|0|',
                             30),
                            ('Trainer|0|.train|0|',
                             47)],
          'code-line': '                self.save_model(args_dict)\r\n',
          'first-line': 66,
          'folded-linenos': [],
          'sel-line': 63,
          'sel-line-start': 2631,
          'selection_end': 2656,
          'selection_start': 2652,
          'zoom': 0},
         1642545893.9567683],
        [loc('tune.py'),
         {'attrib-starts': [('Trainer|0|',
                             30),
                            ('Trainer|0|.__init__|0|',
                             32)],
          'code-line': '        self.path               = \r\n',
          'first-line': 27,
          'folded-linenos': [],
          'sel-line': 46,
          'sel-line-start': 1949,
          'selection_end': 1983,
          'selection_start': 1983,
          'zoom': 0},
         1642545912.129667],
        [loc('prepare.py'),
         {'attrib-starts': [],
          'code-line': 'from os.path                import join\r\n',
          'first-line': 2,
          'folded-linenos': [],
          'sel-line': 22,
          'sel-line-start': 972,
          'selection_end': 1011,
          'selection_start': 972,
          'zoom': 0},
         1642545925.001437],
        [loc('prepare.py'),
         {'attrib-starts': [],
          'code-line': 'from os.path                import join\r\n',
          'first-line': 53,
          'folded-linenos': [],
          'sel-line': 22,
          'sel-line-start': 972,
          'selection_end': 1011,
          'selection_start': 972,
          'zoom': 0},
         1642545925.8723752],
        [loc('tune.py'),
         {'attrib-starts': [('Trainer|0|',
                             30)],
          'code-line': "                 path             = './'):\r\n",
          'first-line': 27,
          'folded-linenos': [],
          'sel-line': 36,
          'sel-line-start': 1450,
          'selection_end': 1489,
          'selection_start': 1489,
          'zoom': 0},
         1642545964.906234],
        [loc('tune.py'),
         {'attrib-starts': [],
          'code-line': '    trainer = Trainer(AutoEncoder(encoder_sizes         = args.encoder,\r\n',
          'first-line': 205,
          'folded-linenos': [],
          'sel-line': 212,
          'sel-line-start': 8423,
          'selection_end': 8444,
          'selection_start': 8437,
          'zoom': 0},
         1642545991.8484416],
        [loc('tune.py'),
         {'attrib-starts': [],
          'code-line': 'class Trainer(object):\r\n',
          'first-line': 46,
          'folded-linenos': [],
          'sel-line': 30,
          'sel-line-start': 1211,
          'selection_end': 1224,
          'selection_start': 1217,
          'zoom': 0},
         1642546007.0608947],
        [loc('tune.py'),
         {'attrib-starts': [('Trainer|0|',
                             30),
                            ('Trainer|0|.save_model|0|',
                             99)],
          'code-line': '             join(self.path,self.get_file_name()))\r\n',
          'first-line': 91,
          'folded-linenos': [],
          'sel-line': 107,
          'sel-line-start': 4252,
          'selection_end': 4300,
          'selection_start': 4300,
          'zoom': 0},
         1642546047.2816863],
        [loc('tune.py'),
         {'attrib-starts': [('Plotter|0|',
                             179),
                            ('Plotter|0|.__exit__|0|',
                             203)],
          'code-line': "                     f'{get_file_name(self.name,self.args.dimension,self.args.lr,weight_decay=self.args.weight_decay)}.{self.ext}'))\r\n",
          'first-line': 190,
          'folded-linenos': [],
          'sel-line': 208,
          'sel-line-start': 8235,
          'selection_end': 8256,
          'selection_start': 8256,
          'zoom': 0},
         1642546173.7390325],
        [loc('tune.py'),
         {'attrib-starts': [('parse_args|0|',
                             118)],
          'code-line': "                        default = './figs',\r\n",
          'first-line': 148,
          'folded-linenos': [],
          'sel-line': 165,
          'sel-line-start': 6801,
          'selection_end': 6835,
          'selection_start': 6835,
          'zoom': 0},
         1642546275.421335],
        [loc('tune.py'),
         {'attrib-starts': [('parse_args|0|',
                             118)],
          'code-line': "                        default = './figs',\r\n",
          'first-line': 21,
          'folded-linenos': [],
          'sel-line': 165,
          'sel-line-start': 6801,
          'selection_end': 6835,
          'selection_start': 6835,
          'zoom': 0},
         1642546285.39082],
        [loc('tune.py'),
         {'attrib-starts': [],
          'code-line': '                                 num_workers = cpu_count()),\r\n',
          'first-line': 227,
          'folded-linenos': [],
          'sel-line': 224,
          'sel-line-start': 9113,
          'selection_end': 9144,
          'selection_start': 9144,
          'zoom': 0},
         1642546844.580142],
        [loc('tune.py'),
         {'attrib-starts': [],
          'code-line': "    with Plotter('training', args, loss):\r\n",
          'first-line': 221,
          'folded-linenos': [],
          'sel-line': 241,
          'sel-line-start': 9983,
          'selection_end': 9999,
          'selection_start': 9992,
          'zoom': 0},
         1642546857.4197247],
        [loc('tune.py'),
         {'attrib-starts': [('Plotter|0|',
                             179),
                            ('Plotter|0|.__init__|0|',
                             184)],
          'code-line': '        self.path = args.data\r\n',
          'first-line': 171,
          'folded-linenos': [],
          'sel-line': 192,
          'sel-line-start': 7627,
          'selection_end': 7656,
          'selection_start': 7656,
          'zoom': 0},
         1642547000.9375715],
        [loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/serialization.py'),
         {'attrib-starts': [('_open_file|0|',
                             208),
                            ('_open_file|0|.__init__|0|',
                             209)],
          'code-line': '        super(_open_file, self).__init__(open(name, mode))\r\n',
          'first-line': 205,
          'folded-linenos': [],
          'sel-line': 210,
          'sel-line-start': 6698,
          'selection_end': 6698,
          'selection_start': 6698,
          'zoom': 0},
         1642547003.1190271]],
        20),
        'current-loc': loc('tune.py'),
        'editor-state-list': [(loc('prepare.py'),
                               {'attrib-starts': [],
                                'code-line': 'from os.path                import join\r\n',
                                'first-line': 53,
                                'folded-linenos': [],
                                'sel-line': 22,
                                'sel-line-start': 972,
                                'selection_end': 1011,
                                'selection_start': 972,
                                'zoom': 0}),
                              (loc('tune.py'),
                               {'attrib-starts': [('Plotter|0|',
        179)],
                                'code-line': '          ext\r\n',
                                'first-line': 186,
                                'folded-linenos': [],
                                'sel-line': 189,
                                'sel-line-start': 7507,
                                'selection_end': 7520,
                                'selection_start': 7520,
                                'zoom': 0})],
        'has-focus': True,
        'locked': False},
        [loc('prepare.py'),
         loc('tune.py')]),
                               'open_files': ['prepare.py',
        'tune.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.5},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((1,
                           0),
                          1642546277.0173306),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {},
                 'splits': 1,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    0),
                                   1642546593.2591777),
                 'user_data': {}},
        'window-alloc': (-131,
                         33,
                         1548,
                         834)}]}
guimgr.recent-documents = [loc('tune.py'),
                           loc('prepare.py')]
guimgr.visual-state = {loc('../../../../Program Files (x86)/Wing Personal 8/resources/typeshed/stdlib/3/multiprocessing/__init__.pyi'): {'attrib-starts': [],
        'code-line': 'def cpu_count() -> int: ...\n',
        'first-line': 43,
        'folded-linenos': [],
        'sel-line': 58,
        'sel-line-start': 2676,
        'selection_end': 2689,
        'selection_start': 2680,
        'zoom': 0},
                       loc('../../AppData/Local/Programs/Python/Python38/Lib/argparse.py'): {'attrib-starts': [('_ActionsContainer|0|',
        1252),
        ('_ActionsContainer|0|.add_argument|0|',
         1336)],
        'code-line': '        action = action_class(**kwargs)\r\n',
        'first-line': 1362,
        'folded-linenos': [],
        'sel-line': 1367,
        'sel-line-start': 49699,
        'selection_end': 49699,
        'selection_start': 49699,
        'zoom': 0},
                       loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/backend_bases.py'): {'attrib-starts': [('FigureCanvasBase|0|',
        1643),
        ('FigureCanvasBase|0|._get_output_canvas|0|',
         2046)],
        'code-line': '        raise ValueError(\r\n',
        'first-line': 2064,
        'folded-linenos': [],
        'sel-line': 2078,
        'sel-line-start': 74570,
        'selection_end': 74570,
        'selection_start': 74570,
        'zoom': 0},
                       loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/pyplot.py'): {'attrib-starts': [],
        'code-line': 'def plot(*args, scalex=True, scaley=True, data=None, **kwargs):\r\n',
        'first-line': 2823,
        'folded-linenos': [],
        'sel-line': 2838,
        'sel-line-start': 100912,
        'selection_end': 100920,
        'selection_start': 100916,
        'zoom': 0},
                       loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/serialization.py'): {'attrib-starts': [('_open_file|0|',
        208),
        ('_open_file|0|.__init__|0|',
         209)],
        'code-line': '        super(_open_file, self).__init__(open(name, mode))\r\n',
        'first-line': 205,
        'folded-linenos': [],
        'sel-line': 210,
        'sel-line-start': 6698,
        'selection_end': 6698,
        'selection_start': 6698,
        'zoom': 0},
                       loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/utils/data/dataloader.py'): {'attrib-starts': [],
        'code-line': 'class DataLoader(Generic[T_co]):\r\n',
        'first-line': 71,
        'folded-linenos': [],
        'sel-line': 70,
        'sel-line-start': 2454,
        'selection_end': 2470,
        'selection_start': 2460,
        'zoom': 0},
                       loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torchvision/datasets/mnist.py'): {'attrib-starts': [],
        'code-line': 'class MNIST(VisionDataset):\r\n',
        'first-line': 2,
        'folded-linenos': [],
        'sel-line': 15,
        'sel-line-start': 382,
        'selection_end': 393,
        'selection_start': 388,
        'zoom': 0},
                       loc('AutoEncoder.py'): {'attrib-starts': [('Plot|0|',
        278)],
        'code-line': '    def __enter__(self):\r\n',
        'first-line': 273,
        'folded-linenos': [],
        'sel-line': 290,
        'sel-line-start': 11504,
        'selection_end': 11600,
        'selection_start': 11504,
        'zoom': 0},
                       loc('README.md'): {'attrib-starts': [],
        'code-line': '5|classify.py|Use compressed data recognize digits (WIP)\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 10,
        'sel-line-start': 322,
        'selection_end': 372,
        'selection_start': 372,
        'zoom': 0},
                       loc('ae.py'): {'attrib-starts': [],
                                      'code-line': '',
                                      'first-line': 0,
                                      'folded-linenos': [],
                                      'sel-line': 0,
                                      'sel-line-start': 0,
                                      'selection_end': 0,
                                      'selection_start': 0,
                                      'zoom': 0},
                       loc('classify.py'): {'attrib-starts': [],
        'code-line': '#https://scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsClassifier.html\r\n',
        'first-line': 9,
        'folded-linenos': [],
        'sel-line': 21,
        'sel-line-start': 843,
        'selection_end': 937,
        'selection_start': 937,
        'zoom': 0},
                       loc('extract.py'): {'attrib-starts': [('Plot|0|',
        92),
        ('Plot|0|.__exit__|0|',
         131)],
        'code-line': '        fig = figure(figsize=(20,20))\r\n',
        'first-line': 146,
        'folded-linenos': [],
        'sel-line': 135,
        'sel-line-start': 5032,
        'selection_end': 5053,
        'selection_start': 5053,
        'zoom': 0},
                       loc('prepare.py'): {'attrib-starts': [('parse_args|0|',
        41)],
        'code-line': "    parser.add_argument('--show',\r\n",
        'first-line': 41,
        'folded-linenos': [],
        'sel-line': 54,
        'sel-line-start': 2208,
        'selection_end': 2404,
        'selection_start': 2212,
        'zoom': 0},
                       loc('train.py'): {'attrib-starts': [],
        'code-line': '    Use compressed data for training digit recognizer\r\n',
        'first-line': 6,
        'folded-linenos': [],
        'sel-line': 16,
        'sel-line-start': 693,
        'selection_end': 746,
        'selection_start': 746,
        'zoom': 0},
                       loc('training-dim(6)-lr(0.0001).png'): {'attrib-starts': [],
        'code-line': '\x89PNG\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('tune.py'): {'attrib-starts': [('Plotter|0|',
        162),
        ('Plotter|0|.__init__|0|',
         167)],
        'code-line': '        self.ext  = ext\r\n',
        'first-line': 170,
        'folded-linenos': [],
        'sel-line': 173,
        'sel-line-start': 6626,
        'selection_end': 6637,
        'selection_start': 6637,
        'zoom': 0}}
proj.pyexec = {None: ('custom',
                      'c:\\Users\\Weka\\AppData\\Local\\Programs\\Python\\Python38\\python.exe')}
search.search-history = ['legend',
                         '784',
                         'load']
