#!wing
#!version=8.0
##################################################################
# Wing project file                                              #
##################################################################
[project attributes]
proj.directory-list = [{'dirloc': loc('.'),
                        'excludes': ['validation.pt',
                                     'training-lr(0.001).png',
                                     'train.pt',
                                     'ae.py',
                                     'training-dim(4)-lr(0.001).png',
                                     'saved-lr(0.001).pt',
                                     'saved-lr(0.0005).pt',
                                     'saved-lr(0.002).pt',
                                     'saved-dim(4)-lr(0.001).pt',
                                     'freqs.png',
                                     'training-lr(0.0005).png',
                                     'training-lr(0.01).png',
                                     'training-lr(0.002).png',
                                     'saved-lr(0.01).pt',
                                     'train.csv'],
                        'filter': '*',
                        'include_hidden': False,
                        'recursive': True,
                        'watch_for_changes': True}]
proj.file-type = 'normal'
proj.launch-config = {loc('ae.py'): ('project',
                                     ('--help',
                                      '')),
                      loc('extract.py'): ('project',
        ('--data train.pt --plot3d',
         '')),
                      loc('prepare.py'): ('project',
        ('--show',
         '')),
                      loc('tune.py'): ('project',
                                       ('--show --lr 0.001 --dimension 3',
        ''))}
[user attributes]
debug.recent-run-args = {loc('ae.py'): ['--help'],
                         loc('extract.py'): ['--data train.pt --plot3d',
        '--output train.pt',
        '--help'],
                         loc('prepare.py'): ['--show',
        '--s',
        '--help'],
                         loc('tune.py'): ['--show --lr 0.001 --dimension 3',
        '--show --lr 0.001 --dimension 4',
        '--show --lr 0.001',
        '--show --lr 0.01',
        '--show --lr 0.1',
        '--show -lr 0.01',
        '--show',
        '--lr 0.0001 --show',
        '--lr 0.0005',
        '-h']}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'dtaAtJloNhSft7SabFzspl0xqEmVIDbK',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.25,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [(2,)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('../../../../Program Files (x86)/Wing Personal 8/resources/typeshed/stdlib/3/builtins.pyi'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../Program Files (x86)/Wing Personal 8/resources/typeshed/stdlib/3/builtins.pyi'),
                      'BlockingIOError')]},
        loc('../../AppData/Local/Programs/Python/Python38/Lib/argparse.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python38/Lib/argparse.py'),
                      'Action')]},
        loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/artist.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/artist.py'),
                      'allow_rasterization')]},
        loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/backend_bases.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/backend_bases.py'),
                      'button_press_handler')]},
        loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/colors.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/colors.py'),
                             '_warn_if_global_cmap_modified')]],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/colors.py'),
                      'BoundaryNorm')]},
        loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/lines.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/lines.py'),
                      'drawStyles')]},
        loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/pyplot.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/pyplot.py'),
                      'acorr')]},
        loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/nn/modules/linear.py'): {'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/nn/modules/linear.py'),
                             'Linear')]],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/nn/modules/linear.py'),
                      'Bilinear')]},
        loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/nn/modules/module.py'): {'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/nn/modules/module.py'),
                             '_IncompatibleKeys')]],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/nn/modules/module.py'),
                      'Module')]},
        loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/serialization.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/serialization.py'),
                      'check_module_version_greater_or_equal')]},
        loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/utils/data/dataloader.py'): {'expanded-nodes': [[('class def',
        loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/utils/data/dataloader.py'),
        'DataLoader')]],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/utils/data/dataloader.py'),
                      'DataLoader')]},
        loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/utils/data/sampler.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/utils/data/sampler.py'),
                      'BatchSampler')]},
        loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/tensorflow/python/framework/func_graph.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/tensorflow/python/framework/func_graph.py'),
                      'check_mutation')]},
        loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/tensorflow/python/keras/layers/core.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/tensorflow/python/keras/layers/core.py'),
                      'Activation')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/PIL/Image.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/PIL/Image.py'),
                      'ADAPTIVE')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/artist.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/artist.py'),
                      'allow_rasterization')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_axes.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_axes.py'),
                      'Axes')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_base.py'),
                      '_AxesBase')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/gridspec.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/gridspec.py'),
                      'GridSpec')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/pyplot.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/pyplot.py'),
                      'acorr')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/texmanager.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/texmanager.py'),
                      'TexManager')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/numpy/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/numpy/conftest.py'),
                      '')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/pandas/core/generic.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/pandas/core/generic.py'),
                      'bool_t')]},
        loc('../../anaconda3/Lib/_collections_abc.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../anaconda3/Lib/_collections_abc.py'),
                      'AsyncGenerator')]},
        loc('../LeNet5.py'): {'expanded-nodes': [],
                              'selected-nodes': [],
                              'top-node': [('generic attribute',
        loc('../LeNet5.py'),
        'accuracy')]},
        loc('../README.md'): {'expanded-nodes': [],
                              'selected-nodes': [],
                              'top-node': None},
        loc('../ae.py'): {'expanded-nodes': [],
                          'selected-nodes': [],
                          'top-node': [('generic attribute',
        loc('../ae.py'),
        'args')]},
        loc('../bayes1.py'): {'expanded-nodes': [],
                              'selected-nodes': [],
                              'top-node': [('generic attribute',
        loc('../bayes1.py'),
        'alphas')]},
        loc('../cavi1.py'): {'expanded-nodes': [],
                             'selected-nodes': [],
                             'top-node': [('generic attribute',
        loc('../cavi1.py'),
        'args')]},
        loc('../cavi3.py'): {'expanded-nodes': [],
                             'selected-nodes': [None],
                             'top-node': None},
        loc('../em.py'): {'expanded-nodes': [],
                          'selected-nodes': [],
                          'top-node': [('generic attribute',
        loc('../em.py'),
        'args')]},
        loc('../fashion.py'): {'expanded-nodes': [],
                               'selected-nodes': [[('generic attribute',
        loc('../fashion.py'),
        '_')]],
                               'top-node': [('generic attribute',
        loc('../fashion.py'),
        'class_names')]},
        loc('../fcs.py'): {'expanded-nodes': [],
                           'selected-nodes': [None],
                           'top-node': None},
        loc('../fcs/README.md'): {'expanded-nodes': [],
                                  'selected-nodes': [],
                                  'top-node': None},
        loc('../fcs/fcs.py'): {'expanded-nodes': [],
                               'selected-nodes': [],
                               'top-node': [('generic attribute',
        loc('../fcs/fcs.py'),
        'args')]},
        loc('../fcs/gcps.py'): {'expanded-nodes': [],
                                'selected-nodes': [],
                                'top-node': [('generic attribute',
        loc('../fcs/gcps.py'),
        'a')]},
        loc('../fcs/partition.py'): {'expanded-nodes': [],
                                     'selected-nodes': [],
                                     'top-node': [('generic attribute',
        loc('../fcs/partition.py'),
        'args')]},
        loc('../fcs/plotreds.py'): {'expanded-nodes': [],
                                    'selected-nodes': [],
                                    'top-node': [('generic attribute',
        loc('../fcs/plotreds.py'),
        'args')]},
        loc('../flowers.py'): {'expanded-nodes': [],
                               'selected-nodes': [[('generic attribute',
        loc('../flowers.py'),
        '_')]],
                               'top-node': [('generic attribute',
        loc('../flowers.py'),
        'args')]},
        loc('../gibbs.py'): {'expanded-nodes': [],
                             'selected-nodes': [],
                             'top-node': [('generic attribute',
        loc('../gibbs.py'),
        'a')]},
        loc('../hopfield.py'): {'expanded-nodes': [],
                                'selected-nodes': [],
                                'top-node': [('generic attribute',
        loc('../hopfield.py'),
        'dE')]},
        loc('../train.py'): {'expanded-nodes': [],
                             'selected-nodes': [[('generic attribute',
        loc('../train.py'),
        '_')]],
                             'top-node': [('generic attribute',
        loc('../train.py'),
        'alpha')]},
        loc('../untitled-1.py'): {'expanded-nodes': [],
                                  'selected-nodes': [[('generic attribute',
        loc('../untitled-1.py'),
        'E')]],
                                  'top-node': [('generic attribute',
        loc('../untitled-1.py'),
        'ax')]},
        loc('../untitled-2.py'): {'expanded-nodes': [],
                                  'selected-nodes': [[('generic attribute',
        loc('../untitled-2.py'),
        'Z')]],
                                  'top-node': [('generic attribute',
        loc('../untitled-2.py'),
        'angle')]},
        loc('AutoEncoder.py'): {'expanded-nodes': [[('class def',
        loc('AutoEncoder.py'),
        'Plot')]],
                                'selected-nodes': [[('generic attribute',
        loc('AutoEncoder.py'),
        'transform')]],
                                'top-node': [('generic attribute',
        loc('AutoEncoder.py'),
        'args')]},
        loc('README.md'): {'expanded-nodes': [],
                           'selected-nodes': [],
                           'top-node': None},
        loc('extract.py'): {'expanded-nodes': [],
                            'selected-nodes': [],
                            'top-node': [('generic attribute',
        loc('extract.py'),
        'args')]},
        loc('prepare.py'): {'expanded-nodes': [],
                            'selected-nodes': [[('generic attribute',
        loc('prepare.py'),
        'validation')]],
                            'top-node': [('generic attribute',
        loc('prepare.py'),
        'args')]},
        loc('train.py'): {'expanded-nodes': [],
                          'selected-nodes': [],
                          'top-node': [('generic attribute',
        loc('train.py'),
        'args')]},
        loc('tune.py'): {'expanded-nodes': [],
                         'selected-nodes': [],
                         'top-node': [('generic attribute',
                                       loc('tune.py'),
                                       'args')]},
        loc('unknown:<untitled> #1'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('function def',
        loc('unknown:<untitled> #2'),
        'parse_args')]},
        loc('unknown:<untitled> #3'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('generic attribute',
        loc('unknown:<untitled> #4'),
        'E')]},
        loc('unknown:<untitled> #5'): {'expanded-nodes': [],
                                       'selected-nodes': [[('generic attribute',
        loc('unknown:<untitled> #6'),
        'Z')]],
                                       'top-node': [('generic attribute',
        loc('unknown:<untitled> #7'),
        'angle')]},
        loc('unknown:<untitled> #8'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': None}},
                                'browse_mode': 'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {'Derived Classes': False,
        'Imported': False,
        'Modules': True}}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [3,
                          0],
        'notebook_display': 'normal',
        'notebook_percent': 0.30000000000000004,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': '784',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': 'args.root',
                                       'fReverse': False,
                                       'fSearchText': 'legend',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': 'from os.path import splitext\r\n',
                       'first-line': 8,
                       'folded-linenos': [],
                       'history': {None: ['from os.path           import basename\n',
        "basename('foo.bar.baz')\n",
        "basename('foo.bar')\n",
        'from pathlib import Path\n',
        "Path.stem('foo.bar.baz')\n",
        'from os.path import splitext\n',
        "splitext('foo.bar.baz')\n"]},
                       'launch-id': None,
                       'sel-line': 12,
                       'sel-line-start': 441,
                       'selection_end': 469,
                       'selection_start': 461,
                       'zoom': 0}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('os-command',
                      'wide',
                      1,
                      {'last-percent': 0.8,
                       'toolbox-percent': 1.0,
                       'toolbox-tree-sel': ''})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('extract.py'),
        {'attrib-starts': [],
         'code-line': '        ax.scatter3D(xs,ys,zs, c=cs,s=1)\r\n',
         'first-line': 93,
         'folded-linenos': [],
         'sel-line': 113,
         'sel-line-start': 4114,
         'selection_end': 4153,
         'selection_start': 4153,
         'zoom': 0},
        1641850068.093831],
        [loc('AutoEncoder.py'),
         {'attrib-starts': [],
          'code-line': 'from matplotlib.lines       import Line2D\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 20,
          'sel-line-start': 958,
          'selection_end': 999,
          'selection_start': 993,
          'zoom': 0},
         1641850081.973949],
        [loc('AutoEncoder.py'),
         {'attrib-starts': [],
          'code-line': 'from matplotlib.lines       import Line2D\r\n',
          'first-line': 506,
          'folded-linenos': [],
          'sel-line': 20,
          'sel-line-start': 958,
          'selection_end': 999,
          'selection_start': 993,
          'zoom': 0},
         1641850147.0990267],
        [loc('tune.py'),
         {'attrib-starts': [],
          'code-line': 'from matplotlib.pyplot import close, figure, legend, plot, savefig, show, title\r\n',
          'first-line': 182,
          'folded-linenos': [],
          'sel-line': 22,
          'sel-line-start': 882,
          'selection_end': 925,
          'selection_start': 883,
          'zoom': 0},
         1641850151.2093244],
        [loc('extract.py'),
         {'attrib-starts': [],
          'code-line': '  \r\n',
          'first-line': 82,
          'folded-linenos': [],
          'sel-line': 90,
          'sel-line-start': 3259,
          'selection_end': 3261,
          'selection_start': 3261,
          'zoom': 0},
         1641850192.645617],
        [loc('extract.py'),
         {'attrib-starts': [],
          'code-line': 'from AutoEncoder       import AutoEncoder\r\n',
          'first-line': 4,
          'folded-linenos': [],
          'sel-line': 20,
          'sel-line-start': 784,
          'selection_end': 825,
          'selection_start': 825,
          'zoom': 0},
         1641850231.130822],
        [loc('extract.py'),
         {'attrib-starts': [],
          'code-line': "                            label  = f'{k}') for k in range(len(Colours))])\r\n",
          'first-line': 102,
          'folded-linenos': [],
          'sel-line': 120,
          'sel-line-start': 4351,
          'selection_end': 4422,
          'selection_start': 4422,
          'zoom': 0},
         1641850823.4420214],
        [loc('extract.py'),
         {'attrib-starts': [('replace_ext|0|',
                             59)],
          'code-line': '    first = file_name\r\n',
          'first-line': 54,
          'folded-linenos': [],
          'sel-line': 60,
          'sel-line-start': 2248,
          'selection_end': 2269,
          'selection_start': 2269,
          'zoom': 0},
         1641850987.7702262],
        [loc('extract.py'),
         {'attrib-starts': [],
          'code-line': 'from os.path           import splitext\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 25,
          'sel-line-start': 995,
          'selection_end': 1033,
          'selection_start': 1033,
          'zoom': 0},
         1641851301.3597248],
        [loc('extract.py'),
         {'attrib-starts': [],
          'code-line': '        zs  = []\r\n',
          'first-line': 82,
          'folded-linenos': [],
          'sel-line': 92,
          'sel-line-start': 3445,
          'selection_end': 3461,
          'selection_start': 3461,
          'zoom': 0},
         1641851539.193136],
        [loc('extract.py'),
         {'attrib-starts': [],
          'code-line': 'from matplotlib.pyplot import axes, figure, savefig, show\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 22,
          'sel-line-start': 865,
          'selection_end': 918,
          'selection_start': 918,
          'zoom': 0},
         1641851558.5064805],
        [loc('extract.py'),
         {'attrib-starts': [],
          'code-line': '        ax.set_title(args.data)\r\n',
          'first-line': 110,
          'folded-linenos': [],
          'sel-line': 124,
          'sel-line-start': 4612,
          'selection_end': 4627,
          'selection_start': 4627,
          'zoom': 0},
         1641851853.420368],
        [loc('extract.py'),
         {'attrib-starts': [],
          'code-line': '                            DataLoader(load(args.data),\r\n',
          'first-line': 89,
          'folded-linenos': [],
          'sel-line': 112,
          'sel-line-start': 4031,
          'selection_end': 4069,
          'selection_start': 4059,
          'zoom': 0},
         1641856076.1715853],
        [loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/utils/data/dataloader.py'),
         {'attrib-starts': [],
          'code-line': 'class DataLoader(Generic[T_co]):\r\n',
          'first-line': 71,
          'folded-linenos': [],
          'sel-line': 70,
          'sel-line-start': 2454,
          'selection_end': 2470,
          'selection_start': 2460,
          'zoom': 0},
         1641856104.15671],
        [loc('extract.py'),
         {'attrib-starts': [],
          'code-line': '            show()\r\n',
          'first-line': 107,
          'folded-linenos': [],
          'sel-line': 133,
          'sel-line-start': 5021,
          'selection_end': 5039,
          'selection_start': 5039,
          'zoom': 0},
         1641856228.1211672],
        [loc('extract.py'),
         {'attrib-starts': [],
          'code-line': '            show()\r\n',
          'first-line': 65,
          'folded-linenos': [],
          'sel-line': 133,
          'sel-line-start': 5021,
          'selection_end': 5039,
          'selection_start': 5039,
          'zoom': 0},
         1641856231.7095692],
        [loc('extract.py'),
         {'attrib-starts': [],
          'code-line': '            show()\r\n',
          'first-line': 110,
          'folded-linenos': [],
          'sel-line': 133,
          'sel-line-start': 5021,
          'selection_end': 5039,
          'selection_start': 5039,
          'zoom': 0},
         1641856259.991614],
        [loc('extract.py'),
         {'attrib-starts': [],
          'code-line': '            show()\r\n',
          'first-line': 86,
          'folded-linenos': [],
          'sel-line': 133,
          'sel-line-start': 5021,
          'selection_end': 5039,
          'selection_start': 5039,
          'zoom': 0},
         1641856330.641968],
        [loc('prepare.py'),
         {'attrib-starts': [],
          'code-line': 'from matplotlib.pyplot      import figure, hist, legend, savefig, show, title, xticks\r\n',
          'first-line': 16,
          'folded-linenos': [],
          'sel-line': 21,
          'sel-line-start': 885,
          'selection_end': 920,
          'selection_start': 920,
          'zoom': 0},
         1641856341.3611603],
        [loc('prepare.py'),
         {'attrib-starts': [],
          'code-line': 'from matplotlib.pyplot      import figure, hist, legend, savefig, show, title, xticks\r\n',
          'first-line': 52,
          'folded-linenos': [],
          'sel-line': 21,
          'sel-line-start': 885,
          'selection_end': 920,
          'selection_start': 920,
          'zoom': 0},
         1641856408.3414235]],
        20),
        'current-loc': loc('extract.py'),
        'editor-state-list': [(loc('AutoEncoder.py'),
                               {'attrib-starts': [],
                                'code-line': 'from matplotlib.lines       import Line2D\r\n',
                                'first-line': 506,
                                'folded-linenos': [],
                                'sel-line': 20,
                                'sel-line-start': 958,
                                'selection_end': 999,
                                'selection_start': 993,
                                'zoom': 0}),
                              (loc('extract.py'),
                               {'attrib-starts': [],
                                'code-line': "            'xkcd:green',\r\n",
                                'first-line': 82,
                                'folded-linenos': [],
                                'sel-line': 101,
                                'sel-line-start': 3739,
                                'selection_end': 3764,
                                'selection_start': 3764,
                                'zoom': 0}),
                              (loc('prepare.py'),
                               {'attrib-starts': [],
                                'code-line': 'from matplotlib.pyplot      import figure, hist, legend, savefig, show, title, xticks\r\n',
                                'first-line': 52,
                                'folded-linenos': [],
                                'sel-line': 21,
                                'sel-line-start': 885,
                                'selection_end': 920,
                                'selection_start': 920,
                                'zoom': 0}),
                              (loc('tune.py'),
                               {'attrib-starts': [],
                                'code-line': 'from matplotlib.pyplot import close, figure, legend, plot, savefig, show, title\r\n',
                                'first-line': 182,
                                'folded-linenos': [],
                                'sel-line': 22,
                                'sel-line-start': 882,
                                'selection_end': 925,
                                'selection_start': 883,
                                'zoom': 0})],
        'has-focus': True,
        'locked': False},
        [loc('AutoEncoder.py'),
         loc('extract.py'),
         loc('prepare.py'),
         loc('tune.py')]),
                               'open_files': ['AutoEncoder.py',
        'tune.py',
        'prepare.py',
        'extract.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.5},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((0,
                           3),
                          1641856439.2507284),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {},
                 'splits': 1,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    0),
                                   1641856328.1218152),
                 'user_data': {}},
        'window-alloc': (-131,
                         33,
                         1548,
                         834)}]}
guimgr.recent-documents = [loc('extract.py'),
                           loc('prepare.py'),
                           loc('tune.py'),
                           loc('AutoEncoder.py')]
guimgr.visual-state = {loc('../../../../Program Files (x86)/Wing Personal 8/resources/typeshed/stdlib/3/multiprocessing/__init__.pyi'): {'attrib-starts': [],
        'code-line': 'def cpu_count() -> int: ...\n',
        'first-line': 43,
        'folded-linenos': [],
        'sel-line': 58,
        'sel-line-start': 2676,
        'selection_end': 2689,
        'selection_start': 2680,
        'zoom': 0},
                       loc('../../AppData/Local/Programs/Python/Python38/Lib/argparse.py'): {'attrib-starts': [('_ActionsContainer|0|',
        1252),
        ('_ActionsContainer|0|.add_argument|0|',
         1336)],
        'code-line': '        action = action_class(**kwargs)\r\n',
        'first-line': 1362,
        'folded-linenos': [],
        'sel-line': 1367,
        'sel-line-start': 49699,
        'selection_end': 49699,
        'selection_start': 49699,
        'zoom': 0},
                       loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/backend_bases.py'): {'attrib-starts': [('FigureCanvasBase|0|',
        1643),
        ('FigureCanvasBase|0|._get_output_canvas|0|',
         2046)],
        'code-line': '        raise ValueError(\r\n',
        'first-line': 2064,
        'folded-linenos': [],
        'sel-line': 2078,
        'sel-line-start': 74570,
        'selection_end': 74570,
        'selection_start': 74570,
        'zoom': 0},
                       loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/pyplot.py'): {'attrib-starts': [],
        'code-line': 'def close(fig=None):\r\n',
        'first-line': 778,
        'folded-linenos': [],
        'sel-line': 793,
        'sel-line-start': 26468,
        'selection_end': 26477,
        'selection_start': 26472,
        'zoom': 0},
                       loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/serialization.py'): {'attrib-starts': [('_open_file|0|',
        208),
        ('_open_file|0|.__init__|0|',
         209)],
        'code-line': '        super(_open_file, self).__init__(open(name, mode))\r\n',
        'first-line': 205,
        'folded-linenos': [],
        'sel-line': 210,
        'sel-line-start': 6698,
        'selection_end': 6698,
        'selection_start': 6698,
        'zoom': 0},
                       loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/utils/data/dataloader.py'): {'attrib-starts': [],
        'code-line': 'class DataLoader(Generic[T_co]):\r\n',
        'first-line': 71,
        'folded-linenos': [],
        'sel-line': 70,
        'sel-line-start': 2454,
        'selection_end': 2470,
        'selection_start': 2460,
        'zoom': 0},
                       loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/torchvision/datasets/mnist.py'): {'attrib-starts': [],
        'code-line': 'class MNIST(VisionDataset):\r\n',
        'first-line': 2,
        'folded-linenos': [],
        'sel-line': 15,
        'sel-line-start': 382,
        'selection_end': 393,
        'selection_start': 388,
        'zoom': 0},
                       loc('AutoEncoder.py'): {'attrib-starts': [('AutoEncoder|0|',
        36)],
        'code-line': '                 encoding_dimension    = 6,\r\n',
        'first-line': 182,
        'folded-linenos': [],
        'sel-line': 72,
        'sel-line-start': 3193,
        'selection_end': 3228,
        'selection_start': 3210,
        'zoom': 0},
                       loc('README.md'): {'attrib-starts': [],
        'code-line': 'train.py|Use compressed data for training digit recognizer (WIP)\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 10,
        'sel-line-start': 316,
        'selection_end': 374,
        'selection_start': 325,
        'zoom': 0},
                       loc('ae.py'): {'attrib-starts': [],
                                      'code-line': '',
                                      'first-line': 0,
                                      'folded-linenos': [],
                                      'sel-line': 0,
                                      'sel-line-start': 0,
                                      'selection_end': 0,
                                      'selection_start': 0,
                                      'zoom': 0},
                       loc('extract.py'): {'attrib-starts': [('create_model|0|',
        25)],
        'code-line': "                       encoding_dimension    = old_args['dimension'],\r\n",
        'first-line': 18,
        'folded-linenos': [],
        'sel-line': 32,
        'sel-line-start': 1243,
        'selection_end': 1285,
        'selection_start': 1285,
        'zoom': 0},
                       loc('prepare.py'): {'attrib-starts': [],
        'code-line': 'from matplotlib.pyplot      import figure, hist, legend, savefig, show, title, xticks\r\n',
        'first-line': 16,
        'folded-linenos': [],
        'sel-line': 21,
        'sel-line-start': 885,
        'selection_end': 920,
        'selection_start': 920,
        'zoom': 0},
                       loc('train.py'): {'attrib-starts': [],
        'code-line': '    Use compressed data for training digit recognizer\r\n',
        'first-line': 6,
        'folded-linenos': [],
        'sel-line': 16,
        'sel-line-start': 693,
        'selection_end': 746,
        'selection_start': 746,
        'zoom': 0},
                       loc('tune.py'): {'attrib-starts': [('get_file_name|0|',
        150)],
        'code-line': "    base      = f'{name}-dim({dimension})-lr({lr})'\r\n",
        'first-line': 128,
        'folded-linenos': [],
        'sel-line': 151,
        'sel-line-start': 5936,
        'selection_end': 5955,
        'selection_start': 5955,
        'zoom': 0}}
proj.pyexec = {None: ('custom',
                      'c:\\Users\\Weka\\AppData\\Local\\Programs\\Python\\Python38\\python.exe')}
search.search-history = ['legend',
                         '784',
                         'load']
