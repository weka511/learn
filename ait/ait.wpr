#!wing
#!version=8.0
##################################################################
# Wing project file                                              #
##################################################################
[project attributes]
proj.file-list = [loc('exercises.py'),
                  loc('ExploreExploit.py')]
proj.file-type = 'normal'
[user attributes]
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'zRuoo7lo1K5bGtfhUhOsW4cZwV1Zxhqw',
        'size-state': '',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.25,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [(1,)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('../../../Program Files (x86)/Wing Personal 7.2/resources/builtin-pi-files/__os__/win32/3.8/builtins.pi'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../Program Files (x86)/Wing Personal 7.2/resources/builtin-pi-files/__os__/win32/3.8/builtins.pi'),
                      'abs')]},
        loc('../../../Program Files (x86)/Wing Personal 7.2/resources/typeshed/stdlib/3/random.pyi'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../../Program Files (x86)/Wing Personal 7.2/resources/typeshed/stdlib/3/random.pyi'),
                             '_T')]],
        'top-node': [('function def',
                      loc('../../../Program Files (x86)/Wing Personal 7.2/resources/typeshed/stdlib/3/random.pyi'),
                      'betavariate')]},
        loc('../../astro/make_img.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../../astro/make_img.py'),
                             'plot')]],
        'top-node': [('generic attribute',
                      loc('../../astro/make_img.py'),
                      'config_path')]},
        loc('../../astro/plot_points.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../astro/plot_points.py'),
                             'y3s')]],
        'top-node': [('generic attribute',
                      loc('../../astro/plot_points.py'),
                      'i')]},
        loc('../../bioinformatics/DBRU.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../bioinformatics/DBRU.py'),
                      'a')]},
        loc('../../bioinformatics/GREP.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../bioinformatics/GREP.py'),
                      'count_kmers')]},
        loc('../../bioinformatics/PCOV.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../bioinformatics/PCOV.py'),
                      'pcov')]},
        loc('../../bioinformatics/rosalind.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../bioinformatics/rosalind.py'),
                      'dbru')]},
        loc('../../dynamics/bacteria.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../dynamics/bacteria.py'),
                      'bacteria')]},
        loc('../../dynamics/barnes_hut.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../../dynamics/barnes_hut.py'),
                             'add')]],
        'top-node': [('function def',
                      loc('../../dynamics/barnes_hut.py'),
                      'add')]},
        loc('../../dynamics/chaos_book/hw1Rossler/README.md'): {'expanded-nodes': [],
        'selected-nodes': [None],
        'top-node': None},
        loc('../../dynamics/chaos_book/hw1Rossler/RungeKutta.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../dynamics/chaos_book/hw1Rossler/RungeKutta.py'),
                             'xSolution')]],
        'top-node': [('generic attribute',
                      loc('../../dynamics/chaos_book/hw1Rossler/RungeKutta.py'),
                      'Nt')]},
        loc('../../dynamics/lbmFlowAroundCylinder.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../dynamics/lbmFlowAroundCylinder.py'),
                      'col1')]},
        loc('../../dynamics/lv.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': None},
        loc('../../dynamics/parityRule.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../dynamics/parityRule.py'),
                      'i')]},
        loc('../../dynamics/strogatz/README.md'): {'expanded-nodes': [],
        'selected-nodes': [None],
        'top-node': None},
        loc('../../dynamics/strogatz/strogatz_6_1.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../dynamics/strogatz/strogatz_6_1.py'),
                             '_')]],
        'top-node': [('generic attribute',
                      loc('../../dynamics/strogatz/strogatz_6_1.py'),
                      'eps')]},
        loc('../../dynamics/strogatz_6_1.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../dynamics/strogatz_6_1.py'),
                      'eps')]},
        loc('../../dynamics/strogatz_6_5_19.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../dynamics/trafficLights.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../dynamics/trafficLights.py'),
                      'CAR')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/inspect.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../AppData/Local/Programs/Python/Python38/Lib/inspect.py'),
                             '__author__')]],
        'top-node': [('generic attribute',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/inspect.py'),
                      'ArgInfo')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/ntpath.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/ntpath.py'),
                      'abspath')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/random.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../Program Files (x86)/Wing Personal 7.2/resources/typeshed/stdlib/3/random.pyi'),
                      'betavariate')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/PIL/Image.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/PIL/Image.py'),
                      'ADAPTIVE')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/PIL/ImageFile.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/PIL/ImageFile.py'),
                      'ERRORS')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/hpacellseg/cellsegmentator.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/hpacellseg/cellsegmentator.py'),
                      'CellSegmentator')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/hpacellseg/utils.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/hpacellseg/utils.py'),
                      'download_with_url')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/imageio/core/request.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/imageio/core/request.py'),
                      'EXAMPLE_IMAGES')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/afm.py'),
                      '')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/axes/_axes.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/axes/_axes.py'),
                      'Axes')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/axes/_base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/axes/_base.py'),
                      '_AxesBase')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/backend_bases.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/backend_bases.py'),
                      'button_press_handler')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/colorbar.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/colorbar.py'),
                             '_set_ticks_on_axis_warn')]],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/colorbar.py'),
                      'Colorbar')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/colors.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/colors.py'),
                      'BoundaryNorm')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/figure.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/figure.py'),
                      'AxesStack')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/gridspec.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/gridspec.py'),
                      'GridSpec')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/image.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/image.py'),
                             '_rgb_to_rgba')]],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/image.py'),
                      'AxesImage')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/patches.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/patches.py'),
                      'Arc')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/pyplot.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/pyplot.py'),
                      'acorr')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/transforms.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/transforms.py'),
                      'Affine2D')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/numpy/core/_methods.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/numpy/core/_methods.py'),
                             '_var')]],
        'top-node': [('generic attribute',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/numpy/core/_methods.py'),
                      'umr_all')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/numpy/core/fromnumeric.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/numpy/core/fromnumeric.py'),
                      'alen')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/numpy/lib/npyio.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/numpy/lib/npyio.py'),
                      'array_function_dispatch')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/pandas/core/internals/construction.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/pandas/core/internals/construction.py'),
                      'arrays_to_mgr')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/scipy/ndimage/interpolation.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/scipy/ndimage/interpolation.py'),
                      'affine_transform')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/scipy/spatial/_plotutils.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/scipy/spatial/_plotutils.py'),
                             '__all__')]],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/scipy/spatial/_plotutils.py'),
                      'convex_hull_plot_2d')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/nn/functional.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/nn/functional.py'),
                      'adaptive_avg_pool1d')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/nn/modules/conv.py'): {'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/nn/modules/conv.py'),
                             '_ConvTransposeNd')]],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/nn/modules/conv.py'),
                      'Conv1d')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/serialization.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/serialization.py'),
                      'check_module_version_greater_or_equal')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/traceback.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../AppData/Local/Programs/Python/Python38/Lib/traceback.py'),
                             '__all__')]],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/traceback.py'),
                      'clear_frames')]},
        loc('../AppData/Local/Wing Personal 7/pi-cache/3.8/C/Users/Weka/AppData/Local/Programs/Python/Python38/Lib/site-packages/numpy/core/_multiarray_umath.pi'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Wing Personal 7/pi-cache/3.8/C/Users/Weka/AppData/Local/Programs/Python/Python38/Lib/site-packages/numpy/core/_multiarray_umath.pi'),
                      'absolute')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/PIL/ImageFile.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Roaming/Python/Python38/site-packages/PIL/ImageFile.py'),
                      'ERRORS')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/image.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/image.py'),
                      'AxesImage')]},
        loc('../hpa-scc/CellSegmentatorTest.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../hpa-scc/CellSegmentatorTest.py'),
                      'ax')]},
        loc('../hpa-scc/README.md'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': None},
        loc('../hpa-scc/analyze-labels.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../hpa-scc/analyze-labels.py'),
                             'csvfile')]],
        'top-node': [('generic attribute',
                      loc('../hpa-scc/analyze-labels.py'),
                      'args')]},
        loc('../hpa-scc/census.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('generic attribute',
        loc('../hpa-scc/census.py'),
        'axs')]},
        loc('../hpa-scc/dirichlet.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../hpa-scc/dirichlet.py'),
                             'get_dist')]],
        'top-node': [('generic attribute',
                      loc('../hpa-scc/dirichlet.py'),
                      'args')]},
        loc('../hpa-scc/encoder.py'): {'expanded-nodes': [],
                                       'selected-nodes': [None],
                                       'top-node': None},
        loc('../hpa-scc/ex.py'): {'expanded-nodes': [],
                                  'selected-nodes': [],
                                  'top-node': None},
        loc('../hpa-scc/hpascc.py'): {'expanded-nodes': [],
                                      'selected-nodes': [[('function def',
        loc('../hpa-scc/hpascc.py'),
        'read_training_expectations')]],
                                      'top-node': [('generic attribute',
        loc('../hpa-scc/hpascc.py'),
        'BLUE')]},
        loc('../hpa-scc/image_seg.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../hpa-scc/image_seg.py'),
                             'info')]],
        'top-node': [('generic attribute',
                      loc('../hpa-scc/image_seg.py'),
                      'dataset')]},
        loc('../hpa-scc/logs.py'): {'expanded-nodes': [],
                                    'selected-nodes': [[('function def',
        loc('../hpa-scc/logs.py'),
        'expand')]],
                                    'top-node': [('generic attribute',
        loc('../hpa-scc/logs.py'),
        'args')]},
        loc('../hpa-scc/old/README.md'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../hpa-scc/old/train2.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../hpa-scc/old/train2.py'),
                             'restart')]],
        'top-node': [('generic attribute',
                      loc('../hpa-scc/old/train2.py'),
                      'args')]},
        loc('../hpa-scc/old/visualize.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../hpa-scc/old/vizcnn.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../hpa-scc/old/vizcnn.py'),
                      'args')]},
        loc('../hpa-scc/otsu.py'): {'expanded-nodes': [],
                                    'selected-nodes': [[('function def',
        loc('../hpa-scc/otsu.py'),
        'get_thinned')]],
                                    'top-node': [('generic attribute',
        loc('../hpa-scc/otsu.py'),
        'BLUE')]},
        loc('../hpa-scc/seg.py'): {'expanded-nodes': [],
                                   'selected-nodes': [],
                                   'top-node': [('generic attribute',
        loc('../hpa-scc/seg.py'),
        'cell_mask')]},
        loc('../hpa-scc/segment.py'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('function def',
        loc('../hpa-scc/segment.py'),
        'apply_masks')]},
        loc('../hpa-scc/select_images.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../hpa-scc/select_images.py'),
                      'args')]},
        loc('../hpa-scc/slice.py'): {'expanded-nodes': [],
                                     'selected-nodes': [[('function def',
        loc('../hpa-scc/slice.py'),
        'create_image_target')]],
                                     'top-node': [('generic attribute',
        loc('../hpa-scc/slice.py'),
        'args')]},
        loc('../hpa-scc/slice2.py'): {'expanded-nodes': [],
                                      'selected-nodes': [[('function def',
        loc('../hpa-scc/slice2.py'),
        'create_image_target')]],
                                      'top-node': [('generic attribute',
        loc('../hpa-scc/slice2.py'),
        'args')]},
        loc('../hpa-scc/spike5.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('generic attribute',
        loc('../hpa-scc/spike5.py'),
        'axs')]},
        loc('../hpa-scc/spike6.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('generic attribute',
        loc('../hpa-scc/spike6.py'),
        'axs')]},
        loc('../hpa-scc/spike7.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('generic attribute',
        loc('../hpa-scc/spike7.py'),
        'axs')]},
        loc('../hpa-scc/spike8.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('generic attribute',
        loc('../hpa-scc/spike8.py'),
        'axs')]},
        loc('../hpa-scc/spikes/spike6.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../hpa-scc/spikes/spike6.py'),
                             'nrows')]],
        'top-node': [('generic attribute',
                      loc('../hpa-scc/spikes/spike6.py'),
                      'axs')]},
        loc('../hpa-scc/spikes/spike7.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../hpa-scc/spikes/spike7.py'),
                             'nrows')]],
        'top-node': [('generic attribute',
                      loc('../hpa-scc/spikes/spike7.py'),
                      'axs')]},
        loc('../hpa-scc/spikes/spike8.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../hpa-scc/spikes/spike8.py'),
                             'y0')]],
        'top-node': [('generic attribute',
                      loc('../hpa-scc/spikes/spike8.py'),
                      'axs')]},
        loc('../hpa-scc/spikes/watershed.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../hpa-scc/spikes/watershed.py'),
                      'args')]},
        loc('../hpa-scc/split.py'): {'expanded-nodes': [],
                                     'selected-nodes': [],
                                     'top-node': [('generic attribute',
        loc('../hpa-scc/split.py'),
        'args')]},
        loc('../hpa-scc/submission.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../hpa-scc/train.py'): {'expanded-nodes': [[('class def',
        loc('../hpa-scc/train.py'),
        'CellDataset')],
        [('class def',
          loc('../hpa-scc/train.py'),
          'Net')]],
                                     'selected-nodes': [[('class def',
        loc('../hpa-scc/train.py'),
        'Net')]],
                                     'top-node': [('generic attribute',
        loc('../hpa-scc/train.py'),
        'args')]},
        loc('../hpa-scc/train2.py'): {'expanded-nodes': [],
                                      'selected-nodes': [[('function def',
        loc('../hpa-scc/train2.py'),
        'restart')]],
                                      'top-node': [('generic attribute',
        loc('../hpa-scc/train2.py'),
        'args')]},
        loc('../hpa-scc/utils.py'): {'expanded-nodes': [],
                                     'selected-nodes': [],
                                     'top-node': [('function def',
        loc('../hpa-scc/utils.py'),
        'create_xkcd_colours')]},
        loc('../hpa-scc/visualize.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../hpa-scc/visualize.py'),
                             'Training')]],
        'top-node': [('generic attribute',
                      loc('../hpa-scc/visualize.py'),
                      'args')]},
        loc('../hpa-scc/vizcnn.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('generic attribute',
        loc('../hpa-scc/vizcnn.py'),
        'args')]},
        loc('../hpa-scc/worklist.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../hpa-scc/worklist.py'),
                      'args')]},
        loc('ExploreExploit.py'): {'expanded-nodes': [],
                                   'selected-nodes': [],
                                   'top-node': [('generic attribute',
        loc('ExploreExploit.py'),
        'A')]},
        loc('unknown:<untitled> #36'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None}},
                                'browse_mode': 'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {'Derived Classes': False,
        'Imported': False,
        'Modules': True}}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [1,
                          2],
        'notebook_display': 'normal',
        'notebook_percent': 0.30000000000000004,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': '..\\..\\..\\Program Files (x86)\\Wing Personal 7.2\\bin\\voro',
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': 'Load',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': True,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 40,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': 'np.',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': True}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {None: ['from numpy import array, exp\n\ndef softmax(z):\n    exp_z = exp(z)\n    return exp_z/exp_z.sum()\n\n',
        'softmax(array([1,2,3]))\n',
        'softmax(array([0,1]))\n']},
                       'launch-id': None,
                       'sel-line': 2,
                       'sel-line-start': 159,
                       'selection_end': 159,
                       'selection_start': 159,
                       'zoom': 0}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('os-command',
                      'wide',
                      1,
                      {})],
        'primary_view_state': {'editor_states': ('horizontal',
        0.9972027972027973,
        ({'bookmarks': ([[loc('Pencil_and_paper_exercise_solutions.py'),
                          {'attrib-starts': [],
                           'code-line': '\r\n',
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 0,
                           'sel-line-start': 0,
                           'selection_end': 0,
                           'selection_start': 0,
                           'zoom': 0},
                          1664658581.6604314],
                         [loc('../learn/cavi.py'),
                          {'attrib-starts': [],
                           'code-line': '#!/usr/bin/env python\r\n',
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 0,
                           'sel-line-start': 0,
                           'selection_end': 139,
                           'selection_start': 0,
                           'zoom': 0},
                          1664658592.9046934],
                         [loc('Pencil_and_paper_exercise_solutions.py'),
                          {'attrib-starts': [],
                           'code-line': '# Simon A. Crase -- simon@greenweaves.nz of +64 210 220 2257\r\n',
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 4,
                           'sel-line-start': 79,
                           'selection_end': 139,
                           'selection_start': 139,
                           'zoom': 0},
                          1664658598.0040703],
                         [loc('../learn/cavi.py'),
                          {'attrib-starts': [],
                           'code-line': '#!/usr/bin/env python\r\n',
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 0,
                           'sel-line-start': 0,
                           'selection_end': 139,
                           'selection_start': 0,
                           'zoom': 0},
                          1664658600.40644],
                         [loc('Pencil_and_paper_exercise_solutions.py'),
                          {'attrib-starts': [],
                           'code-line': '#!/usr/bin/env python\r\n',
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 0,
                           'sel-line-start': 0,
                           'selection_end': 21,
                           'selection_start': 0,
                           'zoom': 0},
                          1664659099.4913197],
                         [loc('ExploreExploit.py'),
                          {'attrib-starts': [],
                           'code-line': '         [0, -1, -1],\r\n',
                           'first-line': 71,
                           'folded-linenos': [],
                           'sel-line': 95,
                           'sel-line-start': 1755,
                           'selection_end': 1758,
                           'selection_start': 1758,
                           'zoom': 0},
                          1664659104.0825982],
                         [loc('ExploreExploit.py'),
                          {'attrib-starts': [],
                           'code-line': '\r\n',
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 1,
                           'sel-line-start': 23,
                           'selection_end': 23,
                           'selection_start': 23,
                           'zoom': 0},
                          1664659132.8419461],
                         [loc('Pencil_and_paper_exercise_solutions.py'),
                          {'attrib-starts': [],
                           'code-line': '           [0.2, 0.8]\r\n',
                           'first-line': 17,
                           'folded-linenos': [],
                           'sel-line': 26,
                           'sel-line-start': 460,
                           'selection_end': 480,
                           'selection_start': 480,
                           'zoom': 0},
                          1664660148.208506],
                         [loc('ExploreExploit.py'),
                          {'attrib-starts': [],
                           'code-line': '\r\n',
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 1,
                           'sel-line-start': 23,
                           'selection_end': 23,
                           'selection_start': 23,
                           'zoom': 0},
                          1664660152.018255],
                         [loc('Pencil_and_paper_exercise_solutions.py'),
                          {'attrib-starts': [],
                           'code-line': '           [0.2, 0.8]\r\n',
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 26,
                           'sel-line-start': 460,
                           'selection_end': 480,
                           'selection_start': 480,
                           'zoom': 0},
                          1664660424.8332086],
                         [loc('Pencil_and_paper_exercise_solutions.py'),
                          {'attrib-starts': [],
                           'code-line': 's = softmax(log(D) + dot(log(A.transpose()),o))\r\n',
                           'first-line': 5,
                           'folded-linenos': [],
                           'sel-line': 19,
                           'sel-line-start': 318,
                           'selection_end': 329,
                           'selection_start': 322,
                           'zoom': 0},
                          1664661404.7785563],
                         [loc('Pencil_and_paper_exercise_solutions.py'),
                          {'attrib-starts': [('softmax|0|',
        4)],
                           'code-line': '    exp_z = exp(z)\r\n',
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 5,
                           'sel-line-start': 84,
                           'selection_end': 101,
                           'selection_start': 101,
                           'zoom': 0},
                          1664669498.5084193],
                         [loc('ExploreExploit.py'),
                          {'attrib-starts': [],
                           'code-line': '#Likelihoods - beliefs about relationship between hidden states and observable outcomes\r\n',
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 15,
                           'sel-line-start': 187,
                           'selection_end': 214,
                           'selection_start': 214,
                           'zoom': 0},
                          1664669528.4533384],
                         [loc('ExploreExploit.py'),
                          {'attrib-starts': [],
                           'code-line': '#Likelihoods - beliefs about relationship between hidden states and observable outcomes\r\n',
                           'first-line': 102,
                           'folded-linenos': [],
                           'sel-line': 15,
                           'sel-line-start': 187,
                           'selection_end': 214,
                           'selection_start': 214,
                           'zoom': 0},
                          1664671387.7626314],
                         [loc('ExploreExploit.py'),
                          {'attrib-starts': [],
                           'code-line': '#Likelihoods - beliefs about relationship between hidden states and observable outcomes\r\n',
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 15,
                           'sel-line-start': 187,
                           'selection_end': 214,
                           'selection_start': 214,
                           'zoom': 0},
                          1664677756.5496123],
                         [loc('Pencil_and_paper_exercise_solutions.py'),
                          {'attrib-starts': [],
                           'code-line': '',
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 0,
                           'sel-line-start': 0,
                           'selection_end': 0,
                           'selection_start': 0,
                           'zoom': 0},
                          1664686191.779472],
                         [loc('ExploreExploit.py'),
                          {'attrib-starts': [],
                           'code-line': '#Likelihoods - beliefs about relationship between hidden states and observable outcomes\r\n',
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 15,
                           'sel-line-start': 187,
                           'selection_end': 214,
                           'selection_start': 214,
                           'zoom': 0},
                          1664686225.0244188],
                         [loc('exercises.py'),
                          {'attrib-starts': [],
                           'code-line': '#!/usr/bin/env python\r\n',
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 0,
                           'sel-line-start': 0,
                           'selection_end': 0,
                           'selection_start': 0,
                           'zoom': 0},
                          1664686243.5938528],
                         [loc('../cavi1.py'),
                          {'attrib-starts': [],
                           'code-line': '# Copyright (C) 2020-2022 Greenweaves Software Limited\r\n',
                           'first-line': 7,
                           'folded-linenos': [],
                           'sel-line': 2,
                           'sel-line-start': 25,
                           'selection_end': 1151,
                           'selection_start': 25,
                           'zoom': 0},
                          1664686254.362006],
                         [loc('exercises.py'),
                          {'attrib-starts': [],
                           'code-line': '\r\n',
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 21,
                           'sel-line-start': 1153,
                           'selection_end': 1153,
                           'selection_start': 1153,
                           'zoom': 0},
                          1664686260.7045743]],
                        20),
          'current-loc': loc('ExploreExploit.py'),
          'editor-state-list': [(loc('../cavi1.py'),
                                 {'attrib-starts': [],
                                  'code-line': '# Copyright (C) 2020-2022 Greenweaves Software Limited\r\n',
                                  'first-line': 7,
                                  'folded-linenos': [],
                                  'sel-line': 2,
                                  'sel-line-start': 25,
                                  'selection_end': 1151,
                                  'selection_start': 25,
                                  'zoom': 0}),
                                (loc('exercises.py'),
                                 {'attrib-starts': [],
                                  'code-line': '\r\n',
                                  'first-line': 0,
                                  'folded-linenos': [],
                                  'sel-line': 21,
                                  'sel-line-start': 1153,
                                  'selection_end': 1153,
                                  'selection_start': 1153,
                                  'zoom': 0}),
                                (loc('ExploreExploit.py'),
                                 {'attrib-starts': [],
                                  'code-line': '\r\n',
                                  'first-line': 0,
                                  'folded-linenos': [],
                                  'sel-line': 21,
                                  'sel-line-start': 1153,
                                  'selection_end': 1153,
                                  'selection_start': 1153,
                                  'zoom': 0})],
          'has-focus': True,
          'locked': False},
         [loc('../cavi1.py'),
          loc('exercises.py'),
          loc('ExploreExploit.py')]),
        ({'bookmarks': ([[loc('../hpa-scc/utils.py'),
                          {'attrib-starts': [('set_random_seed|0|',
        100)],
                           'code-line': "def set_random_seed(specified_seed=None,prefix='seed',suffix='txt'):\r\n",
                           'first-line': 88,
                           'folded-linenos': [],
                           'sel-line': 100,
                           'sel-line-start': 3347,
                           'selection_end': 3366,
                           'selection_start': 3351,
                           'zoom': 0},
                          1618380699.68],
                         [loc('../hpa-scc/slice.py'),
                          {'attrib-starts': [],
                           'code-line': '#   Copyright (C) 2021 Greenweaves Software Limited\r\n',
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 0,
                           'sel-line-start': 0,
                           'selection_end': 0,
                           'selection_start': 0,
                           'zoom': 0},
                          1618380701.947],
                         [loc('../hpa-scc/dirichlet.py'),
                          {'attrib-starts': [],
                           'code-line': '#   Copyright (C) 2021 Greenweaves Software Limited\r\n',
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 0,
                           'sel-line-start': 0,
                           'selection_end': 0,
                           'selection_start': 0,
                           'zoom': 0},
                          1618427087.839],
                         [loc('../hpa-scc/logs.py'),
                          {'attrib-starts': [],
                           'code-line': 'from argparse          import ArgumentParser\r\n',
                           'first-line': 123,
                           'folded-linenos': [],
                           'sel-line': 17,
                           'sel-line-start': 788,
                           'selection_end': 818,
                           'selection_start': 818,
                           'zoom': 0},
                          1618444689.786],
                         [loc('../hpa-scc/utils.py'),
                          {'attrib-starts': [('create_xkcd_colours|0|',
        123)],
                           'code-line': "def create_xkcd_colours(file_name='rgb.txt', prefix='xkcd:'):\r\n",
                           'first-line': 110,
                           'folded-linenos': [],
                           'sel-line': 123,
                           'sel-line-start': 4039,
                           'selection_end': 4062,
                           'selection_start': 4043,
                           'zoom': 0},
                          1618531759.252],
                         [loc('../hpa-scc/train.py'),
                          {'attrib-starts': [],
                           'code-line': '#   Copyright (C) 2021 Greenweaves Software Limited\r\n',
                           'first-line': 212,
                           'folded-linenos': [],
                           'sel-line': 0,
                           'sel-line-start': 0,
                           'selection_end': 0,
                           'selection_start': 0,
                           'zoom': 0},
                          1618531762.419],
                         [loc('../hpa-scc/select_images.py'),
                          {'attrib-starts': [],
                           'code-line': '#   Copyright (C) 2021 Greenweaves Software Limited\r\n',
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 0,
                           'sel-line-start': 0,
                           'selection_end': 0,
                           'selection_start': 0,
                           'zoom': 0},
                          1618531762.962],
                         [loc('../hpa-scc/logs.py'),
                          {'attrib-starts': [],
                           'code-line': 'from argparse          import ArgumentParser\r\n',
                           'first-line': 123,
                           'folded-linenos': [],
                           'sel-line': 17,
                           'sel-line-start': 788,
                           'selection_end': 818,
                           'selection_start': 818,
                           'zoom': 0},
                          1618531765.724],
                         [loc('../hpa-scc/dirichlet.py'),
                          {'attrib-starts': [],
                           'code-line': '#   Copyright (C) 2021 Greenweaves Software Limited\r\n',
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 0,
                           'sel-line-start': 0,
                           'selection_end': 0,
                           'selection_start': 0,
                           'zoom': 0},
                          1618785261.797],
                         [loc('../hpa-scc/utils.py'),
                          {'attrib-starts': [('create_xkcd_colours|0|',
        123)],
                           'code-line': "def create_xkcd_colours(file_name='rgb.txt', prefix='xkcd:'):\r\n",
                           'first-line': 110,
                           'folded-linenos': [],
                           'sel-line': 123,
                           'sel-line-start': 4039,
                           'selection_end': 4062,
                           'selection_start': 4043,
                           'zoom': 0},
                          1618785262.568],
                         [loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/colorbar.py'),
                          {'attrib-starts': [('Colorbar|0|',
        1185),
        ('Colorbar|0|.__init__|0|',
         1195)],
                           'code-line': '        if mappable.get_array() is not None:\r\n',
                           'first-line': 1176,
                           'folded-linenos': [],
                           'sel-line': 1198,
                           'sel-line-start': 46532,
                           'selection_end': 46532,
                           'selection_start': 46532,
                           'zoom': 0},
                          1618785263.308],
                         [loc('../hpa-scc/slice.py'),
                          {'attrib-starts': [],
                           'code-line': '#   Copyright (C) 2021 Greenweaves Software Limited\r\n',
                           'first-line': 159,
                           'folded-linenos': [],
                           'sel-line': 0,
                           'sel-line-start': 0,
                           'selection_end': 0,
                           'selection_start': 0,
                           'zoom': 0},
                          1618785264.155],
                         [loc('../hpa-scc/hpascc.py'),
                          {'attrib-starts': [],
                           'code-line': '#   Copyright (C) 2021 Greenweaves Software Limited\r\n',
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 0,
                           'sel-line-start': 0,
                           'selection_end': 0,
                           'selection_start': 0,
                           'zoom': 0},
                          1618785264.937],
                         [loc('../hpa-scc/dirichlet.py'),
                          {'attrib-starts': [],
                           'code-line': '#   Copyright (C) 2021 Greenweaves Software Limited\r\n',
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 0,
                           'sel-line-start': 0,
                           'selection_end': 0,
                           'selection_start': 0,
                           'zoom': 0},
                          1618867522.763],
                         [loc('../hpa-scc/hpascc.py'),
                          {'attrib-starts': [],
                           'code-line': '#   Copyright (C) 2021 Greenweaves Software Limited\r\n',
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 0,
                           'sel-line-start': 0,
                           'selection_end': 0,
                           'selection_start': 0,
                           'zoom': 0},
                          1618867523.483],
                         [loc('../hpa-scc/old/vizcnn.py'),
                          {'attrib-starts': [],
                           'code-line': '#   Copyright (C) 2021 Greenweaves Software Limited\r\n',
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 0,
                           'sel-line-start': 0,
                           'selection_end': 0,
                           'selection_start': 0,
                           'zoom': 0},
                          1618867524.302],
                         [loc('../hpa-scc/dirichlet.py'),
                          {'attrib-starts': [],
                           'code-line': '#   Copyright (C) 2021 Greenweaves Software Limited\r\n',
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 0,
                           'sel-line-start': 0,
                           'selection_end': 0,
                           'selection_start': 0,
                           'zoom': 0},
                          1619578964.455],
                         [loc('../../../Program Files (x86)/Wing Personal 7.2/doc/TOC'),
                          {'displayed-index': -1,
                           'viewer-state': {'history': [-1,
        0],
        'history-pos': 0,
        'index': -1,
        'top': 0,
        'top-left-pos': 0}},
                          1619579053.924],
                         [loc('../../../Program Files (x86)/Wing Personal 8/doc/TOC'),
                          {'displayed-index': -1,
                           'viewer-state': {'history': [-1,
        0],
        'history-pos': 0,
        'index': -1,
        'top': 0,
        'top-left-pos': 1}},
                          1664657892.9116397],
                         [loc('Pencil_and_paper_exercise_solutions.py'),
                          {'attrib-starts': [],
                           'code-line': '',
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 0,
                           'sel-line-start': 0,
                           'selection_end': 0,
                           'selection_start': 0,
                           'zoom': 0},
                          1664658566.4975703]],
                        20),
          'current-loc': loc('ExploreExploit.py'),
          'editor-state-list': [(loc('../cavi1.py'),
                                 {}),
                                (loc('exercises.py'),
                                 {}),
                                (loc('ExploreExploit.py'),
                                 {'attrib-starts': [],
                                  'code-line': '\r\n',
                                  'first-line': 0,
                                  'folded-linenos': [],
                                  'sel-line': 1,
                                  'sel-line-start': 23,
                                  'selection_end': 23,
                                  'selection_start': 23,
                                  'zoom': 0})],
          'has-focus': False,
          'locked': False},
         [loc('../cavi1.py'),
          loc('exercises.py'),
          loc('ExploreExploit.py')])),
                               'open_files': ['../cavi1.py',
        'exercises.py',
        'ExploreExploit.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.5},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((1,
                           2),
                          1664661519.4905736),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {},
                 'splits': 1,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    0),
                                   1664657585.8691397),
                 'user_data': {}},
        'window-alloc': (7,
                         1,
                         1360,
                         732)}]}
guimgr.recent-documents = [loc('ExploreExploit.py'),
                           loc('exercises.py'),
                           loc('../cavi1.py')]
guimgr.visual-state = {loc('../learn/cavi.py'): {'attrib-starts': [],
        'code-line': '#!/usr/bin/env python\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 139,
        'selection_start': 0,
        'zoom': 0},
                       loc('ExploreExploit.py'): {'attrib-starts': [],
        'code-line': '\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 1,
        'sel-line-start': 23,
        'selection_end': 23,
        'selection_start': 23,
        'zoom': 0},
                       loc('Pencil_and_paper_exercise_solutions.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0}}
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('default',
                        [''])}
proj.pyexec = {None: ('default',
                      'c:\\Users\\Weka\\AppData\\Local\\Programs\\Python\\Python38\\python.exe')}
