#!wing
#!version=7.0
##################################################################
# Wing project file                                              #
##################################################################
[project attributes]
proj.file-list = [loc('backprop.py'),
                  loc('bayes1.py'),
                  loc('cavi1.py'),
                  loc('cavi3.py'),
                  loc('estimating.py'),
                  loc('fcs/doublets.py'),
                  loc('fcs/em.py'),
                  loc('fcs/fcs.py'),
                  loc('fcs/gcps.py'),
                  loc('fcs/partition.py'),
                  loc('fcs/README.md'),
                  loc('fcs/rsq.py'),
                  loc('fcs/sizes.py'),
                  loc('fcs/standards.py'),
                  loc('feex1.py'),
                  loc('feex2.py'),
                  loc('feex3.py'),
                  loc('feex5.py'),
                  loc('gibbs.py'),
                  loc('metropolis-hastings.py'),
                  loc('mnist-test.py'),
                  loc('naive.py'),
                  loc('README.md'),
                  loc('test.py'),
                  loc('tf1.py'),
                  loc('tf2.py'),
                  loc('train.py'),
                  loc('versions.py')]
proj.file-type = 'normal'
proj.launch-config = {loc('fcs.py'): ('project',
                                      (u'-p PAPRD15100481',
                                       '')),
                      loc('fcs/doublets.py'): ('project',
        (u'--plate PAP15100449r',
         '')),
                      loc('fcs/fcs.py'): ('project',
        (u'--plate RTI15100057',
         '')),
                      loc('fcs/gcps.py'): ('project',
        (u'--plate PAP90200082  --well G12  --doublets --K 3',
         '')),
                      loc('fcs/plotreds.py'): ('project',
        (u'--plate RTI15100057 --well H12',
         '')),
                      loc('fcs/rsq.py'): ('project',
        (u'rsq1.txt',
         '')),
                      loc('fcs/sizes.py'): ('project',
        (u'--plate RTI15101849 --well A12 --K 6 --show',
         '')),
                      loc('fcs/temp.py'): ('project',
        (u'--plate PAP15100449r --well H12',
         '')),
                      loc('test.py'): ('project',
                                       (u'-n  wider',
        '')),
                      loc('train.py'): ('project',
        (u'-l 784 20 10 -n bar -r',
         ''))}
[user attributes]
debug.recent-run-args = {loc('fcs.py'): [u'-p PAPRD15100481',
        u'--plate PAP90100014',
        u'--plate PAP90100003',
        u'--plate RTI15100117'],
                         loc('fcs/doublets.py'): [u'--plate PAP15100449r',
        u'--plates PAP15100449r',
        u'--help',
        u'--plate RTIRD152008144r  --well H12  --mult 1',
        u'--plate RTIRD152008144r  --well H12  --init randomizex',
        u'--plate RTIRD152008144r  --well H12  --init randomize',
        u'--plate RTIRD152008144r  --well H12  --choices randomize',
        u'--plate RTIRD152008144r  --well H12  --choices foo',
        u'--plate RTIRD152008144r  --well H12',
        u'--plate RTIQC15200110  --well H12',
        u'--plate RTIRD152008144r --well H12',
        u'--plate RTIRD152008144r -well H12',
        u'--plate RTIRD152008144r H12',
        u'--plateRTIRD152008144r H12',
        u'--plate RTIQC15200110 H12',
        u'--plate PAP15100449r H12'],
                         loc('fcs/fcs.py'): [u'--plate RTI15100057'],
                         loc('fcs/gcps.py'): [u'--plate PAP90200082  --well G12  --doublets --K 3',
        u'--plate PAP90200082  --well G12  --doublets',
        u'--plate PAP90200082  --wells G12  --doublets',
        u'--plate PAP90200082   --doublets',
        u'--plate PAP90200082   --fixup',
        u'--plate PAP90200082 --well H12  --fixup',
        u'--plate PAP90200082 -well H12  --fixup',
        u'--plate PAP90200082 H12  --fixup',
        u'--plate PAP90200082  --well H12 --fixup',
        u'--plate PAP90200082  --well H12',
        u'--plate PAP90200082  --well G12',
        u'--plate PAP0000024  --well H12 --fixup',
        u'--plate PAP0000024  --well H12',
        u'--plate PAP0000024  --well H12 --K 4',
        u'--plate PAP15100449  --well H12',
        u'--plate PAP15100449  --well H12  --K 4',
        u'--plate PAP15100449  --well H12  --K 3',
        u'--plate PAP15100449r  --well H12  --K 3',
        u'--plate PAP15100449r  --well H12  --K 4',
        u'--plate RTI15100057 --well G12',
        u'--plate RTI15100057 --well G12 --rows 4 --columns 4',
        u'--plate RTI15100057 --well G12 --rows 4',
        u'--plate RTI15100057 --wells G12',
        u'--plate RTI15100057 ',
        u'--plate RTI15100057 -well G12',
        u'--plate RTI15100057 -wells G12',
        u'--plate RTI15100057',
        u'--plate RTI15100057 --well H12'],
                         loc('fcs/plotreds.py'): [u'--plate RTI15100057 --well H12',
        u'--plate RTI15100057'],
                         loc('fcs/rsq.py'): [u'rsq1.txt',
        u'rsq.txt',
        u'foo'],
                         loc('fcs/sizes.py'): [u'--plate RTI15101849 --well A12 --K 6 --show',
        u'--plate RTI15101849 --well A12 --K 9 --show',
        u'--plate RTI15101849 --well A12 --K 7 --show',
        u'--plate RTI15101849 --well A12 --K 6',
        u'--plate RTI15102588 --well H8 --K 6 9',
        u'--plate RTI15102588 --well C12 --K 6 9',
        u'--plate RTI15102588 --well C12',
        u'--plate PAP0000024 --well A12',
        u'--plate PAP0000024',
        u'--plate PAP00000024',
        u'--plate PAP15100054',
        u'--plate PAP15100054 --well A12'],
                         loc('fcs/temp.py'): [u'--plate PAP15100449r --well H12'],
                         loc('test.py'): [u'-n  wider',
        u'-n  scaled',
        u'-n nn scaled',
        u'-n nn'],
                         loc('train.py'): [u'-l 784 20 10 -n bar -r',
        u'-l 784 20 10 -n bar',
        u'-h',
        u'-l 784 20 10 -N 11 -n foo --eta 0.2 --alpha 0.1 -p 1000 -t 1',
        u'-l 784 40 10 -N 11 -n foo --eta 0.2 --alpha 0.1 -p 1000 -t 1',
        u'-l 784 40 10 -N 10 -n foo --eta 0.2 --alpha 0.1 -p 10000',
        u'-l 784 40 10 -N 10 -n eta2alpha1a --eta 0.2 --alpha 0.1 -p 10000',
        u'-l 784 40 10 -N 1 -n eta2alpha1 --eta 0.2 --alpha 0.1 -p 1000',
        u'-l 784 40 10 -N 1 -n alpha1 --eta 0.5 --alpha 0.1 -p 1000',
        u'-l 784 40 10 -N 1 -n alpha0 --eta 0.5 --alpha 0 -p 1000',
        u'-l 784 40 10 -N 100 -n alpha -e 0.5 -p 10000',
        u'-l 784 40 10 -N 100 -n alpha1 -e 0.5 -p 1000',
        u'-l 784 40 10 -N 100 -n alpha -e 0.5 -p 1000',
        u'-l 784 40 10 -N 1 -n alpha -e 0.5 -p 1000',
        u'-l 784 40 10 -N 1 -n alpha1 -e 0.5 -p 1000',
        u'-l 784 40 10 -N 20 -n alpha -e 0.5 -p 10000',
        u'-l 784 40 10 -N 20 -n scaled -e 0.5 -p 10000',
        u'-l 784 40 10 -N 2 -n scaled -e 0.5',
        u'-l 784 40 10 -N 2 -n raw -e 0.5',
        u'-l 784 40 10 -N 2 -n foo -e 0.5',
        u'-l 784 40 10 -N 2 -n baz -e 0.5',
        u'-l 784 40 10 -N 2 -n bar -e 0.5',
        u'-l 784 40 10 -N 2 -n foo -e 0.5 -p 10',
        u'-l 784 40 10 -N 2 -n foo',
        u'-l 784 40 10',
        u'-l 10 40 30',
        u'--foo\n',
        u'--help\n',
        u'--d foo',
        u'--help']}
debug.show-args-dialog = {loc('backprop.py'): False,
                          loc('mnist-test.py'): False,
                          loc('mnist_test.py'): False}
edit.multi-select-popup-size = (245,
                                102)
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'dtaAtJloNhSft7SabFzspl0xqE'\
        'mVIDbK',
        'size-state': '',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.25,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [(0,)],
                                 'selected-nodes': [(0,
        5)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('../AppData/Roaming/Python/Python38/site-packages/PIL/Image.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Roaming/Python/Python38/site-packages/PIL/Image.py'),
                      'ADAPTIVE')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/artist.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/artist.py'),
                      'allow_rasterization')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_axes.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_axes.py'),
                      'Axes')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_base.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_base.py'),
                      '_AxesBase')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/gridspec.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/gridspec.py'),
                      'GridSpec')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/pyplot.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/pyplot.py'),
                      'acorr')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/texmanager.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/texmanager.py'),
                      'TexManager')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/numpy/__init__.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Roaming/Python/Python38/site-packages/numpy/conftest.py'),
                      '')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/pandas/core/generic.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Roaming/Python/Python38/site-packages/pandas/core/generic.py'),
                      'bool_t')]},
        loc('../anaconda3/Lib/_collections_abc.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../anaconda3/Lib/_collections_abc.py'),
                      'AsyncGenerator')]},
        loc('README.md'): {'expanded-nodes': [],
                           'selected-nodes': [],
                           'top-node': None},
        loc('bayes1.py'): {'expanded-nodes': [],
                           'selected-nodes': [],
                           'top-node': [('generic attribute',
        loc('bayes1.py'),
        'alphas')]},
        loc('cavi1.py'): {'expanded-nodes': [],
                          'selected-nodes': [[('generic attribute',
        loc('cavi1.py'),
        'ys')]],
                          'top-node': [('generic attribute',
        loc('cavi1.py'),
        'ax1')]},
        loc('fcs.py'): {'expanded-nodes': [],
                        'selected-nodes': [None],
                        'top-node': None},
        loc('fcs/README.md'): {'expanded-nodes': [],
                               'selected-nodes': [],
                               'top-node': None},
        loc('fcs/fcs.py'): {'expanded-nodes': [],
                            'selected-nodes': [],
                            'top-node': [('generic attribute',
        loc('fcs/fcs.py'),
        'args')]},
        loc('fcs/gcps.py'): {'expanded-nodes': [],
                             'selected-nodes': [],
                             'top-node': [('generic attribute',
        loc('fcs/gcps.py'),
        'a')]},
        loc('fcs/plotreds.py'): {'expanded-nodes': [],
                                 'selected-nodes': [],
                                 'top-node': [('generic attribute',
        loc('fcs/plotreds.py'),
        'args')]},
        loc('train.py'): {'expanded-nodes': [],
                          'selected-nodes': [[('generic attribute',
        loc('train.py'),
        '_')]],
                          'top-node': [('generic attribute',
        loc('train.py'),
        'alpha')]}},
                                'browse_mode': u'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {u'Derived Classes': False,
        u'Imported': False,
        u'Modules': True}}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [3,
                          0],
        'notebook_display': 'normal',
        'notebook_percent': 0.30000000000000004,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': u'get_boundaries',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': u'sums',
                                       'fReverse': False,
                                       'fSearchText': u'stand',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 0L,
                       'folded-linenos': [],
                       'history': {},
                       'launch-id': None,
                       'sel-line': 2L,
                       'sel-line-start': 157L,
                       'selection_end': 157L,
                       'selection_start': 157L,
                       'zoom': 0L}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('os-command',
                      'wide',
                      1,
                      {'last-percent': 0.8,
                       'toolbox-percent': 1.0,
                       'toolbox-tree-sel': ''})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('feex3.py'),
        {'attrib-starts': [],
         'code-line': "plt.xlabel('Time')\r\n",
         'first-line': 20L,
         'folded-linenos': [],
         'sel-line': 55L,
         'sel-line-start': 1650L,
         'selection_end': 1666L,
         'selection_start': 1666L,
         'zoom': 0L},
        1599423580.963],
        [loc('README.md'),
         {'attrib-starts': [],
          'code-line': 'Programs based on [A tutorial on the free-energy fra'\
                       'mework for modelling perception\r\n',
          'first-line': 39L,
          'folded-linenos': [],
          'sel-line': 51L,
          'sel-line-start': 2919L,
          'selection_end': 3033L,
          'selection_start': 2938L,
          'zoom': 0L},
         1599423594.66],
        [loc('feex1.py'),
         {'attrib-starts': [],
          'code-line': '# Exercise 1 from A tutorial on the free-energy fram'\
                       'ework for modelling perception\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 15L,
          'sel-line-start': 688L,
          'selection_end': 803L,
          'selection_start': 688L,
          'zoom': 0L},
         1599423628.278],
        [loc('feex2.py'),
         {'attrib-starts': [],
          'code-line': '# Exercise 2 from A tutorial on the free-energy fram'\
                       'ework for modelling perception\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 15L,
          'sel-line-start': 688L,
          'selection_end': 700L,
          'selection_start': 700L,
          'zoom': 0L},
         1599423640.165],
        [loc('feex3.py'),
         {'attrib-starts': [],
          'code-line': '# Exercise 3 from A tutorial on the free-energy fram'\
                       'ework for modelling perception\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 15L,
          'sel-line-start': 688L,
          'selection_end': 700L,
          'selection_start': 700L,
          'zoom': 0L},
         1599452128.604],
        [loc('feex1.py'),
         {'attrib-starts': [],
          'code-line': '# Copyright (C) 2020 Greenweaves Software Limited\r'\
                       '\n',
          'first-line': 11L,
          'folded-linenos': [],
          'sel-line': 0L,
          'sel-line-start': 0L,
          'selection_end': 917L,
          'selection_start': 0L,
          'zoom': 0L},
         1599452149.742],
        [loc('feex5.py'),
         {'attrib-starts': [],
          'code-line': '# Exercise 5 from A tutorial on the free-energy fram'\
                       'ework for modelling perception\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 15L,
          'sel-line-start': 688L,
          'selection_end': 700L,
          'selection_start': 700L,
          'zoom': 0L},
         1599452183.547],
        [loc('README.md'),
         {'attrib-starts': [],
          'code-line': '|feex1.py| Exercise 1--posterior probabilities|\r\n',
          'first-line': 39L,
          'folded-linenos': [],
          'sel-line': 56L,
          'sel-line-start': 3239L,
          'selection_end': 3285L,
          'selection_start': 3262L,
          'zoom': 0L},
         1599452280.876],
        [loc('feex1.py'),
         {'attrib-starts': [],
          'code-line': '# framework for modelling perception and learning, b'\
                       'y Rafal Bogacz\r\n',
          'first-line': 11L,
          'folded-linenos': [],
          'sel-line': 16L,
          'sel-line-start': 764L,
          'selection_end': 801L,
          'selection_start': 801L,
          'zoom': 0L},
         1599452306.912],
        [loc('README.md'),
         {'attrib-starts': [],
          'code-line': '|feex2.py| Exercise 2--most likely size|\r\n',
          'first-line': 39L,
          'folded-linenos': [],
          'sel-line': 57L,
          'sel-line-start': 3288L,
          'selection_end': 3327L,
          'selection_start': 3311L,
          'zoom': 0L},
         1599452312.372],
        [loc('feex2.py'),
         {'attrib-starts': [],
          'code-line': '# framework for modelling perception and learning, b'\
                       'y Rafal Bogacz\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 16L,
          'sel-line-start': 758L,
          'selection_end': 795L,
          'selection_start': 795L,
          'zoom': 0L},
         1599452331.872],
        [loc('README.md'),
         {'attrib-starts': [],
          'code-line': '|feex3.py| Exercise 3--neural implementation|\r\n',
          'first-line': 39L,
          'folded-linenos': [],
          'sel-line': 58L,
          'sel-line-start': 3330L,
          'selection_end': 3374L,
          'selection_start': 3353L,
          'zoom': 0L},
         1599452338.534],
        [loc('feex3.py'),
         {'attrib-starts': [],
          'code-line': '# framework for modelling perception and learning, b'\
                       'y Rafal Bogacz\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 16L,
          'sel-line-start': 762L,
          'selection_end': 798L,
          'selection_start': 798L,
          'zoom': 0L},
         1599452357.425],
        [loc('feex5.py'),
         {'attrib-starts': [],
          'code-line': '# Exercise 5 from A tutorial on the free-energy fram'\
                       'ework for modelling perception\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 15L,
          'sel-line-start': 688L,
          'selection_end': 700L,
          'selection_start': 700L,
          'zoom': 0L},
         1599452359.828],
        [loc('README.md'),
         {'attrib-starts': [],
          'code-line': '|feex5.py| Exercise 5--learn variance|',
          'first-line': 39L,
          'folded-linenos': [],
          'sel-line': 59L,
          'sel-line-start': 3377L,
          'selection_end': 3414L,
          'selection_start': 3400L,
          'zoom': 0L},
         1599452366.177],
        [loc('feex5.py'),
         {'attrib-starts': [],
          'code-line': '# framework for modelling perception and learning, b'\
                       'y Rafal Bogacz\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 16L,
          'sel-line-start': 755L,
          'selection_end': 792L,
          'selection_start': 792L,
          'zoom': 0L},
         1599775860.081],
        [loc('fcs/doublets.py'),
         {'attrib-starts': [],
          'code-line': '# Copyright (C) 2020 Greenweaves Software Limited\r'\
                       '\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 0L,
          'sel-line-start': 0L,
          'selection_end': 802L,
          'selection_start': 0L,
          'zoom': 0L},
         1599775883.201],
        [loc('unknown:untitled-1.py'),
         {'attrib-starts': [],
          'code-line': '',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 20L,
          'sel-line-start': 814L,
          'selection_end': 814L,
          'selection_start': 814L,
          'zoom': 0L},
         1599775899.363],
        [loc('fcs/README.md'),
         {'attrib-starts': [],
          'code-line': '|partition.py|Partition data using G12/H12|\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 11L,
          'sel-line-start': 568L,
          'selection_end': 610L,
          'selection_start': 610L,
          'zoom': 0L},
         1599775970.293],
        [loc('fcs/partition.py'),
         {'attrib-starts': [],
          'code-line': '',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 20L,
          'sel-line-start': 814L,
          'selection_end': 814L,
          'selection_start': 814L,
          'zoom': 0L},
         1599775985.443]],
        20),
        'current-loc': loc('fcs/partition.py'),
        'editor-state-list': [(loc('fcs/doublets.py'),
                               {'attrib-starts': [],
                                'code-line': '# Copyright (C) 2020 Greenweav'\
        'es Software Limited\r\n',
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 0L,
                                'sel-line-start': 0L,
                                'selection_end': 802L,
                                'selection_start': 0L,
                                'zoom': 0L}),
                              (loc('fcs/README.md'),
                               {'attrib-starts': [],
                                'code-line': '|partition.py|Partition data u'\
        'sing G12/H12|\r\n',
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 11L,
                                'sel-line-start': 568L,
                                'selection_end': 610L,
                                'selection_start': 610L,
                                'zoom': 0L}),
                              (loc('feex1.py'),
                               {'attrib-starts': [],
                                'code-line': '# framework for modelling perc'\
        'eption and learning, by Rafal Bogacz\r\n',
                                'first-line': 11L,
                                'folded-linenos': [],
                                'sel-line': 16L,
                                'sel-line-start': 764L,
                                'selection_end': 801L,
                                'selection_start': 801L,
                                'zoom': 0L}),
                              (loc('feex2.py'),
                               {'attrib-starts': [],
                                'code-line': '# framework for modelling perc'\
        'eption and learning, by Rafal Bogacz\r\n',
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 16L,
                                'sel-line-start': 758L,
                                'selection_end': 795L,
                                'selection_start': 795L,
                                'zoom': 0L}),
                              (loc('feex3.py'),
                               {'attrib-starts': [],
                                'code-line': '# framework for modelling perc'\
        'eption and learning, by Rafal Bogacz\r\n',
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 16L,
                                'sel-line-start': 762L,
                                'selection_end': 798L,
                                'selection_start': 798L,
                                'zoom': 0L}),
                              (loc('feex5.py'),
                               {'attrib-starts': [],
                                'code-line': '# framework for modelling perc'\
        'eption and learning, by Rafal Bogacz\r\n',
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 16L,
                                'sel-line-start': 755L,
                                'selection_end': 792L,
                                'selection_start': 792L,
                                'zoom': 0L}),
                              (loc('README.md'),
                               {'attrib-starts': [],
                                'code-line': '|feex5.py| Exercise 5--learn v'\
        'ariance|',
                                'first-line': 39L,
                                'folded-linenos': [],
                                'sel-line': 59L,
                                'sel-line-start': 3377L,
                                'selection_end': 3414L,
                                'selection_start': 3400L,
                                'zoom': 0L}),
                              (loc('fcs/partition.py'),
                               {'attrib-starts': [],
                                'code-line': '',
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 20L,
                                'sel-line-start': 814L,
                                'selection_end': 814L,
                                'selection_start': 814L,
                                'zoom': 0L})],
        'has-focus': True,
        'locked': False},
        [loc('fcs/doublets.py'),
         loc('fcs/README.md'),
         loc('feex1.py'),
         loc('feex2.py'),
         loc('feex3.py'),
         loc('feex5.py'),
         loc('README.md'),
         loc('fcs/partition.py')]),
                               'open_files': [u'README.md',
        u'feex1.py',
        u'feex2.py',
        u'feex3.py',
        u'feex5.py',
        u'fcs/doublets.py',
        u'fcs/README.md',
        u'fcs/partition.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.5},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((0,
                           3),
                          1599417809.08),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {},
                 'splits': 1,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    0),
                                   1599351784.502),
                 'user_data': {}},
        'window-alloc': (1,
                         1,
                         1378,
                         747)}]}
guimgr.recent-documents = [loc('unknown:untitled-1.py'),
                           loc('fcs/README.md'),
                           loc('fcs/doublets.py'),
                           loc('feex5.py'),
                           loc('README.md'),
                           loc('feex3.py'),
                           loc('feex2.py'),
                           loc('feex1.py')]
guimgr.visual-state = {loc('../../../Anaconda3/lib/argparse.py'): {'attrib-s'\
        'tarts': [('_ActionsContainer',
                   1215),
                  ('_ActionsContainer.add_argument',
                   1298)],
        'first-line': 1307L,
        'folded-linenos': [],
        'sel-line': 1329L,
        'sel-line-start': 46869L,
        'selection_end': 46869L,
        'selection_start': 46869L,
        'zoom': 0L},
                       loc('../../../Anaconda3/lib/site-packages/mnist/loader.py'): {'a'\
        'ttrib-starts': [('MNIST',
                          5),
                         ('MNIST.load',
                          40)],
        'first-line': 20L,
        'folded-linenos': [],
        'sel-line': 41L,
        'sel-line-start': 1100L,
        'selection_end': 1100L,
        'selection_start': 1100L,
        'zoom': 0L},
                       loc('../../../Anaconda3/lib/site-packages/numpy/core/_methods.py'): {'a'\
        'ttrib-starts': [('_sum',
                          30)],
        'first-line': 9L,
        'folded-linenos': [],
        'sel-line': 31L,
        'sel-line-start': 952L,
        'selection_end': 952L,
        'selection_start': 952L,
        'zoom': 0L},
                       loc('../../../Anaconda3/lib/site-packages/numpy/core/fromnumeric.py'): {'a'\
        'ttrib-starts': [('reshape',
                          127)],
        'first-line': 202L,
        'folded-linenos': [],
        'sel-line': 224L,
        'sel-line-start': 7179L,
        'selection_end': 7179L,
        'selection_start': 7179L,
        'zoom': 0L},
                       loc('../../../Anaconda3/lib/site-packages/numpy/core/numeric.py'): {'a'\
        'ttrib-starts': [('ones',
                          140)],
        'first-line': 169L,
        'folded-linenos': [],
        'sel-line': 182L,
        'sel-line-start': 5618L,
        'selection_end': 5618L,
        'selection_start': 5618L,
        'zoom': 0L},
                       loc('../../../Anaconda3/lib/site-packages/numpy/lib/function_base.py'): {'a'\
        'ttrib-starts': [('append',
                          4097)],
        'first-line': 4127L,
        'folded-linenos': [],
        'sel-line': 4149L,
        'sel-line-start': 134659L,
        'selection_end': 134659L,
        'selection_start': 134659L,
        'zoom': 0L},
                       loc('../../../Anaconda3/lib/unittest/case.py'): {'att'\
        'rib-starts': [('TestCase',
                        335),
                       ('TestCase.assertAlmostEqual',
                        830)],
        'first-line': 854L,
        'folded-linenos': [],
        'sel-line': 867L,
        'sel-line-start': 32976L,
        'selection_end': 32976L,
        'selection_start': 32976L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/argparse.py'): {'a'\
        'ttrib-starts': [('_ActionsContainer|0|',
                          1252),
                         ('_ActionsContainer|0|._handle_conflict_error|0|',
                          1540)],
        'code-line': '        raise ArgumentError(action, message % conflict'\
                     '_string)\r\n',
        'first-line': 1528L,
        'folded-linenos': [],
        'sel-line': 1547L,
        'sel-line-start': 57417L,
        'selection_end': 57417L,
        'selection_start': 57417L,
        'zoom': 0L},
                       loc('../AppData/Roaming/Python/Python38/site-packages/PIL/Image.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'from . import (\n',
        'first-line': 39L,
        'folded-linenos': [],
        'sel-line': 44L,
        'sel-line-start': 1117L,
        'selection_end': 1117L,
        'selection_start': 1117L,
        'zoom': 0L},
                       loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/artist.py'): {'a'\
        'ttrib-starts': [('Artist|0|',
                          59),
                         ('Artist|0|.update|0|',
                          971)],
        'code-line': '                        raise AttributeError(f"{type(s'\
                     'elf).__name__!r} object "\n',
        'first-line': 976L,
        'folded-linenos': [],
        'sel-line': 995L,
        'sel-line-start': 32162L,
        'selection_end': 32162L,
        'selection_start': 32162L,
        'zoom': 0L},
                       loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_axes.py'): {'a'\
        'ttrib-starts': [('Axes|0|',
                          70),
                         ('Axes|0|.scatter|0|',
                          4316)],
        'code-line': '            raise ValueError("x and y must be the same'\
                     ' size")\n',
        'first-line': 4421L,
        'folded-linenos': [],
        'sel-line': 4440L,
        'sel-line-start': 169968L,
        'selection_end': 169968L,
        'selection_start': 169968L,
        'zoom': 0L},
                       loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_base.py'): {'a'\
        'ttrib-starts': [('_process_plot_var_args|0|',
                          173),
                         ('_process_plot_var_args|0|._plot_args|0|',
                          366)],
        'code-line': '            raise ValueError(f"x and y must have same '\
                     'first dimension, but "\n',
        'first-line': 379L,
        'folded-linenos': [],
        'sel-line': 398L,
        'sel-line-start': 15101L,
        'selection_end': 15101L,
        'selection_start': 15101L,
        'zoom': 0L},
                       loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/backend_bases.py'): {'a'\
        'ttrib-starts': [('_Backend|0|',
                          3455),
                         ('_Backend|0|.new_figure_manager|0|',
                          3483)],
        'code-line': '        fig = fig_cls(*args, **kwargs)\n',
        'first-line': 3469L,
        'folded-linenos': [],
        'sel-line': 3488L,
        'sel-line-start': 124199L,
        'selection_end': 124199L,
        'selection_start': 124199L,
        'zoom': 0L},
                       loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/pyplot.py'): {'a'\
        'ttrib-starts': [('subplot|0|',
                          973)],
        'code-line': '    ax = fig.add_subplot(*args, **kwargs)\n',
        'first-line': 1105L,
        'folded-linenos': [],
        'sel-line': 1124L,
        'sel-line-start': 36724L,
        'selection_end': 36724L,
        'selection_start': 36724L,
        'zoom': 0L},
                       loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/texmanager.py'): {'a'\
        'ttrib-starts': [('TexManager|0|',
                          46),
                         ('TexManager|0|._run_checked_subprocess|0|',
                          271)],
        'code-line': '            raise RuntimeError(\n',
        'first-line': 263L,
        'folded-linenos': [],
        'sel-line': 282L,
        'sel-line-start': 10102L,
        'selection_end': 10102L,
        'selection_start': 10102L,
        'zoom': 0L},
                       loc('../AppData/Roaming/Python/Python38/site-packages/mpl_toolkits/mplot3d/axes3d.py'): {'a'\
        'ttrib-starts': [('Axes3D|0|',
                          45),
                         ('Axes3D|0|.plot_surface|0|',
                          1480)],
        'code-line': '            raise ValueError("Argument Z must be 2-dim'\
                     'ensional.")\n',
        'first-line': 1536L,
        'folded-linenos': [],
        'sel-line': 1555L,
        'sel-line-start': 53175L,
        'selection_end': 53175L,
        'selection_start': 53175L,
        'zoom': 0L},
                       loc('../AppData/Roaming/Python/Python38/site-packages/numpy/__init__.py'): {'a'\
        'ttrib-starts': [('__getattr__|0|',
                          205)],
        'code-line': '                raise AttributeError("module {!r} has '\
                     'no attribute "\r\n',
        'first-line': 194L,
        'folded-linenos': [],
        'sel-line': 213L,
        'sel-line-start': 7296L,
        'selection_end': 7296L,
        'selection_start': 7296L,
        'zoom': 0L},
                       loc('../AppData/Roaming/Python/Python38/site-packages/pandas/core/generic.py'): {'a'\
        'ttrib-starts': [('NDFrame|0|',
                          150),
                         ('NDFrame|0|.__getattr__|0|',
                          5256)],
        'code-line': '            return object.__getattribute__(self, name)'\
                     '\r\n',
        'first-line': 5256L,
        'folded-linenos': [],
        'sel-line': 5273L,
        'sel-line-start': 181565L,
        'selection_end': 181565L,
        'selection_start': 181565L,
        'zoom': 0L},
                       loc('../AppData/Roaming/Python/Python38/site-packages/scipy/stats/_multivariate.py'): {'a'\
        'ttrib-starts': [('multivariate_normal_frozen|0|',
                          692),
                         ('multivariate_normal_frozen|0|.pdf|0|',
                          755)],
        'code-line': '        return np.exp(self.logpdf(x))\n',
        'first-line': 713L,
        'folded-linenos': [],
        'sel-line': 756L,
        'sel-line-start': 24908L,
        'selection_end': 24908L,
        'selection_start': 24908L,
        'zoom': 0L},
                       loc('../AppData/Roaming/Python/Python38/site-packages/tensorflow/python/eager/execute.py'): {'a'\
        'ttrib-starts': [('quick_execute|0|',
                          32)],
        'code-line': '    tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, d'\
                     'evice_name, op_name,\n',
        'first-line': 39L,
        'folded-linenos': [],
        'sel-line': 58L,
        'sel-line-start': 2206L,
        'selection_end': 2206L,
        'selection_start': 2206L,
        'zoom': 0L},
                       loc('../AppData/Roaming/Python/Python38/site-packages/tensorflow/python/framework/func_graph.py'): {'a'\
        'ttrib-starts': [('func_graph_from_py_func|0|',
                          795),
                         ('func_graph_from_py_func|0|.wrapper|0|',
                          952)],
        'code-line': '              raise e.ag_error_metadata.to_exception(e'\
                     ')\n',
        'first-line': 948L,
        'folded-linenos': [],
        'sel-line': 967L,
        'sel-line-start': 40694L,
        'selection_end': 40694L,
        'selection_start': 40694L,
        'zoom': 0L},
                       loc('../AppData/Roaming/Python/Python38/site-packages/tensorflow/python/framework/ops.py'): {'a'\
        'ttrib-starts': [('_create_c_op|0|',
                          1605)],
        'code-line': '    raise ValueError(str(e))\n',
        'first-line': 1648L,
        'folded-linenos': [],
        'sel-line': 1656L,
        'sel-line-start': 58117L,
        'selection_end': 58117L,
        'selection_start': 58117L,
        'zoom': 0L},
                       loc('../AppData/Roaming/Python/Python38/site-packages/tensorflow/python/keras/engine/input_spec.py'): {'a'\
        'ttrib-starts': [('assert_input_compatibility|0|',
                          131)],
        'code-line': "        raise ValueError('Input ' + str(input_index) +"\
                     " ' of layer ' +\n",
        'first-line': 156L,
        'folded-linenos': [],
        'sel-line': 175L,
        'sel-line-start': 6420L,
        'selection_end': 6420L,
        'selection_start': 6420L,
        'zoom': 0L},
                       loc('../AppData/Roaming/Python/Python38/site-packages/tensorflow/python/keras/engine/training.py'): {'a'\
        'ttrib-starts': [('Model|0|',
                          94),
                         ('Model|0|.fit|0|',
                          584)],
        'code-line': '        if validation_data and self._should_eval(epoch'\
                     ', validation_freq):\n',
        'first-line': 174L,
        'folded-linenos': [],
        'sel-line': 858L,
        'sel-line-start': 38971L,
        'selection_end': 38971L,
        'selection_start': 38971L,
        'zoom': 0L},
                       loc('../AppData/Roaming/Python/Python38/site-packages/tensorflow/python/keras/layers/core.py'): {'a'\
        'ttrib-starts': [('Dense|0|',
                          1051),
                         ('Dense|0|.build|0|',
                          1146)],
        'code-line': "      raise ValueError('The last dimension of the inpu"\
                     "ts to `Dense` '\n",
        'first-line': 1134L,
        'folded-linenos': [],
        'sel-line': 1153L,
        'sel-line-start': 42682L,
        'selection_end': 42682L,
        'selection_start': 42682L,
        'zoom': 0L},
                       loc('../AppData/Roaming/Python/Python38/site-packages/tensorflow/python/ops/array_ops.py'): {'a'\
        'ttrib-starts': [('placeholder|0|',
                          2984)],
        'code-line': '    raise RuntimeError("tf.placeholder() is not compat'\
                     'ible with "\n',
        'first-line': 3003L,
        'folded-linenos': [],
        'sel-line': 3022L,
        'sel-line-start': 104897L,
        'selection_end': 104897L,
        'selection_start': 104897L,
        'zoom': 0L},
                       loc('../AppData/Roaming/Python/Python38/site-packages/tensorflow/python/ops/nn_ops.py'): {'a'\
        'ttrib-starts': [('Convolution|0|',
                          1003),
                         ('Convolution|0|.__init__|0|',
                          1020)],
        'code-line': '      raise ValueError(\n',
        'first-line': 1021L,
        'folded-linenos': [],
        'sel-line': 1040L,
        'sel-line-start': 38844L,
        'selection_end': 38844L,
        'selection_start': 38844L,
        'zoom': 0L},
                       loc('../anaconda3/Lib/_collections_abc.py'): {'attrib'\
        '-starts': [('ItemsView|0|',
                     724),
                    ('ItemsView|0|.__contains__|0|',
                     732)],
        'code-line': '        key, value = item\n',
        'first-line': 713L,
        'folded-linenos': [],
        'sel-line': 733L,
        'sel-line-start': 18978L,
        'selection_end': 18978L,
        'selection_start': 18978L,
        'zoom': 0L},
                       loc('../anaconda3/Lib/imp.py'): {'attrib-starts': [('l'\
        'oad_dynamic|0|',
        329)],
        'code-line': '        return _load(spec)\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 341L,
        'sel-line-start': 10478L,
        'selection_end': 10478L,
        'selection_start': 10478L,
        'zoom': 0L},
                       loc('../anaconda3/Lib/importlib/_bootstrap.py'): {'at'\
        'trib-starts': [('_call_with_frames_removed|0|',
                         210)],
        'code-line': '    return f(*args, **kwds)\n',
        'first-line': 213L,
        'folded-linenos': [],
        'sel-line': 218L,
        'sel-line-start': 6758L,
        'selection_end': 6758L,
        'selection_start': 6758L,
        'zoom': 0L},
                       loc('../anaconda3/Lib/ntpath.py'): {'attrib-starts': [('j'\
        'oin|0|',
        32)],
        'code-line': '    path = os.fspath(path)\n',
        'first-line': 56L,
        'folded-linenos': [],
        'sel-line': 75L,
        'sel-line-start': 2399L,
        'selection_end': 2399L,
        'selection_start': 2399L,
        'zoom': 0L},
                       loc('../anaconda3/Lib/site-packages/keras/__init__.py'): {'a'\
        'ttrib-starts': [],
        'code-line': "        'Keras requires TensorFlow 2.2 or higher. '\r"\
                     "\n",
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 5L,
        'sel-line-start': 136L,
        'selection_end': 136L,
        'selection_start': 136L,
        'zoom': 0L},
                       loc('../anaconda3/Lib/site-packages/matplotlib/artist.py'): {'a'\
        'ttrib-starts': [('Artist|0|',
                          56),
                         ('Artist|0|.update|0|',
                          941),
                         ('Artist|0|.update|0|._update_property|0|',
                          945)],
        'code-line': '                                         .format(type('\
                     'self).__name__, k))\n',
        'first-line': 950L,
        'folded-linenos': [],
        'sel-line': 969L,
        'sel-line-start': 30826L,
        'selection_end': 30826L,
        'selection_start': 30826L,
        'zoom': 0L},
                       loc('../anaconda3/Lib/site-packages/matplotlib/axes/_base.py'): {'a'\
        'ttrib-starts': [('_process_plot_var_args|0|',
                          117),
                         ('_process_plot_var_args|0|._xy_from_xy|0|',
                          240)],
        'code-line': '                             "have shapes {} and {}".f'\
                     'ormat(x.shape, y.shape))\n',
        'first-line': 250L,
        'folded-linenos': [],
        'sel-line': 269L,
        'sel-line-start': 10054L,
        'selection_end': 10054L,
        'selection_start': 10054L,
        'zoom': 0L},
                       loc('../anaconda3/Lib/site-packages/matplotlib/markers.py'): {'a'\
        'ttrib-starts': [('MarkerStyle|0|',
                          164),
                         ('MarkerStyle|0|.set_marker|0|',
                          291)],
        'code-line': '                                 .format(marker))\n',
        'first-line': 293L,
        'folded-linenos': [],
        'sel-line': 312L,
        'sel-line-start': 11685L,
        'selection_end': 11685L,
        'selection_start': 11685L,
        'zoom': 0L},
                       loc('../anaconda3/Lib/site-packages/matplotlib/texmanager.py'): {'a'\
        'ttrib-starts': [('TexManager|0|',
                          48),
                         ('TexManager|0|._run_checked_subprocess|0|',
                          298)],
        'code-line': "                    exc=exc.output.decode('utf-8'))) f"\
                     "rom exc\n",
        'first-line': 297L,
        'folded-linenos': [],
        'sel-line': 316L,
        'sel-line-start': 11535L,
        'selection_end': 11535L,
        'selection_start': 11535L,
        'zoom': 0L},
                       loc('../anaconda3/Lib/site-packages/matplotlib/text.py'): {'a'\
        'ttrib-starts': [('Text|0|',
                          111),
                         ('Text|0|.get_prop_tup|0|',
                          822)],
        'code-line': '                self.figure.dpi, weakref.ref(renderer)'\
                     ',\n',
        'first-line': 817L,
        'folded-linenos': [],
        'sel-line': 836L,
        'sel-line-start': 27873L,
        'selection_end': 27873L,
        'selection_start': 27873L,
        'zoom': 0L},
                       loc('../anaconda3/Lib/site-packages/numpy/core/__init__.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '    raise ImportError(msg)\n',
        'first-line': 34L,
        'folded-linenos': [],
        'sel-line': 53L,
        'sel-line-start': 1850L,
        'selection_end': 1850L,
        'selection_start': 1850L,
        'zoom': 0L},
                       loc('../anaconda3/Lib/site-packages/numpy/core/_methods.py'): {'a'\
        'ttrib-starts': [('_mean|0|',
                          133)],
        'code-line': '    rcount = _count_reduce_items(arr, axis)\n',
        'first-line': 120L,
        'folded-linenos': [],
        'sel-line': 137L,
        'sel-line-start': 4881L,
        'selection_end': 4881L,
        'selection_start': 4881L,
        'zoom': 0L},
                       loc('../anaconda3/Lib/site-packages/pandas/core/generic.py'): {'a'\
        'ttrib-starts': [('NDFrame|0|',
                          150),
                         ('NDFrame|0|.__nonzero__|0|',
                          1476)],
        'code-line': '            f"The truth value of a {type(self).__name_'\
                     '_} is ambiguous. "\n',
        'first-line': 1459L,
        'folded-linenos': [],
        'sel-line': 1478L,
        'sel-line-start': 45010L,
        'selection_end': 45010L,
        'selection_start': 45010L,
        'zoom': 0L},
                       loc('../anaconda3/Lib/site-packages/pandas/core/ops/array_ops.py'): {'a'\
        'ttrib-starts': [('na_logical_op|0|',
                          263)],
        'code-line': "                    f\"Cannot perform '{op.__name__}' "\
                     "with a dtyped [{x.dtype}] array \"\n",
        'first-line': 278L,
        'folded-linenos': [],
        'sel-line': 297L,
        'sel-line-start': 9144L,
        'selection_end': 9144L,
        'selection_start': 9144L,
        'zoom': 0L},
                       loc('../anaconda3/Lib/unittest/case.py'): {'attrib-st'\
        'arts': [('TestCase|0|',
                  350),
                 ('TestCase|0|.assertAlmostEqual|0|',
                  862)],
        'code-line': '        raise self.failureException(msg)\n',
        'first-line': 886L,
        'folded-linenos': [],
        'sel-line': 905L,
        'sel-line-start': 34102L,
        'selection_end': 34102L,
        'selection_start': 34102L,
        'zoom': 0L},
                       loc('../bioinformatics/BA8E.py'): {'attrib-starts': [],
        'first-line': 16L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 684L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../complexity/computations/rsat.py'): {'attrib-s'\
        'tarts': [],
        'code-line': '    plt.rcParams.update({\r\n',
        'first-line': 156L,
        'folded-linenos': [],
        'sel-line': 139L,
        'sel-line-start': 4806L,
        'selection_end': 4869L,
        'selection_start': 4806L,
        'zoom': 0L},
                       loc('../complexity/origins/evolve_allometric_scaling.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('README.md'): {'attrib-starts': [],
        'code-line': '| json-test.py| Earier program to read data files|',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 30L,
        'sel-line-start': 1823L,
        'selection_end': 1842L,
        'selection_start': 1842L,
        'zoom': 0L},
                       loc('T.py'): {'attrib-starts': [],
                                     'code-line': 'ns = [2**i for i in range'\
        '(10)]\r\n',
                                     'first-line': 0L,
                                     'folded-linenos': [],
                                     'sel-line': 2L,
                                     'sel-line-start': 35L,
                                     'selection_end': 63L,
                                     'selection_start': 63L,
                                     'zoom': 0L},
                       loc('backprop.py'): {'attrib-starts': [],
        'code-line': '# Copyright (C) 2017-2020 Greenweaves Software Limited'\
                     '\r\n',
        'first-line': 276L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 689L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('c1.py'): {'attrib-starts': [],
                                      'code-line': 'print ("number of traini'\
        'ng examples = " + str(X_train.shape[0]))\r\n',
                                      'first-line': 41L,
                                      'folded-linenos': [],
                                      'sel-line': 23L,
                                      'sel-line-start': 637L,
                                      'selection_end': 699L,
                                      'selection_start': 683L,
                                      'zoom': 0L},
                       loc('chi-sq.py'): {'attrib-starts': [],
        'code-line': 'print (stats.chisquare([16, 16, 16, 16, 12, 12], f_exp'\
                     '=[16, 16, 16, 16, 16, 8]))',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 2L,
        'sel-line-start': 31L,
        'selection_end': 69L,
        'selection_start': 69L,
        'zoom': 0L},
                       loc('cnn_utils.py'): {'attrib-starts': [],
        'code-line': '# snarfed from https://github.com/JudasDie/deeplearnin'\
                     'g.ai/blob/master/Convolutional%20Neural%20Networks/wee'\
                     'k1/cnn_utils.py\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 123L,
        'selection_start': 123L,
        'zoom': 0L},
                       loc('fcs.py'): {'attrib-starts': [],
                                       'code-line': '',
                                       'first-line': 0L,
                                       'folded-linenos': [],
                                       'sel-line': 0L,
                                       'sel-line-start': 0L,
                                       'selection_end': 0L,
                                       'selection_start': 0L,
                                       'zoom': 0L},
                       loc('fcs/README.md'): {'attrib-starts': [],
        'code-line': '| rsq.py | Plot statistics for r squared from gcps.py|'\
                     '\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 11L,
        'sel-line-start': 568L,
        'selection_end': 621L,
        'selection_start': 621L,
        'zoom': 0L},
                       loc('fcs/em.py'): {'attrib-starts': [('get_mus|0|',
        121)],
        'code-line': 'def get_mus(xs,ys,zs,K=6,min_separation=100000,N=25):'\
                     '\r\n',
        'first-line': 108L,
        'folded-linenos': [],
        'sel-line': 121L,
        'sel-line-start': 4346L,
        'selection_end': 4386L,
        'selection_start': 4371L,
        'zoom': 0L},
                       loc('fcs/fcs.py'): {'attrib-starts': [('purge_outlier'\
        's|0|',
        45)],
        'code-line': "def purge_outliers(df,nsigma=3,nw=2,max_iterations=flo"\
                     "at('inf')):\r\n",
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 45L,
        'sel-line-start': 1532L,
        'selection_end': 1550L,
        'selection_start': 1536L,
        'zoom': 0L},
                       loc('fcs/gcps.py'): {'attrib-starts': [],
        'code-line': '    from matplotlib import rc\r\n',
        'first-line': 91L,
        'folded-linenos': [],
        'sel-line': 98L,
        'sel-line-start': 3697L,
        'selection_end': 3835L,
        'selection_start': 3697L,
        'zoom': 0L},
                       loc('fcs/rsq.py'): {'attrib-starts': [],
        'code-line': '        ',
        'first-line': 20L,
        'folded-linenos': [],
        'sel-line': 36L,
        'sel-line-start': 1311L,
        'selection_end': 1319L,
        'selection_start': 1319L,
        'zoom': 0L},
                       loc('fcs/sizes.py'): {'attrib-starts': [],
        'code-line': '# Copyright (C) 2020 Greenweaves Software Limited\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 684L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('fcs/standards.py'): {'attrib-starts': [('create_'\
        'standards|0|',
        17)],
        'code-line': '            with open(os.path.join(path,file)) as f:\r'\
                     '\n',
        'first-line': 9L,
        'folded-linenos': [],
        'sel-line': 29L,
        'sel-line-start': 1066L,
        'selection_end': 1110L,
        'selection_start': 1110L,
        'zoom': 0L},
                       loc('fcs/temp.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('feex2.py'): {'attrib-starts': [],
        'code-line': '\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 17L,
        'sel-line-start': 724L,
        'selection_end': 724L,
        'selection_start': 724L,
        'zoom': 0L},
                       loc('k2.py'): {'attrib-starts': [],
                                      'code-line': "model.add(Conv2D(48, (3,"\
        " 3), activation='relu'))\r\n",
                                      'first-line': 0L,
                                      'folded-linenos': [],
                                      'sel-line': 7L,
                                      'sel-line-start': 291L,
                                      'selection_end': 339L,
                                      'selection_start': 291L,
                                      'zoom': 0L},
                       loc('k3.py'): {'attrib-starts': [],
                                      'code-line': '\r\n',
                                      'first-line': 24L,
                                      'folded-linenos': [],
                                      'sel-line': 1L,
                                      'sel-line-start': 46L,
                                      'selection_end': 46L,
                                      'selection_start': 46L,
                                      'zoom': 0L},
                       loc('k4.py'): {'attrib-starts': [],
                                      'code-line': "model.add(Dense(1024, ac"\
        "tivation='relu'))\r\n",
                                      'first-line': 71L,
                                      'folded-linenos': [],
                                      'sel-line': 77L,
                                      'sel-line-start': 2684L,
                                      'selection_end': 2703L,
                                      'selection_start': 2703L,
                                      'zoom': 0L},
                       loc('keras-demo.py'): {'attrib-starts': [],
        'code-line': "model.compile(loss='categorical_crossentropy',\r\n",
        'first-line': 7L,
        'folded-linenos': [],
        'sel-line': 39L,
        'sel-line-start': 1262L,
        'selection_end': 1308L,
        'selection_start': 1281L,
        'zoom': 0L},
                       loc('logo.py'): {'attrib-starts': [],
        'code-line': 'plt.show()\r\n',
        'first-line': 11L,
        'folded-linenos': [],
        'sel-line': 26L,
        'sel-line-start': 850L,
        'selection_end': 853L,
        'selection_start': 853L,
        'zoom': 0L},
                       loc('metropolis-hastings.py'): {'attrib-starts': [],
        'code-line': "print (f'Compare with numpy.cov function: {numpy.cov(d"\
                     "ata.T)}')\r\n",
        'first-line': 55L,
        'folded-linenos': [],
        'sel-line': 64L,
        'sel-line-start': 2004L,
        'selection_end': 2065L,
        'selection_start': 2065L,
        'zoom': 0L},
                       loc('mnist-test.py'): {'attrib-starts': [],
        'code-line': '# http://yann.lecun.com/exdb/mnist/\r\n',
        'first-line': 53L,
        'folded-linenos': [],
        'sel-line': 18L,
        'sel-line-start': 746L,
        'selection_end': 783L,
        'selection_start': 781L,
        'zoom': 0L},
                       loc('mnist_test.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 9L,
        'sel-line-start': 181L,
        'selection_end': 217L,
        'selection_start': 217L,
        'zoom': 0L},
                       loc('naive.py'): {'attrib-starts': [],
        'code-line': '\r\n',
        'first-line': 39L,
        'folded-linenos': [],
        'sel-line': 3L,
        'sel-line-start': 200L,
        'selection_end': 200L,
        'selection_start': 200L,
        'zoom': 0L},
                       loc('nonconjugate.py'): {'attrib-starts': [],
        'code-line': 'import matplotlib.pyplot as plt\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 256L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('test.py'): {'attrib-starts': [],
        'code-line': '    print (tr.test_weights(Thetas,images_test,labels_t'\
                     'est))',
        'first-line': 26L,
        'folded-linenos': [],
        'sel-line': 45L,
        'sel-line-start': 2012L,
        'selection_end': 2071L,
        'selection_start': 2071L,
        'zoom': 0L},
                       loc('tf1.py'): {'attrib-starts': [],
                                       'code-line': "plt.title (f'Loss={test"\
        "_loss:.4f}, Accuracy={test_acc:.4f}')\r\n",
                                       'first-line': 58L,
                                       'folded-linenos': [],
                                       'sel-line': 69L,
                                       'sel-line-start': 3101L,
                                       'selection_end': 3136L,
                                       'selection_start': 3136L,
                                       'zoom': 0L},
                       loc('tf2.py'): {'attrib-starts': [],
                                       'code-line': "plt.title (f'Loss={test"\
        "_loss:.4f}, Accuracy={test_acc:.4f}')\r\n",
                                       'first-line': 61L,
                                       'folded-linenos': [],
                                       'sel-line': 63L,
                                       'sel-line-start': 2573L,
                                       'selection_end': 2608L,
                                       'selection_start': 2608L,
                                       'zoom': 0L},
                       loc('train.py'): {'attrib-starts': [],
        'code-line': '            Thetas=bp.load(run=args.name)\r\n',
        'first-line': 125L,
        'folded-linenos': [],
        'sel-line': 143L,
        'sel-line-start': 5845L,
        'selection_end': 5857L,
        'selection_start': 5857L,
        'zoom': 0L},
                       loc('versions.py'): {'attrib-starts': [],
        'code-line': 'import keras\r\n',
        'first-line': 2L,
        'folded-linenos': [],
        'sel-line': 18L,
        'sel-line-start': 378L,
        'selection_end': 430L,
        'selection_start': 378L,
        'zoom': 0L}}
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('default',
                        [u''])}
proj.pyexec = {None: ('custom',
                      u'C:\\Users\\Simon\\AppData\\Local\\Programs\\Python\\Python38\\python.exe')}
search.replace-history = [u'sums',
                          u'heights',
                          u'fcs.get_image_name',
                          u'Ks',
                          u'np']
search.search-history = [u'stand',
                         u'get_boundaries',
                         u'zs',
                         u'ys',
                         u'ys ',
                         u'get_image_name',
                         u'args.K',
                         u'print',
                         u'numpy']
