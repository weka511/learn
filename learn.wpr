#!wing
#!version=10.0
##################################################################
# Wing project file                                              #
##################################################################
[project attributes]
proj.file-list = [loc('cavi1.py'),
                  loc('cavi3.py'),
                  loc('cavi.py'),
                  loc('em.py'),
                  loc('exercises.py'),
                  loc('ExploreExploit.py'),
                  loc('feex1.py'),
                  loc('feex2.py'),
                  loc('feex3.py'),
                  loc('feex5.py'),
                  loc('fscWidths.py'),
                  loc('gibbs.py'),
                  loc('gmm.py'),
                  loc('hopfield.py'),
                  loc('LeNet5.py'),
                  loc('mhast.py'),
                  loc('motifs.py'),
                  loc('naive.py'),
                  loc('README.md'),
                  loc('template.py'),
                  loc('torch-nn.py'),
                  loc('UGMM.py')]
proj.file-type = 'normal'
proj.launch-config = {loc('LeNet5.py'): ('project',
        ('continue',
         '')),
                      loc('ae.py'): ('project',
                                     ('--help',
                                      '')),
                      loc('cavi.py'): ('project',
                                       ('--show --K 3',
        '')),
                      loc('cavi1.py'): ('project',
        ('--show',
         '')),
                      loc('cavi3.py'): ('project',
        ('--show',
         '')),
                      loc('em.py'): ('project',
                                     ('--show',
                                      '')),
                      loc('exercises.py'): ('project',
        ('1',
         '')),
                      loc('fcs.py'): ('project',
                                      ('-p PAPRD15100481',
                                       '')),
                      loc('fcs/doublets.py'): ('project',
        ('--plate PAP15100449r',
         '')),
                      loc('fcs/fcs.py'): ('project',
        ('--plate RTI15100057',
         '')),
                      loc('fcs/gcps.py'): ('project',
        ('--plate PAP90200082  --well G12  --doublets --K 3',
         '')),
                      loc('fcs/partition.py'): ('project',
        ('--well B12 --plate PAP15100054 --show',
         '')),
                      loc('fcs/plotreds.py'): ('project',
        ('--plate RTI15100057 --well H12',
         '')),
                      loc('fcs/rsq.py'): ('project',
        ('rsq1.txt',
         '')),
                      loc('fcs/sizes.py'): ('project',
        ('--plate RTI15101849 --well A12 --K 6 --show',
         '')),
                      loc('fcs/temp.py'): ('project',
        ('--plate PAP15100449r --well H12',
         '')),
                      loc('flowers.py'): ('project',
        ('train',
         '')),
                      loc('gibbs.py'): ('project',
        ('--show  ',
         '')),
                      loc('gmm.py'): ('project',
                                      ('--show --K 3',
                                       '')),
                      loc('mhast.py'): ('project',
        ('--show',
         '')),
                      loc('template.py'): ('project',
        ('--show',
         '')),
                      loc('test.py'): ('project',
                                       ('-n  wider',
        '')),
                      loc('torch-nn.py'): ('project',
        ('--train --show',
         '')),
                      loc('train.py'): ('project',
        ('-l 784 20 10 -n bar -r',
         '')),
                      loc('unknown:<untitled> #1'): ('project',
        ('torch-nn',
         ''))}
[user attributes]
debug.recent-run-args = {loc('LeNet5.py'): ['continue',
        'test',
        '--help',
        'retrain --epochs 1',
        'train --test',
        'train --file foo',
        'train',
        '--load',
        '--load foo'],
                         loc('ae.py'): ['--help',
        '--N 128  --reload 160',
        '--N 128  --reload 144',
        '--N 128  --reload 112',
        '--N 128',
        '--N 64',
        '--N 64 --batch 2048  --encoder 784 1000 500 250 2',
        '--N 64 --batch 2048',
        '--N 16 --batch 2048',
        '--N 16 --batch 512',
        '--N 16 --batch 256 --show',
        '--N 16 -batch 256 --show',
        '--N 3 --show',
        '--N 3',
        '--N 5',
        '--N 1',
        '--N 2',
        '--N 1 --show',
        '--N 1 ',
        '--N 1 --nonlinearity relu',
        '--N 1 --nonlinearity sigmoid',
        '--N 1 --nonlinearity relu none',
        '--N 1 --non-linearity relu none',
        '--N 1 --non-linarity relu none',
        '--N ',
        '--N 100',
        '--lr 0.01',
        '--N 2 --show',
        '--N 50',
        '--N 5\n'],
                         loc('cavi.py'): ['--show --K 3',
        '--show --N 5',
        '--show --N 50',
        '--show --N 500',
        '--show'],
                         loc('cavi1.py'): ['--show',
        '--show --em'],
                         loc('cavi3.py'): ['--show'],
                         loc('dicom.py'): ['--input D:\\data\\rsna --n_jobs 1',
        '--input D:\\data\\rsna '],
                         loc('em.py'): ['--show'],
                         loc('exercises.py'): ['1'],
                         loc('fcs.py'): ['-p PAPRD15100481',
        '--plate PAP90100014',
        '--plate PAP90100003',
        '--plate RTI15100117'],
                         loc('fcs/doublets.py'): ['--plate PAP15100449r',
        '--plates PAP15100449r',
        '--help',
        '--plate RTIRD152008144r  --well H12  --mult 1',
        '--plate RTIRD152008144r  --well H12  --init randomizex',
        '--plate RTIRD152008144r  --well H12  --init randomize',
        '--plate RTIRD152008144r  --well H12  --choices randomize',
        '--plate RTIRD152008144r  --well H12  --choices foo',
        '--plate RTIRD152008144r  --well H12',
        '--plate RTIQC15200110  --well H12',
        '--plate RTIRD152008144r --well H12',
        '--plate RTIRD152008144r -well H12',
        '--plate RTIRD152008144r H12',
        '--plateRTIRD152008144r H12',
        '--plate RTIQC15200110 H12',
        '--plate PAP15100449r H12'],
                         loc('fcs/fcs.py'): ['--plate RTI15100057'],
                         loc('fcs/gcps.py'): ['--plate PAP90200082  --well G12  --doublets --K 3',
        '--plate PAP90200082  --well G12  --doublets',
        '--plate PAP90200082  --wells G12  --doublets',
        '--plate PAP90200082   --doublets',
        '--plate PAP90200082   --fixup',
        '--plate PAP90200082 --well H12  --fixup',
        '--plate PAP90200082 -well H12  --fixup',
        '--plate PAP90200082 H12  --fixup',
        '--plate PAP90200082  --well H12 --fixup',
        '--plate PAP90200082  --well H12',
        '--plate PAP90200082  --well G12',
        '--plate PAP0000024  --well H12 --fixup',
        '--plate PAP0000024  --well H12',
        '--plate PAP0000024  --well H12 --K 4',
        '--plate PAP15100449  --well H12',
        '--plate PAP15100449  --well H12  --K 4',
        '--plate PAP15100449  --well H12  --K 3',
        '--plate PAP15100449r  --well H12  --K 3',
        '--plate PAP15100449r  --well H12  --K 4',
        '--plate RTI15100057 --well G12',
        '--plate RTI15100057 --well G12 --rows 4 --columns 4',
        '--plate RTI15100057 --well G12 --rows 4',
        '--plate RTI15100057 --wells G12',
        '--plate RTI15100057 ',
        '--plate RTI15100057 -well G12',
        '--plate RTI15100057 -wells G12',
        '--plate RTI15100057',
        '--plate RTI15100057 --well H12'],
                         loc('fcs/partition.py'): ['--well B12 --plate PAP15100054 --show',
        '--well A12 --plate PAP15100054 --show',
        '--well E12 --plate PAP15100449r --show',
        '--well F12 --plate PAP15100449r',
        '--well C12 --plate PAP15100449r',
        '--well B12 --plate PAP15100449r',
        '--well A12 --plate PAP15100449r',
        "--well C12 --plate PAP90200082'",
        "--well A12 --plate PAP90200082'",
        "--well B12 --plate PAP90200082'",
        '--well B12 --plate RTINV15201014',
        '--well B12 --plate PAP90200082',
        '--well A12 --plate PAP90200082',
        '--well A12'],
                         loc('fcs/plotreds.py'): ['--plate RTI15100057 --well H12',
        '--plate RTI15100057'],
                         loc('fcs/rsq.py'): ['rsq1.txt',
        'rsq.txt',
        'foo'],
                         loc('fcs/sizes.py'): ['--plate RTI15101849 --well A12 --K 6 --show',
        '--plate RTI15101849 --well A12 --K 9 --show',
        '--plate RTI15101849 --well A12 --K 7 --show',
        '--plate RTI15101849 --well A12 --K 6',
        '--plate RTI15102588 --well H8 --K 6 9',
        '--plate RTI15102588 --well C12 --K 6 9',
        '--plate RTI15102588 --well C12',
        '--plate PAP0000024 --well A12',
        '--plate PAP0000024',
        '--plate PAP00000024',
        '--plate PAP15100054',
        '--plate PAP15100054 --well A12'],
                         loc('fcs/temp.py'): ['--plate PAP15100449r --well H12'],
                         loc('flowers.py'): ['train',
        'lr --epochs 100',
        'lr --epochs 25',
        'lr',
        'train --epoch 1',
        'test',
        'train --epochs 5',
        'train --logfile bar.log',
        'train --logfile foo',
        '--logfile foo',
        'show'],
                         loc('gibbs.py'): ['--show  ',
        '--show  --E 1000  --seed 123456',
        '--show  --E 1000  --seed 1',
        '--show  --E 1000  --seed 1234567',
        '--show  --E 1000',
        '--show  -E 1000',
        '--show'],
                         loc('gmm.py'): ['--show --K 3',
        '--show --K 5',
        '--show --n 5',
        '--show'],
                         loc('mhast.py'): ['--show'],
                         loc('template.py'): ['--show',
        '--help'],
                         loc('test.py'): ['-n  wider',
        '-n  scaled',
        '-n nn scaled',
        '-n nn'],
                         loc('torch-nn.py'): ['--train --show',
        '--train',
        '--test'],
                         loc('train.py'): ['-l 784 20 10 -n bar -r',
        '-l 784 20 10 -n bar',
        '-h',
        '-l 784 20 10 -N 11 -n foo --eta 0.2 --alpha 0.1 -p 1000 -t 1',
        '-l 784 40 10 -N 11 -n foo --eta 0.2 --alpha 0.1 -p 1000 -t 1',
        '-l 784 40 10 -N 10 -n foo --eta 0.2 --alpha 0.1 -p 10000',
        '-l 784 40 10 -N 10 -n eta2alpha1a --eta 0.2 --alpha 0.1 -p 10000',
        '-l 784 40 10 -N 1 -n eta2alpha1 --eta 0.2 --alpha 0.1 -p 1000',
        '-l 784 40 10 -N 1 -n alpha1 --eta 0.5 --alpha 0.1 -p 1000',
        '-l 784 40 10 -N 1 -n alpha0 --eta 0.5 --alpha 0 -p 1000',
        '-l 784 40 10 -N 100 -n alpha -e 0.5 -p 10000',
        '-l 784 40 10 -N 100 -n alpha1 -e 0.5 -p 1000',
        '-l 784 40 10 -N 100 -n alpha -e 0.5 -p 1000',
        '-l 784 40 10 -N 1 -n alpha -e 0.5 -p 1000',
        '-l 784 40 10 -N 1 -n alpha1 -e 0.5 -p 1000',
        '-l 784 40 10 -N 20 -n alpha -e 0.5 -p 10000',
        '-l 784 40 10 -N 20 -n scaled -e 0.5 -p 10000',
        '-l 784 40 10 -N 2 -n scaled -e 0.5',
        '-l 784 40 10 -N 2 -n raw -e 0.5',
        '-l 784 40 10 -N 2 -n foo -e 0.5',
        '-l 784 40 10 -N 2 -n baz -e 0.5',
        '-l 784 40 10 -N 2 -n bar -e 0.5',
        '-l 784 40 10 -N 2 -n foo -e 0.5 -p 10',
        '-l 784 40 10 -N 2 -n foo',
        '-l 784 40 10',
        '-l 10 40 30',
        '--foo\n',
        '--help\n',
        '--d foo',
        '--help'],
                         loc('unknown:<untitled> #2'): ['torch-nn']}
debug.show-args-dialog = {loc('backprop.py'): False,
                          loc('mnist-test.py'): False,
                          loc('mnist_test.py'): False}
edit.multi-select-popup-size = (245,
                                102)
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'dtaAtJloNhSft7SabFzspl0xqEmVIDbK',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.24778761061946908,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [(0,)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('../../../Program Files (x86)/Wing Personal 8/resources/typeshed/stdlib/3/builtins.pyi'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../Program Files (x86)/Wing Personal 8/resources/typeshed/stdlib/3/builtins.pyi'),
                      'BlockingIOError')]},
        loc('../../../Program Files/Wing Personal 9/resources/builtin-pi-files/__os__/win32/3.11/builtins.pi'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../Program Files/Wing Personal 9/resources/builtin-pi-files/__os__/win32/3.11/builtins.pi'),
                      'abs')]},
        loc('../AppData/Local/Programs/Python/Python311/Lib/argparse.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python311/Lib/argparse.py'),
                      'Action')]},
        loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/numpy/lib/_datasource.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/numpy/lib/_datasource.py'),
                      'DataSource')]},
        loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/torch/nn/modules/loss.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/torch/nn/modules/loss.py'),
                      'BCELoss')]},
        loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/matplotlib/artist.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/matplotlib/artist.py'),
                      'allow_rasterization')]},
        loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/matplotlib/colors.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/matplotlib/colors.py'),
                             '_warn_if_global_cmap_modified')]],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/matplotlib/colors.py'),
                      'BoundaryNorm')]},
        loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/matplotlib/lines.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/matplotlib/lines.py'),
                      'drawStyles')]},
        loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/tensorflow/python/framework/func_graph.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/tensorflow/python/framework/func_graph.py'),
                      'check_mutation')]},
        loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/tensorflow/python/keras/layers/core.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/tensorflow/python/keras/layers/core.py'),
                      'Activation')]},
        loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/nn/modules/linear.py'): {'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/nn/modules/linear.py'),
                             'Linear')]],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/nn/modules/linear.py'),
                      'Bilinear')]},
        loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/nn/modules/module.py'): {'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/nn/modules/module.py'),
                             '_IncompatibleKeys')]],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/nn/modules/module.py'),
                      'Module')]},
        loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/utils/data/dataloader.py'): {'expanded-nodes': [[('class def',
        loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/utils/data/dataloader.py'),
        'DataLoader')]],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/utils/data/dataloader.py'),
                      'DataLoader')]},
        loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/utils/data/sampler.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/utils/data/sampler.py'),
                      'BatchSampler')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/PIL/Image.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Roaming/Python/Python38/site-packages/PIL/Image.py'),
                      'ADAPTIVE')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/artist.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/artist.py'),
                      'allow_rasterization')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_axes.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_axes.py'),
                      'Axes')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_base.py'),
                      '_AxesBase')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/gridspec.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/gridspec.py'),
                      'GridSpec')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/pyplot.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/pyplot.py'),
                      'acorr')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/texmanager.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/texmanager.py'),
                      'TexManager')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/numpy/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Roaming/Python/Python38/site-packages/numpy/conftest.py'),
                      '')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/pandas/core/generic.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Roaming/Python/Python38/site-packages/pandas/core/generic.py'),
                      'bool_t')]},
        loc('../anaconda3/Lib/_collections_abc.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../anaconda3/Lib/_collections_abc.py'),
                      'AsyncGenerator')]},
        loc('../nlp/template.py'): {'expanded-nodes': [],
                                    'selected-nodes': [],
                                    'top-node': [('generic attribute',
        loc('../nlp/template.py'),
        'args')]},
        loc('../nlp/word2vec.py'): {'expanded-nodes': [[('class def',
        loc('../nlp/word2vec.py'),
        'Word2Vec')]],
                                    'selected-nodes': [],
                                    'top-node': [('function def',
        loc('../nlp/word2vec.py'),
        'plot_weights')]},
        loc('../viz/README.md'): {'expanded-nodes': [],
                                  'selected-nodes': [],
                                  'top-node': None},
        loc('LeNet5.py'): {'expanded-nodes': [],
                           'selected-nodes': [],
                           'top-node': [('generic attribute',
        loc('LeNet5.py'),
        'accuracy')]},
        loc('README.md'): {'expanded-nodes': [],
                           'selected-nodes': [],
                           'top-node': None},
        loc('ae.py'): {'expanded-nodes': [],
                       'selected-nodes': [],
                       'top-node': [('generic attribute',
                                     loc('ae.py'),
                                     'args')]},
        loc('bayes1.py'): {'expanded-nodes': [],
                           'selected-nodes': [],
                           'top-node': [('generic attribute',
        loc('bayes1.py'),
        'alphas')]},
        loc('cavi.py'): {'expanded-nodes': [],
                         'selected-nodes': [],
                         'top-node': [('generic attribute',
                                       loc('cavi.py'),
                                       'args')]},
        loc('cavi1.py'): {'expanded-nodes': [],
                          'selected-nodes': [],
                          'top-node': [('generic attribute',
        loc('cavi1.py'),
        'args')]},
        loc('cavi3.py'): {'expanded-nodes': [],
                          'selected-nodes': [],
                          'top-node': [('generic attribute',
        loc('cavi3.py'),
        'args')]},
        loc('em.py'): {'expanded-nodes': [],
                       'selected-nodes': [],
                       'top-node': [('generic attribute',
                                     loc('em.py'),
                                     'args')]},
        loc('fashion.py'): {'expanded-nodes': [],
                            'selected-nodes': [[('generic attribute',
        loc('fashion.py'),
        '_')]],
                            'top-node': [('generic attribute',
        loc('fashion.py'),
        'class_names')]},
        loc('fcs.py'): {'expanded-nodes': [],
                        'selected-nodes': [None],
                        'top-node': None},
        loc('fcs/README.md'): {'expanded-nodes': [],
                               'selected-nodes': [],
                               'top-node': None},
        loc('fcs/fcs.py'): {'expanded-nodes': [],
                            'selected-nodes': [],
                            'top-node': [('generic attribute',
        loc('fcs/fcs.py'),
        'args')]},
        loc('fcs/gcps.py'): {'expanded-nodes': [],
                             'selected-nodes': [],
                             'top-node': [('generic attribute',
        loc('fcs/gcps.py'),
        'a')]},
        loc('fcs/partition.py'): {'expanded-nodes': [],
                                  'selected-nodes': [],
                                  'top-node': [('generic attribute',
        loc('fcs/partition.py'),
        'args')]},
        loc('fcs/plotreds.py'): {'expanded-nodes': [],
                                 'selected-nodes': [],
                                 'top-node': [('generic attribute',
        loc('fcs/plotreds.py'),
        'args')]},
        loc('feex1.py'): {'expanded-nodes': [],
                          'selected-nodes': [],
                          'top-node': [('generic attribute',
        loc('feex1.py'),
        'ax')]},
        loc('feex5.py'): {'expanded-nodes': [],
                          'selected-nodes': [],
                          'top-node': [('generic attribute',
        loc('feex5.py'),
        'ax')]},
        loc('flowers.py'): {'expanded-nodes': [],
                            'selected-nodes': [[('generic attribute',
        loc('flowers.py'),
        '_')]],
                            'top-node': [('generic attribute',
        loc('flowers.py'),
        'args')]},
        loc('gibbs.py'): {'expanded-nodes': [],
                          'selected-nodes': [],
                          'top-node': [('generic attribute',
        loc('gibbs.py'),
        'args')]},
        loc('gmm.py'): {'expanded-nodes': [],
                        'selected-nodes': [],
                        'top-node': [('generic attribute',
                                      loc('gmm.py'),
                                      'args')]},
        loc('hopfield.py'): {'expanded-nodes': [],
                             'selected-nodes': [],
                             'top-node': [('generic attribute',
        loc('hopfield.py'),
        'dE')]},
        loc('mhast.py'): {'expanded-nodes': [[('function def',
        loc('mhast.py'),
        'sample')]],
                          'selected-nodes': [[('function def',
        loc('mhast.py'),
        'sample')]],
                          'top-node': [('generic attribute',
        loc('mhast.py'),
        'accepted_number')]},
        loc('template.py'): {'expanded-nodes': [],
                             'selected-nodes': [],
                             'top-node': [('generic attribute',
        loc('template.py'),
        'accuracy')]},
        loc('torch-nn.py'): {'expanded-nodes': [],
                             'selected-nodes': [],
                             'top-node': [('generic attribute',
        loc('torch-nn.py'),
        'argparser')]},
        loc('train.py'): {'expanded-nodes': [],
                          'selected-nodes': [[('generic attribute',
        loc('train.py'),
        '_')]],
                          'top-node': [('generic attribute',
        loc('train.py'),
        'alpha')]},
        loc('unknown:<untitled> #3'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('generic attribute',
        loc('unknown:<untitled> #4'),
        'E')]},
        loc('unknown:<untitled> #5'): {'expanded-nodes': [],
                                       'selected-nodes': [[('generic attribute',
        loc('unknown:<untitled> #6'),
        'Z')]],
                                       'top-node': [('generic attribute',
        loc('unknown:<untitled> #7'),
        'angle')]},
        loc('untitled-1.py'): {'expanded-nodes': [],
                               'selected-nodes': [[('generic attribute',
        loc('untitled-1.py'),
        'E')]],
                               'top-node': [('generic attribute',
        loc('untitled-1.py'),
        'ax')]},
        loc('untitled-2.py'): {'expanded-nodes': [],
                               'selected-nodes': [[('generic attribute',
        loc('untitled-2.py'),
        'Z')]],
                               'top-node': [('generic attribute',
        loc('untitled-2.py'),
        'angle')]}},
                                'browse_mode': 'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {'Derived Classes': False,
        'Imported': False,
        'Modules': True}}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [3,
                          0],
        'notebook_display': 'normal',
        'notebook_percent': 0.30000000000000004,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': 'rgb',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': True,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 40,
                                       'fReplaceText': 'np.asarray',
                                       'fReverse': False,
                                       'fSearchText': 'asarray',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': True}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {},
                       'launch-id': None,
                       'sel-line': 2,
                       'sel-line-start': 159,
                       'selection_end': 159,
                       'selection_start': 159,
                       'zoom': 0}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('os-command',
                      'wide',
                      1,
                      {'last-percent': 0.8,
                       'toolbox-percent': 1.0,
                       'toolbox-tree-sel': ''})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('cavi3.py'),
        {'attrib-starts': [],
         'code-line': '# from random import gauss, randrange, seed\r\n',
         'first-line': 14,
         'folded-linenos': [],
         'sel-line': 29,
         'sel-line-start': 1239,
         'selection_end': 1241,
         'selection_start': 1241,
         'zoom': 0},
        1720512924.6337297],
        [loc('cavi3.py'),
         {'attrib-starts': [],
          'code-line': '    cs,xs = create_data(mu,\r\n',
          'first-line': 222,
          'folded-linenos': [],
          'sel-line': 240,
          'sel-line-start': 9040,
          'selection_end': 9063,
          'selection_start': 9052,
          'zoom': 0},
         1720513208.2375782],
        [loc('cavi3.py'),
         {'attrib-starts': [],
          'code-line': '        ELBOs,phi,m,s = cavi(x = np.asarray(xs),\r\n',
          'first-line': 229,
          'folded-linenos': [],
          'sel-line': 246,
          'sel-line-start': 9243,
          'selection_end': 9271,
          'selection_start': 9267,
          'zoom': 0},
         1720513436.2508664],
        [loc('cavi3.py'),
         {'attrib-starts': [('cavi|0|',
                             77)],
          'code-line': '    ELBOs = []\r\n',
          'first-line': 82,
          'folded-linenos': [],
          'sel-line': 100,
          'sel-line-start': 3747,
          'selection_end': 3757,
          'selection_start': 3757,
          'zoom': 0},
         1720513757.5969756],
        [loc('cavi3.py'),
         {'attrib-starts': [('plot_data|0|',
                             121)],
          'code-line': '                                alpha = 0.5,\r\n',
          'first-line': 135,
          'folded-linenos': [],
          'sel-line': 148,
          'sel-line-start': 5417,
          'selection_end': 5455,
          'selection_start': 5455,
          'zoom': 0},
         1720513807.5086422],
        [loc('cavi3.py'),
         {'attrib-starts': [('plotELBO|0|',
                             170),
                            ('plotELBO|0|.get_tick_freq|0|',
                             176)],
          'code-line': '        freq = 1\r\n',
          'first-line': 175,
          'folded-linenos': [],
          'sel-line': 180,
          'sel-line-start': 6587,
          'selection_end': 6600,
          'selection_start': 6600,
          'zoom': 0},
         1720513822.3225317],
        [loc('cavi3.py'),
         {'attrib-starts': [],
          'code-line': '                            size = args.K))\r\n',
          'first-line': 233,
          'folded-linenos': [],
          'sel-line': 240,
          'sel-line-start': 8878,
          'selection_end': 8904,
          'selection_start': 8904,
          'zoom': 0},
         1720513953.4049516],
        [loc('cavi3.py'),
         {'attrib-starts': [],
          'code-line': '                            size = args.K))\r\n',
          'first-line': 195,
          'folded-linenos': [],
          'sel-line': 240,
          'sel-line-start': 8878,
          'selection_end': 8904,
          'selection_start': 8904,
          'zoom': 0},
         1720513967.0562007],
        [loc('cavi3.py'),
         {'attrib-starts': [],
          'code-line': 'from numpy.random import default_rng\r\n',
          'first-line': 15,
          'folded-linenos': [],
          'sel-line': 27,
          'sel-line-start': 1129,
          'selection_end': 1165,
          'selection_start': 1165,
          'zoom': 0},
         1720514110.2237003],
        [loc('cavi3.py'),
         {'attrib-starts': [],
          'code-line': 'def plot_data(xs, cs,\r\n',
          'first-line': 113,
          'folded-linenos': [],
          'sel-line': 119,
          'sel-line-start': 4519,
          'selection_end': 4537,
          'selection_start': 4537,
          'zoom': 0},
         1720514131.7612615],
        [loc('cavi3.py'),
         {'attrib-starts': [('plot_data|0|',
                             119)],
          'code-line': '        ys = y_values.pdf(x_values)\r\n',
          'first-line': 148,
          'folded-linenos': [],
          'sel-line': 150,
          'sel-line-start': 5526,
          'selection_end': 5537,
          'selection_start': 5537,
          'zoom': 0},
         1720514149.6209974],
        [loc('cavi3.py'),
         {'attrib-starts': [('plot_data|0|',
                             119)],
          'code-line': '        ys = y_values.pdf(x_values)\r\n',
          'first-line': 178,
          'folded-linenos': [],
          'sel-line': 150,
          'sel-line-start': 5526,
          'selection_end': 5537,
          'selection_start': 5537,
          'zoom': 0},
         1720514155.893592],
        [loc('cavi.py'),
         {'attrib-starts': [],
          'code-line': 'from numpy.random import default_rng\r\n',
          'first-line': 15,
          'folded-linenos': [],
          'sel-line': 28,
          'sel-line-start': 1196,
          'selection_end': 1234,
          'selection_start': 1196,
          'zoom': 0},
         1720514159.0846276],
        [loc('cavi1.py'),
         {'attrib-starts': [('cavi|0|',
                             40),
                            ('cavi|0|.calcELBO|0|',
                             45)],
          'code-line': '        log_q_mu = -(0.5 / sigma) *(1/(len(xs)+1)) * (mu - mu_n) **2\r\n',
          'first-line': 55,
          'folded-linenos': [],
          'sel-line': 50,
          'sel-line-start': 2295,
          'selection_end': 2312,
          'selection_start': 2312,
          'zoom': 0},
         1720514159.9021888],
        [loc('UGMM.py'),
         {'attrib-starts': [],
          'code-line': '#!/usr/bin/env python\r\n',
          'first-line': 3,
          'folded-linenos': [],
          'sel-line': 0,
          'sel-line-start': 0,
          'selection_end': 21,
          'selection_start': 21,
          'zoom': 0},
         1720578465.8989193],
        [loc('UGMM.py'),
         {'attrib-starts': [],
          'code-line': '#!/usr/bin/env python\r\n',
          'first-line': 79,
          'folded-linenos': [],
          'sel-line': 0,
          'sel-line-start': 0,
          'selection_end': 21,
          'selection_start': 21,
          'zoom': 0},
         1720578472.216939],
        [loc('UGMM.py'),
         {'attrib-starts': [],
          'code-line': '#!/usr/bin/env python\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 0,
          'sel-line-start': 0,
          'selection_end': 21,
          'selection_start': 21,
          'zoom': 0},
         1720578478.837834],
        [loc('UGMM.py'),
         {'attrib-starts': [],
          'code-line': '#!/usr/bin/env python\r\n',
          'first-line': 90,
          'folded-linenos': [],
          'sel-line': 0,
          'sel-line-start': 0,
          'selection_end': 21,
          'selection_start': 21,
          'zoom': 0},
         1720578544.3408697],
        [loc('emm.py'),
         {'attrib-starts': [],
          'code-line': '\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 1,
          'sel-line-start': 23,
          'selection_end': 23,
          'selection_start': 23,
          'zoom': 0},
         1720578564.8541415],
        [loc('emm.py'),
         {'attrib-starts': [],
          'code-line': '\r\n',
          'first-line': 121,
          'folded-linenos': [],
          'sel-line': 1,
          'sel-line-start': 23,
          'selection_end': 23,
          'selection_start': 23,
          'zoom': 0},
         1720578582.0348704]],
        20),
        'current-loc': loc('em.py'),
        'editor-state-list': [(loc('em.py'),
                               {'attrib-starts': [('maximize_likelihood|0|',
        39)],
                                'code-line': '    while len(likelihoods)<N and not has_converged():\r\n',
                                'first-line': 0,
                                'folded-linenos': [],
                                'sel-line': 86,
                                'sel-line-start': 4165,
                                'selection_end': 4218,
                                'selection_start': 4169,
                                'zoom': 0}),
                              (loc('UGMM.py'),
                               {'attrib-starts': [],
                                'code-line': '#!/usr/bin/env python\r\n',
                                'first-line': 90,
                                'folded-linenos': [],
                                'sel-line': 0,
                                'sel-line-start': 0,
                                'selection_end': 21,
                                'selection_start': 21,
                                'zoom': 0})],
        'has-focus': False,
        'locked': False},
        [loc('em.py'),
         loc('UGMM.py')]),
                               'open_files': ['UGMM.py',
        'em.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.5},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((0,
                           3),
                          1720513512.9342232),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {},
                 'splits': 1,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    0),
                                   1720578450.6137397),
                 'user_data': {}},
        'window-alloc': (28,
                         -1,
                         1360,
                         732)}]}
guimgr.recent-documents = [loc('em.py'),
                           loc('emm.py'),
                           loc('UGMM.py')]
guimgr.visual-state = {loc('../../../Anaconda3/lib/argparse.py'): {'attrib-starts': [('_ActionsContainer',
        1215),
        ('_ActionsContainer.add_argument',
         1298)],
        'first-line': 1307,
        'folded-linenos': [],
        'sel-line': 1329,
        'sel-line-start': 46869,
        'selection_end': 46869,
        'selection_start': 46869,
        'zoom': 0},
                       loc('../../../Anaconda3/lib/site-packages/mnist/loader.py'): {'attrib-starts': [('MNIST',
        5),
        ('MNIST.load',
         40)],
        'first-line': 20,
        'folded-linenos': [],
        'sel-line': 41,
        'sel-line-start': 1100,
        'selection_end': 1100,
        'selection_start': 1100,
        'zoom': 0},
                       loc('../../../Anaconda3/lib/site-packages/numpy/core/_methods.py'): {'attrib-starts': [('_sum',
        30)],
        'first-line': 9,
        'folded-linenos': [],
        'sel-line': 31,
        'sel-line-start': 952,
        'selection_end': 952,
        'selection_start': 952,
        'zoom': 0},
                       loc('../../../Anaconda3/lib/site-packages/numpy/core/fromnumeric.py'): {'attrib-starts': [('reshape',
        127)],
        'first-line': 202,
        'folded-linenos': [],
        'sel-line': 224,
        'sel-line-start': 7179,
        'selection_end': 7179,
        'selection_start': 7179,
        'zoom': 0},
                       loc('../../../Anaconda3/lib/site-packages/numpy/core/numeric.py'): {'attrib-starts': [('ones',
        140)],
        'first-line': 169,
        'folded-linenos': [],
        'sel-line': 182,
        'sel-line-start': 5618,
        'selection_end': 5618,
        'selection_start': 5618,
        'zoom': 0},
                       loc('../../../Anaconda3/lib/site-packages/numpy/lib/function_base.py'): {'attrib-starts': [('append',
        4097)],
        'first-line': 4127,
        'folded-linenos': [],
        'sel-line': 4149,
        'sel-line-start': 134659,
        'selection_end': 134659,
        'selection_start': 134659,
        'zoom': 0},
                       loc('../../../Anaconda3/lib/unittest/case.py'): {'attrib-starts': [('TestCase',
        335),
        ('TestCase.assertAlmostEqual',
         830)],
        'first-line': 854,
        'folded-linenos': [],
        'sel-line': 867,
        'sel-line-start': 32976,
        'selection_end': 32976,
        'selection_start': 32976,
        'zoom': 0},
                       loc('../../../Program Files (x86)/Wing Personal 8/resources/typeshed/stdlib/3/builtins.pyi'): {'attrib-starts': [('object|0|',
        82)],
        'code-line': '    def __sizeof__(self) -> int: ...\n',
        'first-line': 88,
        'folded-linenos': [],
        'sel-line': 103,
        'sel-line-start': 2384,
        'selection_end': 2402,
        'selection_start': 2392,
        'zoom': 0},
                       loc('../../../Program Files (x86)/Wing Personal 8/resources/typeshed/stdlib/3/random.pyi'): {'attrib-starts': [],
        'code-line': 'def choice(seq: Sequence[_T]) -> _T: ...\n',
        'first-line': 47,
        'folded-linenos': [],
        'sel-line': 59,
        'sel-line-start': 2665,
        'selection_end': 2675,
        'selection_start': 2669,
        'zoom': 0},
                       loc('../../../Program Files/Wing Personal 9/resources/builtin-pi-files/__os__/win32/3.11/builtins.pi'): {'attrib-starts': [],
        'code-line': "__file__ = 'C:\\\\src\\\\ide-dev9\\\\build-files\\\\static-pi-files\\\\3.0\\\\builtinsoverride.py'\n",
        'first-line': 2989,
        'folded-linenos': [],
        'sel-line': 3002,
        'sel-line-start': 94386,
        'selection_end': 94394,
        'selection_start': 94386,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python311/Lib/argparse.py'): {'attrib-starts': [],
        'code-line': 'class ArgumentParser(_AttributeHolder, _ActionsContainer):\r\n',
        'first-line': 1694,
        'folded-linenos': [],
        'sel-line': 1707,
        'sel-line-start': 63102,
        'selection_end': 63122,
        'selection_start': 63108,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/numpy/lib/_datasource.py'): {'attrib-starts': [('DataSource|0|',
        196),
        ('DataSource|0|.open|0|',
         486)],
        'code-line': '            raise FileNotFoundError(f"{path} not found.")\r\n',
        'first-line': 512,
        'folded-linenos': [],
        'sel-line': 532,
        'sel-line-start': 17481,
        'selection_end': 17481,
        'selection_start': 17481,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/torch/nn/modules/loss.py'): {'attrib-starts': [],
        'code-line': 'class BCELoss(_WeightedLoss):\r\n',
        'first-line': 599,
        'folded-linenos': [],
        'sel-line': 538,
        'sel-line-start': 26446,
        'selection_end': 26459,
        'selection_start': 26452,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/_api/__init__.py'): {'attrib-starts': [('check_in_list|0|',
        98)],
        'code-line': '            raise ValueError(msg)\n',
        'first-line': 109,
        'folded-linenos': [],
        'sel-line': 128,
        'sel-line-start': 3871,
        'selection_end': 3871,
        'selection_start': 3871,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/axis.py'): {'attrib-starts': [('Axis|0|',
        595),
        ('Axis|0|.convert_units|0|',
         1757)],
        'code-line': "            raise munits.ConversionError('Failed to convert value(s) to axis '\n",
        'first-line': 1751,
        'folded-linenos': [],
        'sel-line': 1770,
        'sel-line-start': 63653,
        'selection_end': 63653,
        'selection_start': 63653,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/figure.py'): {'attrib-starts': [('FigureBase|0|',
        180),
        ('FigureBase|0|.add_subplot|0|',
         658)],
        'code-line': '            ax = projection_class(self, *args, **pkw)\n',
        'first-line': 770,
        'folded-linenos': [],
        'sel-line': 781,
        'sel-line-start': 28382,
        'selection_end': 28382,
        'selection_start': 28382,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/gridspec.py'): {'attrib-starts': [('SubplotSpec|0|',
        530),
        ('SubplotSpec|0|._from_subplot_args|0|',
         561)],
        'code-line': '                raise ValueError(\n',
        'first-line': 579,
        'folded-linenos': [],
        'sel-line': 598,
        'sel-line-start': 23344,
        'selection_end': 23344,
        'selection_start': 23344,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/numpy/__init__.py'): {'attrib-starts': [],
        'code-line': '"""\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/numpy/random/mtrand.pyi'): {'attrib-starts': [],
        'code-line': 'seed = _rand.seed\r\n',
        'first-line': 536,
        'folded-linenos': [],
        'sel-line': 548,
        'sel-line-start': 19665,
        'selection_end': 19669,
        'selection_start': 19665,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/scipy/stats/_distn_infrastructure.py'): {'attrib-starts': [('rv_generic|0|',
        625),
        ('rv_generic|0|.rvs|0|',
         1014)],
        'code-line': '            raise ValueError(message)\r\n',
        'first-line': 1035,
        'folded-linenos': [],
        'sel-line': 1054,
        'sel-line-start': 38165,
        'selection_end': 38165,
        'selection_start': 38165,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/imageio/core/request.py'): {'attrib-starts': [('Request|0|',
        61),
        ('Request|0|._parse_uri|0|',
         132)],
        'code-line': '                    raise FileNotFoundError("No such file: \'%s\'" % fn)\n',
        'first-line': 237,
        'folded-linenos': [],
        'sel-line': 259,
        'sel-line-start': 10363,
        'selection_end': 10363,
        'selection_start': 10363,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/figure.py'): {'attrib-starts': [('Figure|0|',
        219),
        ('Figure|0|.add_subplot|0|',
         1254)],
        'code-line': '            ax = subplot_class_factory(projection_class)(self, *args, **kwargs)\r\n',
        'first-line': 1390,
        'folded-linenos': [],
        'sel-line': 1401,
        'sel-line-start': 51564,
        'selection_end': 51564,
        'selection_start': 51564,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/gridspec.py'): {'attrib-starts': [('SubplotSpec|0|',
        601),
        ('SubplotSpec|0|._from_subplot_args|0|',
         644)],
        'code-line': '                    raise ValueError(\r\n',
        'first-line': 669,
        'folded-linenos': [],
        'sel-line': 688,
        'sel-line-start': 28686,
        'selection_end': 28686,
        'selection_start': 28686,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/pydicom/filereader.py'): {'attrib-starts': [('dcmread|0|',
        773)],
        'code-line': "        fp = open(fp, 'rb')\n",
        'first-line': 840,
        'folded-linenos': [],
        'sel-line': 860,
        'sel-line-start': 34810,
        'selection_end': 34810,
        'selection_start': 34810,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/argparse.py'): {'attrib-starts': [('_ActionsContainer|0|',
        1252),
        ('_ActionsContainer|0|._handle_conflict_error|0|',
         1540)],
        'code-line': '        raise ArgumentError(action, message % conflict_string)\r\n',
        'first-line': 1528,
        'folded-linenos': [],
        'sel-line': 1547,
        'sel-line-start': 57417,
        'selection_end': 57417,
        'selection_start': 57417,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/ntpath.py'): {'attrib-starts': [('join|0|',
        32)],
        'code-line': '    path = os.fspath(path)\r\n',
        'first-line': 58,
        'folded-linenos': [],
        'sel-line': 77,
        'sel-line-start': 2508,
        'selection_end': 2508,
        'selection_start': 2508,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/re.py'): {'attrib-starts': [('match|0|',
        316)],
        'code-line': '    return _compile(pattern, flags).match(string)\r\n',
        'first-line': 168,
        'folded-linenos': [],
        'sel-line': 190,
        'sel-line-start': 9006,
        'selection_end': 9006,
        'selection_start': 9006,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/PIL/Image.py'): {'attrib-starts': [('Image|0|',
        530),
        ('Image|0|.save|0|',
         2006)],
        'code-line': '            init()\n',
        'first-line': 2055,
        'folded-linenos': [],
        'sel-line': 2068,
        'sel-line-start': 68866,
        'selection_end': 68884,
        'selection_start': 68884,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/matplotlib/artist.py'): {'attrib-starts': [('Artist|0|',
        59),
        ('Artist|0|.update|0|',
         971)],
        'code-line': '                        raise AttributeError(f"{type(self).__name__!r} object "\r\n',
        'first-line': 976,
        'folded-linenos': [],
        'sel-line': 995,
        'sel-line-start': 33157,
        'selection_end': 33157,
        'selection_start': 33157,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/matplotlib/axes/_axes.py'): {'attrib-starts': [('Axes|0|',
        70),
        ('Axes|0|.scatter|0|',
         4316)],
        'code-line': '            raise ValueError("x and y must be the same size")\r\n',
        'first-line': 4421,
        'folded-linenos': [],
        'sel-line': 4440,
        'sel-line-start': 174408,
        'selection_end': 174408,
        'selection_start': 174408,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/matplotlib/cbook/__init__.py'): {'attrib-starts': [('_lock_path|0|',
        1778)],
        'code-line': '        raise TimeoutError("""\\\r\n',
        'first-line': 1785,
        'folded-linenos': [],
        'sel-line': 1804,
        'sel-line-start': 60330,
        'selection_end': 60330,
        'selection_start': 60330,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/matplotlib/colors.py'): {'attrib-starts': [('_to_rgba_no_colorcycle|0|',
        196)],
        'code-line': '            pass\r\n',
        'first-line': 234,
        'folded-linenos': [],
        'sel-line': 252,
        'sel-line-start': 9302,
        'selection_end': 9318,
        'selection_start': 9318,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/matplotlib/image.py'): {'attrib-starts': [('_ImageBase|0|',
        214),
        ('_ImageBase|0|.set_data|0|',
         683)],
        'code-line': '            raise TypeError("Invalid shape {} for image data"\r\n',
        'first-line': 686,
        'folded-linenos': [],
        'sel-line': 708,
        'sel-line-start': 29364,
        'selection_end': 29364,
        'selection_start': 29364,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/matplotlib/lines.py'): {'attrib-starts': [],
        'code-line': 'class Line2D(Artist):\r\n',
        'first-line': 199,
        'folded-linenos': [],
        'sel-line': 211,
        'sel-line-start': 8170,
        'selection_end': 8182,
        'selection_start': 8176,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/matplotlib/pyplot.py'): {'attrib-starts': [('savefig|0|',
        856)],
        'code-line': '    res = fig.savefig(*args, **kwargs)\r\n',
        'first-line': 1116,
        'folded-linenos': [],
        'sel-line': 858,
        'sel-line-start': 28486,
        'selection_end': 28486,
        'selection_start': 28486,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/numpy/core/_methods.py'): {'attrib-starts': [('_prod|0|',
        48)],
        'code-line': '    return umr_prod(a, axis, dtype, out, keepdims, initial, where)\r\n',
        'first-line': 31,
        'folded-linenos': [],
        'sel-line': 50,
        'sel-line-start': 1798,
        'selection_end': 1798,
        'selection_start': 1798,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/numpy/core/numeric.py'): {'attrib-starts': [],
        'code-line': 'def outer(a, b, out=None):\r\n',
        'first-line': 812,
        'folded-linenos': [],
        'sel-line': 824,
        'sel-line-start': 25545,
        'selection_end': 25554,
        'selection_start': 25549,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/numpy/lib/npyio.py'): {'attrib-starts': [('load|0|',
        283)],
        'code-line': '            fid = stack.enter_context(open(os_fspath(file), "rb"))\r\n',
        'first-line': 396,
        'folded-linenos': [],
        'sel-line': 415,
        'sel-line-start': 14553,
        'selection_end': 14553,
        'selection_start': 14553,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/numpy/ma/core.py'): {'attrib-starts': [('MaskedArray|0|',
        2707),
        ('MaskedArray|0|.__setitem__|0|',
         3339)],
        'code-line': '            _data[indx] = dval\r\n',
        'first-line': 3360,
        'folded-linenos': [],
        'sel-line': 3379,
        'sel-line-start': 111677,
        'selection_end': 111677,
        'selection_start': 111677,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/pandas/core/generic.py'): {'attrib-starts': [('NDFrame|0|',
        144),
        ('NDFrame|0|.__getattr__|0|',
         5445)],
        'code-line': '            return object.__getattribute__(self, name)\r\n',
        'first-line': 5435,
        'folded-linenos': [],
        'sel-line': 5461,
        'sel-line-start': 189827,
        'selection_end': 189827,
        'selection_start': 189827,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/pandas/io/parsers.py'): {'attrib-starts': [('read_csv|0|',
        540)],
        'code-line': 'def read_csv(\r\n',
        'first-line': 535,
        'folded-linenos': [],
        'sel-line': 540,
        'sel-line-start': 21959,
        'selection_end': 21971,
        'selection_start': 21963,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/scipy/integrate/quadpack.py'): {'attrib-starts': [],
        'code-line': 'def quad(func, a, b, args=(), full_output=0, epsabs=1.49e-8, epsrel=1.49e-8,\n',
        'first-line': 36,
        'folded-linenos': [],
        'sel-line': 48,
        'sel-line-start': 983,
        'selection_end': 991,
        'selection_start': 987,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/scipy/stats/_distn_infrastructure.py'): {'attrib-starts': [('rv_generic|0|',
        599),
        ('rv_generic|0|.rvs|0|',
         1000)],
        'code-line': '        args, loc, scale, size = self._parse_args_rvs(*args, **kwds)\n',
        'first-line': 1012,
        'folded-linenos': [],
        'sel-line': 1031,
        'sel-line-start': 36777,
        'selection_end': 36777,
        'selection_start': 36777,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/tensorflow/__init__.py'): {'attrib-starts': [],
        'code-line': '# Copyright 2015 The TensorFlow Authors. All Rights Reserved.\n',
        'first-line': 8,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/tensorflow/python/framework/func_graph.py'): {'attrib-starts': [('func_graph_from_py_func|0|',
        800),
        ('func_graph_from_py_func|0|.wrapper|0|',
         957)],
        'code-line': '              raise e.ag_error_metadata.to_exception(e)\n',
        'first-line': 960,
        'folded-linenos': [],
        'sel-line': 972,
        'sel-line-start': 41062,
        'selection_end': 41062,
        'selection_start': 41062,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/tensorflow/python/keras/engine/training.py'): {'attrib-starts': [('Model|0|',
        158),
        ('Model|0|.make_train_function|0|',
         761),
        ('Model|0|.make_train_function|0|.step_function|0|',
         784)],
        'code-line': '      outputs = model.distribute_strategy.run(run_step, args=(data,))\n',
        'first-line': 790,
        'folded-linenos': [],
        'sel-line': 795,
        'sel-line-start': 33531,
        'selection_end': 33531,
        'selection_start': 33531,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/tensorflow/python/keras/layers/advanced_activations.py'): {'attrib-starts': [('Softmax|0|',
        262)],
        'code-line': 'class Softmax(Layer):\n',
        'first-line': 250,
        'folded-linenos': [],
        'sel-line': 262,
        'sel-line-start': 7900,
        'selection_end': 7913,
        'selection_start': 7906,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/tensorflow/python/keras/layers/core.py'): {'attrib-starts': [('Dense|0|',
        1066)],
        'code-line': 'class Dense(Layer):\n',
        'first-line': 1119,
        'folded-linenos': [],
        'sel-line': 1066,
        'sel-line-start': 38981,
        'selection_end': 38992,
        'selection_start': 38987,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/autograd/__init__.py'): {'attrib-starts': [('_make_grads|0|',
        20)],
        'code-line': '                    raise RuntimeError("grad can be implicitly created only for scalar outputs")\r\n',
        'first-line': 12,
        'folded-linenos': [],
        'sel-line': 34,
        'sel-line-start': 1412,
        'selection_end': 1412,
        'selection_start': 1412,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/nn/functional.py'): {'attrib-starts': [('linear|0|',
        1590)],
        'code-line': '        output = input.matmul(weight.t())\r\n',
        'first-line': 1598,
        'folded-linenos': [],
        'sel-line': 1611,
        'sel-line-start': 68516,
        'selection_end': 68516,
        'selection_start': 68516,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/nn/modules/activation.py'): {'attrib-starts': [],
        'code-line': 'class Sigmoid(Module):\r\n',
        'first-line': 245,
        'folded-linenos': [],
        'sel-line': 248,
        'sel-line-start': 7598,
        'selection_end': 7611,
        'selection_start': 7604,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/nn/modules/conv.py'): {'attrib-starts': [('Conv2d|0|',
        204),
        ('Conv2d|0|.conv2d_forward|0|',
         333)],
        'code-line': '        return F.conv2d(input, weight, self.bias, self.stride,\r\n',
        'first-line': 318,
        'folded-linenos': [],
        'sel-line': 340,
        'sel-line-start': 15960,
        'selection_end': 15960,
        'selection_start': 15960,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/nn/modules/linear.py'): {'attrib-starts': [('Linear|0|',
        32),
        ('Linear|0|.__init__|0|',
         67)],
        'code-line': '        self.weight = Parameter(torch.Tensor(out_features, in_features))\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 71,
        'sel-line-start': 2425,
        'selection_end': 2425,
        'selection_start': 2425,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/nn/modules/module.py'): {'attrib-starts': [('Module|0|',
        31),
        ('Module|0|.__getattr__|0|',
         579)],
        'code-line': '        raise AttributeError("\'{}\' object has no attribute \'{}\'".format(\r\n',
        'first-line': 567,
        'folded-linenos': [],
        'sel-line': 592,
        'sel-line-start': 24265,
        'selection_end': 24265,
        'selection_start': 24265,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/utils/data/dataloader.py'): {'attrib-starts': [('DataLoader|0|',
        59),
        ('DataLoader|0|.__init__|0|',
         119)],
        'code-line': '        self.batch_size = batch_size\r\n',
        'first-line': 206,
        'folded-linenos': [],
        'sel-line': 220,
        'sel-line-start': 10912,
        'selection_end': 10935,
        'selection_start': 10925,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/utils/data/sampler.py'): {'attrib-starts': [('BatchSampler|0|',
        165),
        ('BatchSampler|0|.__init__|0|',
         181)],
        'code-line': '            raise ValueError("batch_size should be a positive integer value, "\r\n',
        'first-line': 163,
        'folded-linenos': [],
        'sel-line': 188,
        'sel-line-start': 7646,
        'selection_end': 7646,
        'selection_start': 7646,
        'zoom': 0},
                       loc('../AppData/Roaming/Python/Python38/site-packages/PIL/Image.py'): {'attrib-starts': [],
        'code-line': 'from . import (\n',
        'first-line': 39,
        'folded-linenos': [],
        'sel-line': 44,
        'sel-line-start': 1117,
        'selection_end': 1117,
        'selection_start': 1117,
        'zoom': 0},
                       loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/artist.py'): {'attrib-starts': [('Artist|0|',
        59),
        ('Artist|0|.update|0|',
         971)],
        'code-line': '                        raise AttributeError(f"{type(self).__name__!r} object "\n',
        'first-line': 976,
        'folded-linenos': [],
        'sel-line': 995,
        'sel-line-start': 32162,
        'selection_end': 32162,
        'selection_start': 32162,
        'zoom': 0},
                       loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_axes.py'): {'attrib-starts': [('Axes|0|',
        70),
        ('Axes|0|.scatter|0|',
         4316)],
        'code-line': '            raise ValueError("x and y must be the same size")\n',
        'first-line': 4421,
        'folded-linenos': [],
        'sel-line': 4440,
        'sel-line-start': 169968,
        'selection_end': 169968,
        'selection_start': 169968,
        'zoom': 0},
                       loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_base.py'): {'attrib-starts': [('_process_plot_var_args|0|',
        173),
        ('_process_plot_var_args|0|._plot_args|0|',
         366)],
        'code-line': '            raise ValueError(f"x and y must have same first dimension, but "\n',
        'first-line': 379,
        'folded-linenos': [],
        'sel-line': 398,
        'sel-line-start': 15101,
        'selection_end': 15101,
        'selection_start': 15101,
        'zoom': 0},
                       loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/backend_bases.py'): {'attrib-starts': [('_Backend|0|',
        3455),
        ('_Backend|0|.new_figure_manager|0|',
         3483)],
        'code-line': '        fig = fig_cls(*args, **kwargs)\n',
        'first-line': 3469,
        'folded-linenos': [],
        'sel-line': 3488,
        'sel-line-start': 124199,
        'selection_end': 124199,
        'selection_start': 124199,
        'zoom': 0},
                       loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/cbook/__init__.py'): {'attrib-starts': [('_check_in_list|0|',
        2235)],
        'code-line': '            raise ValueError(\n',
        'first-line': 2228,
        'folded-linenos': [],
        'sel-line': 2247,
        'sel-line-start': 73692,
        'selection_end': 73692,
        'selection_start': 73692,
        'zoom': 0},
                       loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/colorbar.py'): {'attrib-starts': [('Colorbar|0|',
        1185),
        ('Colorbar|0|.__init__|0|',
         1195)],
        'code-line': '        if mappable.get_array() is not None:\n',
        'first-line': 1179,
        'folded-linenos': [],
        'sel-line': 1198,
        'sel-line-start': 45334,
        'selection_end': 45334,
        'selection_start': 45334,
        'zoom': 0},
                       loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/figure.py'): {'attrib-starts': [('Figure|0|',
        219),
        ('Figure|0|.__init__|0|',
         249)],
        'code-line': '        self.bbox_inches = Bbox.from_bounds(0, 0, *figsize)\n',
        'first-line': 304,
        'folded-linenos': [],
        'sel-line': 323,
        'sel-line-start': 11230,
        'selection_end': 11230,
        'selection_start': 11230,
        'zoom': 0},
                       loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/pyplot.py'): {'attrib-starts': [('subplot|0|',
        973)],
        'code-line': '    ax = fig.add_subplot(*args, **kwargs)\n',
        'first-line': 1105,
        'folded-linenos': [],
        'sel-line': 1124,
        'sel-line-start': 36724,
        'selection_end': 36724,
        'selection_start': 36724,
        'zoom': 0},
                       loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/texmanager.py'): {'attrib-starts': [('TexManager|0|',
        46),
        ('TexManager|0|._run_checked_subprocess|0|',
         271)],
        'code-line': '            raise RuntimeError(\n',
        'first-line': 263,
        'folded-linenos': [],
        'sel-line': 282,
        'sel-line-start': 10102,
        'selection_end': 10102,
        'selection_start': 10102,
        'zoom': 0},
                       loc('../AppData/Roaming/Python/Python38/site-packages/mpl_toolkits/mplot3d/axes3d.py'): {'attrib-starts': [('Axes3D|0|',
        45),
        ('Axes3D|0|.plot_surface|0|',
         1480)],
        'code-line': '            raise ValueError("Argument Z must be 2-dimensional.")\n',
        'first-line': 1536,
        'folded-linenos': [],
        'sel-line': 1555,
        'sel-line-start': 53175,
        'selection_end': 53175,
        'selection_start': 53175,
        'zoom': 0},
                       loc('../AppData/Roaming/Python/Python38/site-packages/numpy/__init__.py'): {'attrib-starts': [('__getattr__|0|',
        205)],
        'code-line': '                raise AttributeError("module {!r} has no attribute "\r\n',
        'first-line': 194,
        'folded-linenos': [],
        'sel-line': 213,
        'sel-line-start': 7296,
        'selection_end': 7296,
        'selection_start': 7296,
        'zoom': 0},
                       loc('../AppData/Roaming/Python/Python38/site-packages/numpy/lib/stride_tricks.py'): {'attrib-starts': [('_broadcast_to|0|',
        113)],
        'code-line': '    it = np.nditer(\r\n',
        'first-line': 103,
        'folded-linenos': [],
        'sel-line': 122,
        'sel-line-start': 4416,
        'selection_end': 4416,
        'selection_start': 4416,
        'zoom': 0},
                       loc('../AppData/Roaming/Python/Python38/site-packages/pandas/core/generic.py'): {'attrib-starts': [('NDFrame|0|',
        150),
        ('NDFrame|0|.__getattr__|0|',
         5256)],
        'code-line': '            return object.__getattribute__(self, name)\r\n',
        'first-line': 5256,
        'folded-linenos': [],
        'sel-line': 5273,
        'sel-line-start': 181565,
        'selection_end': 181565,
        'selection_start': 181565,
        'zoom': 0},
                       loc('../AppData/Roaming/Python/Python38/site-packages/scipy/stats/_multivariate.py'): {'attrib-starts': [('multivariate_normal_frozen|0|',
        692),
        ('multivariate_normal_frozen|0|.pdf|0|',
         755)],
        'code-line': '        return np.exp(self.logpdf(x))\n',
        'first-line': 713,
        'folded-linenos': [],
        'sel-line': 756,
        'sel-line-start': 24908,
        'selection_end': 24908,
        'selection_start': 24908,
        'zoom': 0},
                       loc('../AppData/Roaming/Python/Python38/site-packages/tensorflow/python/eager/execute.py'): {'attrib-starts': [('quick_execute|0|',
        32)],
        'code-line': '    tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,\n',
        'first-line': 39,
        'folded-linenos': [],
        'sel-line': 58,
        'sel-line-start': 2206,
        'selection_end': 2206,
        'selection_start': 2206,
        'zoom': 0},
                       loc('../AppData/Roaming/Python/Python38/site-packages/tensorflow/python/framework/func_graph.py'): {'attrib-starts': [('func_graph_from_py_func|0|',
        795),
        ('func_graph_from_py_func|0|.wrapper|0|',
         952)],
        'code-line': '              raise e.ag_error_metadata.to_exception(e)\n',
        'first-line': 955,
        'folded-linenos': [],
        'sel-line': 967,
        'sel-line-start': 40694,
        'selection_end': 40694,
        'selection_start': 40694,
        'zoom': 0},
                       loc('../AppData/Roaming/Python/Python38/site-packages/tensorflow/python/framework/ops.py'): {'attrib-starts': [('_create_c_op|0|',
        1605)],
        'code-line': '    raise ValueError(str(e))\n',
        'first-line': 1648,
        'folded-linenos': [],
        'sel-line': 1656,
        'sel-line-start': 58117,
        'selection_end': 58117,
        'selection_start': 58117,
        'zoom': 0},
                       loc('../AppData/Roaming/Python/Python38/site-packages/tensorflow/python/keras/engine/input_spec.py'): {'attrib-starts': [('assert_input_compatibility|0|',
        131)],
        'code-line': "        raise ValueError('Input ' + str(input_index) + ' of layer ' +\n",
        'first-line': 156,
        'folded-linenos': [],
        'sel-line': 175,
        'sel-line-start': 6420,
        'selection_end': 6420,
        'selection_start': 6420,
        'zoom': 0},
                       loc('../AppData/Roaming/Python/Python38/site-packages/tensorflow/python/keras/engine/network.py'): {'attrib-starts': [('_is_hdf5_filepath|0|',
        1614)],
        'code-line': "  return (filepath.endswith('.h5') or filepath.endswith('.keras') or\n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 1615,
        'sel-line-start': 66668,
        'selection_end': 66668,
        'selection_start': 66668,
        'zoom': 0},
                       loc('../AppData/Roaming/Python/Python38/site-packages/tensorflow/python/keras/engine/training.py'): {'attrib-starts': [('Model|0|',
        94),
        ('Model|0|._assert_compile_was_called|0|',
         1628)],
        'code-line': "      raise RuntimeError('You must compile your model before '\n",
        'first-line': 1615,
        'folded-linenos': [],
        'sel-line': 1634,
        'sel-line-start': 72286,
        'selection_end': 72286,
        'selection_start': 72286,
        'zoom': 0},
                       loc('../AppData/Roaming/Python/Python38/site-packages/tensorflow/python/keras/layers/core.py'): {'attrib-starts': [('Dense|0|',
        1051),
        ('Dense|0|.build|0|',
         1146)],
        'code-line': "      raise ValueError('The last dimension of the inputs to `Dense` '\n",
        'first-line': 1134,
        'folded-linenos': [],
        'sel-line': 1153,
        'sel-line-start': 42682,
        'selection_end': 42682,
        'selection_start': 42682,
        'zoom': 0},
                       loc('../AppData/Roaming/Python/Python38/site-packages/tensorflow/python/ops/array_ops.py'): {'attrib-starts': [('placeholder|0|',
        2984)],
        'code-line': '    raise RuntimeError("tf.placeholder() is not compatible with "\n',
        'first-line': 3003,
        'folded-linenos': [],
        'sel-line': 3022,
        'sel-line-start': 104897,
        'selection_end': 104897,
        'selection_start': 104897,
        'zoom': 0},
                       loc('../AppData/Roaming/Python/Python38/site-packages/tensorflow/python/ops/nn_ops.py'): {'attrib-starts': [('Convolution|0|',
        1003),
        ('Convolution|0|.__init__|0|',
         1020)],
        'code-line': '      raise ValueError(\n',
        'first-line': 1021,
        'folded-linenos': [],
        'sel-line': 1040,
        'sel-line-start': 38844,
        'selection_end': 38844,
        'selection_start': 38844,
        'zoom': 0},
                       loc('../anaconda3/Lib/_collections_abc.py'): {'attrib-starts': [('ItemsView|0|',
        724),
        ('ItemsView|0|.__contains__|0|',
         732)],
        'code-line': '        key, value = item\n',
        'first-line': 713,
        'folded-linenos': [],
        'sel-line': 733,
        'sel-line-start': 18978,
        'selection_end': 18978,
        'selection_start': 18978,
        'zoom': 0},
                       loc('../anaconda3/Lib/imp.py'): {'attrib-starts': [('load_dynamic|0|',
        329)],
        'code-line': '        return _load(spec)\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 341,
        'sel-line-start': 10478,
        'selection_end': 10478,
        'selection_start': 10478,
        'zoom': 0},
                       loc('../anaconda3/Lib/importlib/_bootstrap.py'): {'attrib-starts': [('_call_with_frames_removed|0|',
        210)],
        'code-line': '    return f(*args, **kwds)\n',
        'first-line': 213,
        'folded-linenos': [],
        'sel-line': 218,
        'sel-line-start': 6758,
        'selection_end': 6758,
        'selection_start': 6758,
        'zoom': 0},
                       loc('../anaconda3/Lib/ntpath.py'): {'attrib-starts': [('join|0|',
        32)],
        'code-line': '    path = os.fspath(path)\n',
        'first-line': 56,
        'folded-linenos': [],
        'sel-line': 75,
        'sel-line-start': 2399,
        'selection_end': 2399,
        'selection_start': 2399,
        'zoom': 0},
                       loc('../anaconda3/Lib/site-packages/keras/__init__.py'): {'attrib-starts': [],
        'code-line': "        'Keras requires TensorFlow 2.2 or higher. '\r\n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 5,
        'sel-line-start': 136,
        'selection_end': 136,
        'selection_start': 136,
        'zoom': 0},
                       loc('../anaconda3/Lib/site-packages/matplotlib/artist.py'): {'attrib-starts': [('Artist|0|',
        56),
        ('Artist|0|.update|0|',
         941),
        ('Artist|0|.update|0|._update_property|0|',
         945)],
        'code-line': '                                         .format(type(self).__name__, k))\n',
        'first-line': 950,
        'folded-linenos': [],
        'sel-line': 969,
        'sel-line-start': 30826,
        'selection_end': 30826,
        'selection_start': 30826,
        'zoom': 0},
                       loc('../anaconda3/Lib/site-packages/matplotlib/axes/_base.py'): {'attrib-starts': [('_process_plot_var_args|0|',
        117),
        ('_process_plot_var_args|0|._xy_from_xy|0|',
         240)],
        'code-line': '                             "have shapes {} and {}".format(x.shape, y.shape))\n',
        'first-line': 250,
        'folded-linenos': [],
        'sel-line': 269,
        'sel-line-start': 10054,
        'selection_end': 10054,
        'selection_start': 10054,
        'zoom': 0},
                       loc('../anaconda3/Lib/site-packages/matplotlib/markers.py'): {'attrib-starts': [('MarkerStyle|0|',
        164),
        ('MarkerStyle|0|.set_marker|0|',
         291)],
        'code-line': '                                 .format(marker))\n',
        'first-line': 293,
        'folded-linenos': [],
        'sel-line': 312,
        'sel-line-start': 11685,
        'selection_end': 11685,
        'selection_start': 11685,
        'zoom': 0},
                       loc('../anaconda3/Lib/site-packages/matplotlib/texmanager.py'): {'attrib-starts': [('TexManager|0|',
        48),
        ('TexManager|0|._run_checked_subprocess|0|',
         298)],
        'code-line': "                    exc=exc.output.decode('utf-8'))) from exc\n",
        'first-line': 297,
        'folded-linenos': [],
        'sel-line': 316,
        'sel-line-start': 11535,
        'selection_end': 11535,
        'selection_start': 11535,
        'zoom': 0},
                       loc('../anaconda3/Lib/site-packages/matplotlib/text.py'): {'attrib-starts': [('Text|0|',
        111),
        ('Text|0|.get_prop_tup|0|',
         822)],
        'code-line': '                self.figure.dpi, weakref.ref(renderer),\n',
        'first-line': 817,
        'folded-linenos': [],
        'sel-line': 836,
        'sel-line-start': 27873,
        'selection_end': 27873,
        'selection_start': 27873,
        'zoom': 0},
                       loc('../anaconda3/Lib/site-packages/numpy/core/__init__.py'): {'attrib-starts': [],
        'code-line': '    raise ImportError(msg)\n',
        'first-line': 34,
        'folded-linenos': [],
        'sel-line': 53,
        'sel-line-start': 1850,
        'selection_end': 1850,
        'selection_start': 1850,
        'zoom': 0},
                       loc('../anaconda3/Lib/site-packages/numpy/core/_methods.py'): {'attrib-starts': [('_mean|0|',
        133)],
        'code-line': '    rcount = _count_reduce_items(arr, axis)\n',
        'first-line': 120,
        'folded-linenos': [],
        'sel-line': 137,
        'sel-line-start': 4881,
        'selection_end': 4881,
        'selection_start': 4881,
        'zoom': 0},
                       loc('../anaconda3/Lib/site-packages/pandas/core/generic.py'): {'attrib-starts': [('NDFrame|0|',
        150),
        ('NDFrame|0|.__nonzero__|0|',
         1476)],
        'code-line': '            f"The truth value of a {type(self).__name__} is ambiguous. "\n',
        'first-line': 1459,
        'folded-linenos': [],
        'sel-line': 1478,
        'sel-line-start': 45010,
        'selection_end': 45010,
        'selection_start': 45010,
        'zoom': 0},
                       loc('../anaconda3/Lib/site-packages/pandas/core/ops/array_ops.py'): {'attrib-starts': [('na_logical_op|0|',
        263)],
        'code-line': '                    f"Cannot perform \'{op.__name__}\' with a dtyped [{x.dtype}] array "\n',
        'first-line': 278,
        'folded-linenos': [],
        'sel-line': 297,
        'sel-line-start': 9144,
        'selection_end': 9144,
        'selection_start': 9144,
        'zoom': 0},
                       loc('../anaconda3/Lib/unittest/case.py'): {'attrib-starts': [('TestCase|0|',
        350),
        ('TestCase|0|.assertAlmostEqual|0|',
         862)],
        'code-line': '        raise self.failureException(msg)\n',
        'first-line': 886,
        'folded-linenos': [],
        'sel-line': 905,
        'sel-line-start': 34102,
        'selection_end': 34102,
        'selection_start': 34102,
        'zoom': 0},
                       loc('../bioinformatics/BA8E.py'): {'attrib-starts': [],
        'first-line': 16,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 684,
        'selection_start': 0,
        'zoom': 0},
                       loc('../complexity/computations/rsat.py'): {'attrib-starts': [],
        'code-line': '    plt.rcParams.update({\r\n',
        'first-line': 156,
        'folded-linenos': [],
        'sel-line': 139,
        'sel-line-start': 4806,
        'selection_end': 4869,
        'selection_start': 4806,
        'zoom': 0},
                       loc('../complexity/origins/evolve_allometric_scaling.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('../dynamics/chaos_book/projects/return.py'): {'attrib-starts': [],
        'code-line': '#!/usr/bin/env python\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 21,
        'selection_start': 0,
        'zoom': 0},
                       loc('../nlp/word2vec.py'): {'attrib-starts': [('Word2Vec|0|',
        43)],
        'code-line': '    def calculate_loss(self,word_index,target):\r\n',
        'first-line': 60,
        'folded-linenos': [],
        'sel-line': 69,
        'sel-line-start': 2771,
        'selection_end': 2793,
        'selection_start': 2779,
        'zoom': 0},
                       loc('../viz/README.md'): {'attrib-starts': [],
        'code-line': '# viz\r\n',
        'first-line': 66,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('ExploreExploit.py'): {'attrib-starts': [],
        'code-line': '#!/usr/bin/env python\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('README.md'): {'attrib-starts': [],
        'code-line': 'cavi.py|The Coordinate Ascent Mean-Field Variational Inference (CAVI) example from Section 3 of Blei et al\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 53,
        'sel-line-start': 2818,
        'selection_end': 2822,
        'selection_start': 2822,
        'zoom': 0},
                       loc('T.py'): {'attrib-starts': [],
                                     'code-line': 'ns = [2**i for i in range(10)]\r\n',
                                     'first-line': 0,
                                     'folded-linenos': [],
                                     'sel-line': 2,
                                     'sel-line-start': 35,
                                     'selection_end': 63,
                                     'selection_start': 63,
                                     'zoom': 0},
                       loc('UGMM.py'): {'attrib-starts': [],
        'code-line': '#!/usr/bin/env python\r\n',
        'first-line': 3,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 21,
        'selection_start': 21,
        'zoom': 0},
                       loc('ae.py'): {'attrib-starts': [],
                                      'code-line': '',
                                      'first-line': 0,
                                      'folded-linenos': [],
                                      'sel-line': 0,
                                      'sel-line-start': 0,
                                      'selection_end': 0,
                                      'selection_start': 0,
                                      'zoom': 0},
                       loc('backprop.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('bayes1.py'): {'attrib-starts': [],
        'code-line': '\r\n',
        'first-line': 15,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('c1.py'): {'attrib-starts': [],
                                      'code-line': 'print ("number of training examples = " + str(X_train.shape[0]))\r\n',
                                      'first-line': 41,
                                      'folded-linenos': [],
                                      'sel-line': 23,
                                      'sel-line-start': 637,
                                      'selection_end': 699,
                                      'selection_start': 683,
                                      'zoom': 0},
                       loc('catdog1.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('cavi.py'): {'attrib-starts': [],
        'code-line': 'from numpy.random import default_rng\r\n',
        'first-line': 15,
        'folded-linenos': [],
        'sel-line': 28,
        'sel-line-start': 1196,
        'selection_end': 1234,
        'selection_start': 1196,
        'zoom': 0},
                       loc('cavi1.py'): {'attrib-starts': [('cavi|0|',
        40),
        ('cavi|0|.calcELBO|0|',
         45)],
        'code-line': '        log_q_mu = -(0.5 / sigma) *(1/(len(xs)+1)) * (mu - mu_n) **2\r\n',
        'first-line': 55,
        'folded-linenos': [],
        'sel-line': 50,
        'sel-line-start': 2295,
        'selection_end': 2312,
        'selection_start': 2312,
        'zoom': 0},
                       loc('cavi3.py'): {'attrib-starts': [('plot_data|0|',
        119)],
        'code-line': '        ys = y_values.pdf(x_values)\r\n',
        'first-line': 178,
        'folded-linenos': [],
        'sel-line': 150,
        'sel-line-start': 5526,
        'selection_end': 5537,
        'selection_start': 5537,
        'zoom': 0},
                       loc('chi-sq.py'): {'attrib-starts': [],
        'code-line': 'print (stats.chisquare([16, 16, 16, 16, 12, 12], f_exp=[16, 16, 16, 16, 16, 8]))',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 31,
        'selection_end': 69,
        'selection_start': 69,
        'zoom': 0},
                       loc('cnn_utils.py'): {'attrib-starts': [],
        'code-line': '# snarfed from https://github.com/JudasDie/deeplearning.ai/blob/master/Convolutional%20Neural%20Networks/week1/cnn_utils.py\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 123,
        'selection_start': 123,
        'zoom': 0},
                       loc('data-loading.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('demo1.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('dicom.py'): {'attrib-starts': [('get_meta_info|0|',
        98)],
        'code-line': 'def get_meta_info(dicom):\r\n',
        'first-line': 85,
        'folded-linenos': [],
        'sel-line': 98,
        'sel-line-start': 2190,
        'selection_end': 2207,
        'selection_start': 2194,
        'zoom': 0},
                       loc('em.py'): {'attrib-starts': [('maximize_likelihood|0|',
        39)],
                                      'code-line': '    while len(likelihoods)<N and not has_converged():\r\n',
                                      'first-line': 0,
                                      'folded-linenos': [],
                                      'sel-line': 86,
                                      'sel-line-start': 4165,
                                      'selection_end': 4218,
                                      'selection_start': 4169,
                                      'zoom': 0},
                       loc('em2.py'): {'attrib-starts': [],
                                       'code-line': '\r\n',
                                       'first-line': 24,
                                       'folded-linenos': [],
                                       'sel-line': 19,
                                       'sel-line-start': 845,
                                       'selection_end': 845,
                                       'selection_start': 845,
                                       'zoom': 0},
                       loc('emm.py'): {'attrib-starts': [],
                                       'code-line': '',
                                       'first-line': 0,
                                       'folded-linenos': [],
                                       'sel-line': 0,
                                       'sel-line-start': 0,
                                       'selection_end': 0,
                                       'selection_start': 0,
                                       'zoom': 0},
                       loc('exercises.py'): {'attrib-starts': [],
        'code-line': '#!/usr/bin/env python\r\n',
        'first-line': 50,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('fashion.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('fcs.py'): {'attrib-starts': [],
                                       'code-line': '',
                                       'first-line': 0,
                                       'folded-linenos': [],
                                       'sel-line': 0,
                                       'sel-line-start': 0,
                                       'selection_end': 0,
                                       'selection_start': 0,
                                       'zoom': 0},
                       loc('fcs/README.md'): {'attrib-starts': [],
        'code-line': '| sizes.py | Group data into size clusters|fcs em|\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 13,
        'sel-line-start': 728,
        'selection_end': 777,
        'selection_start': 777,
        'zoom': 0},
                       loc('fcs/em.py'): {'attrib-starts': [('maximize_likelihood|0|',
        54),
        ('maximize_likelihood|0|.e_step|0|',
         79)],
        'code-line': '        var = [multivariate_normal(mean=mus[k], cov=Sigmas[k]) for k in range(K)]\r\n',
        'first-line': 69,
        'folded-linenos': [],
        'sel-line': 80,
        'sel-line-start': 2872,
        'selection_end': 2906,
        'selection_start': 2887,
        'zoom': 0},
                       loc('fcs/fcs.py'): {'attrib-starts': [],
        'code-line': '# Copyright (C) 2020 Greenweaves Software Limited\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 684,
        'selection_start': 0,
        'zoom': 0},
                       loc('fcs/gcps.py'): {'attrib-starts': [],
        'code-line': "    rc('text', usetex=True)\r\n",
        'first-line': 117,
        'folded-linenos': [],
        'sel-line': 131,
        'sel-line-start': 4648,
        'selection_end': 4675,
        'selection_start': 4652,
        'zoom': 0},
                       loc('fcs/partition.py'): {'attrib-starts': [],
        'code-line': "                            script = os.path.basename(__file__).split('.')[0],\r\n",
        'first-line': 136,
        'folded-linenos': [],
        'sel-line': 219,
        'sel-line-start': 8907,
        'selection_end': 8984,
        'selection_start': 8935,
        'zoom': 0},
                       loc('fcs/rsq.py'): {'attrib-starts': [],
        'code-line': '        ',
        'first-line': 14,
        'folded-linenos': [],
        'sel-line': 36,
        'sel-line-start': 1311,
        'selection_end': 1319,
        'selection_start': 1319,
        'zoom': 0},
                       loc('fcs/sizes.py'): {'attrib-starts': [],
        'code-line': 'import sys\r\n',
        'first-line': 12,
        'folded-linenos': [],
        'sel-line': 22,
        'sel-line-start': 892,
        'selection_end': 902,
        'selection_start': 902,
        'zoom': 0},
                       loc('fcs/temp.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('feex1.py'): {'attrib-starts': [],
        'code-line': 'ax.legend()\r\n',
        'first-line': 45,
        'folded-linenos': [],
        'sel-line': 63,
        'sel-line-start': 2057,
        'selection_end': 2068,
        'selection_start': 2068,
        'zoom': 0},
                       loc('feex2.py'): {'attrib-starts': [],
        'code-line': "'''\r\n",
        'first-line': 12,
        'folded-linenos': [],
        'sel-line': 22,
        'sel-line-start': 917,
        'selection_end': 920,
        'selection_start': 920,
        'zoom': 0},
                       loc('feex3.py'): {'attrib-starts': [],
        'code-line': "'''\r\n",
        'first-line': 71,
        'folded-linenos': [],
        'sel-line': 17,
        'sel-line-start': 718,
        'selection_end': 870,
        'selection_start': 718,
        'zoom': 0},
                       loc('flowers.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('fscWidths.py'): {'attrib-starts': [],
        'code-line': '\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 1,
        'sel-line-start': 23,
        'selection_end': 23,
        'selection_start': 23,
        'zoom': 0},
                       loc('getdata.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('gibbs.py'): {'attrib-starts': [('parse_args|0|',
        125)],
        'code-line': "    parser.add_argument('--figs', default='./figs', help='Folder to store plots')\r\n",
        'first-line': 124,
        'folded-linenos': [],
        'sel-line': 135,
        'sel-line-start': 4974,
        'selection_end': 5055,
        'selection_start': 4978,
        'zoom': 0},
                       loc('gmm.py'): {'attrib-starts': [],
                                       'code-line': 'def get_name(args):\r\n',
                                       'first-line': 46,
                                       'folded-linenos': [],
                                       'sel-line': 58,
                                       'sel-line-start': 2178,
                                       'selection_end': 2190,
                                       'selection_start': 2182,
                                       'zoom': 0},
                       loc('k2.py'): {'attrib-starts': [],
                                      'code-line': "model.add(Conv2D(48, (3, 3), activation='relu'))\r\n",
                                      'first-line': 0,
                                      'folded-linenos': [],
                                      'sel-line': 7,
                                      'sel-line-start': 291,
                                      'selection_end': 339,
                                      'selection_start': 291,
                                      'zoom': 0},
                       loc('k3.py'): {'attrib-starts': [],
                                      'code-line': '\r\n',
                                      'first-line': 24,
                                      'folded-linenos': [],
                                      'sel-line': 1,
                                      'sel-line-start': 46,
                                      'selection_end': 46,
                                      'selection_start': 46,
                                      'zoom': 0},
                       loc('k4.py'): {'attrib-starts': [],
                                      'code-line': "model.add(Dense(1024, activation='relu'))\r\n",
                                      'first-line': 71,
                                      'folded-linenos': [],
                                      'sel-line': 77,
                                      'sel-line-start': 2684,
                                      'selection_end': 2703,
                                      'selection_start': 2703,
                                      'zoom': 0},
                       loc('keras-demo.py'): {'attrib-starts': [],
        'code-line': "model.compile(loss='categorical_crossentropy',\r\n",
        'first-line': 7,
        'folded-linenos': [],
        'sel-line': 39,
        'sel-line-start': 1262,
        'selection_end': 1308,
        'selection_start': 1281,
        'zoom': 0},
                       loc('logo.py'): {'attrib-starts': [],
        'code-line': 'plt.show()\r\n',
        'first-line': 11,
        'folded-linenos': [],
        'sel-line': 26,
        'sel-line-start': 850,
        'selection_end': 853,
        'selection_start': 853,
        'zoom': 0},
                       loc('metropolis-hastings.py'): {'attrib-starts': [],
        'code-line': "print (f'Compare with numpy.cov function: {numpy.cov(data.T)}')\r\n",
        'first-line': 55,
        'folded-linenos': [],
        'sel-line': 64,
        'sel-line-start': 2004,
        'selection_end': 2065,
        'selection_start': 2065,
        'zoom': 0},
                       loc('mhast.py'): {'attrib-starts': [('sample|0|',
        51)],
        'code-line': '        width     Used to generate candidate vakues of rho\r\n',
        'first-line': 50,
        'folded-linenos': [],
        'sel-line': 65,
        'sel-line-start': 2542,
        'selection_end': 2600,
        'selection_start': 2600,
        'zoom': 0},
                       loc('mnist-test.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('mnist_test.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 9,
        'sel-line-start': 181,
        'selection_end': 217,
        'selection_start': 217,
        'zoom': 0},
                       loc('motifs.py'): {'attrib-starts': [],
        'code-line': '\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 1,
        'sel-line-start': 23,
        'selection_end': 23,
        'selection_start': 23,
        'zoom': 0},
                       loc('mri3d.py'): {'attrib-starts': [('plot_orbit|0|',
        108)],
        'code-line': '\r\n',
        'first-line': 128,
        'folded-linenos': [],
        'sel-line': 128,
        'sel-line-start': 4725,
        'selection_end': 4725,
        'selection_start': 4725,
        'zoom': 0},
                       loc('naive.py'): {'attrib-starts': [],
        'code-line': '\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 1,
        'sel-line-start': 23,
        'selection_end': 23,
        'selection_start': 23,
        'zoom': 0},
                       loc('nonconjugate.py'): {'attrib-starts': [],
        'code-line': 'import matplotlib.pyplot as plt\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 256,
        'selection_start': 0,
        'zoom': 0},
                       loc('restoreLeNet.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('test.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('tf1.py'): {'attrib-starts': [],
                                       'code-line': '',
                                       'first-line': 0,
                                       'folded-linenos': [],
                                       'sel-line': 0,
                                       'sel-line-start': 0,
                                       'selection_end': 0,
                                       'selection_start': 0,
                                       'zoom': 0},
                       loc('tf2.py'): {'attrib-starts': [],
                                       'code-line': "plt.title (f'Loss={test_loss:.4f}, Accuracy={test_acc:.4f}')\r\n",
                                       'first-line': 61,
                                       'folded-linenos': [],
                                       'sel-line': 63,
                                       'sel-line-start': 2573,
                                       'selection_end': 2608,
                                       'selection_start': 2608,
                                       'zoom': 0},
                       loc('torch-nn.py'): {'attrib-starts': [],
        'code-line': '                                                         (0.5, 0.5, 0.5))])\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 190,
        'sel-line-start': 7131,
        'selection_end': 7147,
        'selection_start': 7147,
        'zoom': 0},
                       loc('torch-nn1.py'): {'attrib-starts': [],
        'code-line': '\r\n',
        'first-line': 87,
        'folded-linenos': [],
        'sel-line': 54,
        'sel-line-start': 1877,
        'selection_end': 1877,
        'selection_start': 1877,
        'zoom': 0},
                       loc('torch1.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 7,
        'folded-linenos': [],
        'sel-line': 12,
        'sel-line-start': 347,
        'selection_end': 347,
        'selection_start': 347,
        'zoom': 0},
                       loc('torch2.py'): {'attrib-starts': [],
        'code-line': 'print(out)\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 45,
        'sel-line-start': 1351,
        'selection_end': 1361,
        'selection_start': 1351,
        'zoom': 0},
                       loc('torch3.py'): {'attrib-starts': [],
        'code-line': 'print(-2*b == b.grad)\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 17,
        'sel-line-start': 550,
        'selection_end': 571,
        'selection_start': 571,
        'zoom': 0},
                       loc('train.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('untitled-1.py'): {'attrib-starts': [],
        'code-line': 'ax = gca()\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 8,
        'sel-line-start': 474,
        'selection_end': 568,
        'selection_start': 474,
        'zoom': 0},
                       loc('untitled-2.py'): {'attrib-starts': [],
        'code-line': "#ax.axis('off')\r\n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 21,
        'sel-line-start': 604,
        'selection_end': 605,
        'selection_start': 605,
        'zoom': 0},
                       loc('versions.py'): {'attrib-starts': [],
        'code-line': 'import keras\r\n',
        'first-line': 2,
        'folded-linenos': [],
        'sel-line': 18,
        'sel-line-start': 378,
        'selection_end': 430,
        'selection_start': 378,
        'zoom': 0}}
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('default',
                        [''])}
search.replace-history = ['np.asarray',
                          'np.array',
                          'np.argsort',
                          'np.arange',
                          'np.add',
                          'np.exp',
                          'np.log',
                          'parser',
                          'root',
                          'model',
                          'get_distance',
                          'gcp_distances',
                          'get_gcp_distance',
                          'sums',
                          'heights',
                          'fcs.get_image_name',
                          'Ks',
                          'np']
search.search-history = ['asarray',
                         'array',
                         'argsort',
                         'arange',
                         'add',
                         'exp',
                         'log',
                         'argparser',
                         'F',
                         'os',
                         'nnh',
                         'torc',
                         'sqrt',
                         'rgb',
                         'import',
                         'em',
                         'e',
                         'xkcd',
                         'xkckd',
                         'x']
