#!wing
#!version=7.0
##################################################################
# Wing project file                                              #
##################################################################
[project attributes]
proj.file-type = 'normal'
proj.launch-config = {loc('json-test.py'): ('project',
        (u'--start 4 --end 4',
         ''))}
[user attributes]
debug.recent-run-args = {loc('json-test.py'): [u'--start 4 --end 4']}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'zRuoo7lo1K5bGtfhUhOsW4cZwV'\
        '1Zxhqw',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.25,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [],
                                 'top-node': ()}},
        'tree-style': 'deep'}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('../astro/make_img.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../astro/make_img.py'),
                             'plot')]],
        'top-node': [('generic attribute',
                      loc('../astro/make_img.py'),
                      'config_path')]},
        loc('../astro/plot_points.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../astro/plot_points.py'),
                             'y3s')]],
        'top-node': [('generic attribute',
                      loc('../astro/plot_points.py'),
                      'i')]},
        loc('../bioinformatics/DBRU.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../bioinformatics/DBRU.py'),
                      'a')]},
        loc('../bioinformatics/GREP.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../bioinformatics/GREP.py'),
                      'count_kmers')]},
        loc('../bioinformatics/PCOV.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../bioinformatics/PCOV.py'),
                      'pcov')]},
        loc('../bioinformatics/rosalind.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../bioinformatics/rosalind.py'),
                      'dbru')]},
        loc('../dynamics/bacteria.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../dynamics/bacteria.py'),
                      'bacteria')]},
        loc('../dynamics/barnes_hut.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../dynamics/barnes_hut.py'),
                             'add')]],
        'top-node': [('function def',
                      loc('../dynamics/barnes_hut.py'),
                      'add')]},
        loc('../dynamics/chaos_book/hw1Rossler/README.md'): {'expanded-nodes': [],
        'selected-nodes': [None],
        'top-node': None},
        loc('../dynamics/chaos_book/hw1Rossler/RungeKutta.py'): {'expanded-n'\
        'odes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../dynamics/chaos_book/hw1Rossler/RungeKutta.py'),
                             'xSolution')]],
        'top-node': [('generic attribute',
                      loc('../dynamics/chaos_book/hw1Rossler/RungeKutta.py'),
                      'Nt')]},
        loc('../dynamics/lbmFlowAroundCylinder.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../dynamics/lbmFlowAroundCylinder.py'),
                      'col1')]},
        loc('../dynamics/lv.py'): {'expanded-nodes': [],
                                   'selected-nodes': [],
                                   'top-node': None},
        loc('../dynamics/parityRule.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../dynamics/parityRule.py'),
                      'i')]},
        loc('../dynamics/strogatz/README.md'): {'expanded-nodes': [],
        'selected-nodes': [None],
        'top-node': None},
        loc('../dynamics/strogatz/strogatz_6_1.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../dynamics/strogatz/strogatz_6_1.py'),
                             '_')]],
        'top-node': [('generic attribute',
                      loc('../dynamics/strogatz/strogatz_6_1.py'),
                      'eps')]},
        loc('../dynamics/strogatz_6_1.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../dynamics/strogatz_6_1.py'),
                      'eps')]},
        loc('../dynamics/strogatz_6_5_19.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../dynamics/trafficLights.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../dynamics/trafficLights.py'),
                      'CAR')]}},
                                'browse_mode': u'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {u'Derived Classes': False,
        u'Imported': False,
        u'Modules': True}}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [0,
                          1],
        'notebook_display': 'normal',
        'notebook_percent': 0.30000000000000004,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': '',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': u'plot_files',
                                       'fReverse': False,
                                       'fSearchText': u'process',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': True}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 0L,
                       'folded-linenos': [],
                       'history': {},
                       'launch-id': None,
                       'sel-line': 2L,
                       'sel-line-start': 145L,
                       'selection_end': 145L,
                       'selection_start': 145L,
                       'zoom': 0L}),
                     ('messages',
                      'wide',
                      2,
                      {}),
                     ('os-command',
                      'wide',
                      1,
                      {})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('../../../Program Files (x86)/Wing Personal 7.1/doc/TOC'),
        {'displayed-index': 0,
         'viewer-state': {'history': [-1,
                                      0],
                          'history-pos': 1,
                          'index': 0,
                          'top': 0,
                          'top-left-pos': 1}},
        1569983586.502],
        [loc('../ml/foo.py'),
         {'attrib-starts': [],
          'code-line': 'import tensorflow as tf\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 0L,
          'sel-line-start': 0L,
          'selection_end': 0L,
          'selection_start': 0L,
          'zoom': 0L},
         1573090158.52],
        [loc('../../../Program Files (x86)/Wing Personal 7.2/doc/TOC'),
         {'displayed-index': -1,
          'viewer-state': {'history': [-1,
                                       0],
                           'history-pos': 0,
                           'index': -1,
                           'top': 0,
                           'top-left-pos': 0}},
         1584764106.099],
        [loc('../../../Program Files (x86)/Wing Personal 7.2/doc/TOC'),
         {'displayed-index': 0,
          'viewer-state': {'history': [-1,
                                       0],
                           'history-pos': 1,
                           'index': 0,
                           'top': 0,
                           'top-left-pos': 0}},
         1584764245.667],
        [loc('json-test.py'),
         {'attrib-starts': [],
          'code-line': '',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 2L,
          'sel-line-start': 15L,
          'selection_end': 15L,
          'selection_start': 15L,
          'zoom': 0L},
         1584764280.003],
        [loc('json-test.py'),
         {'attrib-starts': [('read_json|0|',
                             2)],
          'code-line': '    print (files)\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 3L,
          'sel-line-start': 38L,
          'selection_end': 55L,
          'selection_start': 55L,
          'zoom': 0L},
         1584764635.69],
        [loc('../Anaconda3/Lib/argparse.py'),
         {'attrib-starts': [('_ActionsContainer|0|',
                             1238),
                            ('_ActionsContainer|0|.add_argument|0|',
                             1321)],
          'code-line': '                raise ValueError("length of metavar '\
                       'tuple does not match nargs")\n',
          'first-line': 1344L,
          'folded-linenos': [],
          'sel-line': 1364L,
          'sel-line-start': 48095L,
          'selection_end': 48095L,
          'selection_start': 48095L,
          'zoom': 0L},
         1584764649.246],
        [loc('json-test.py'),
         {'attrib-starts': [('read_json|0|',
                             3)],
          'code-line': '        print (dirname, filename, filenames)\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 5L,
          'sel-line-start': 114L,
          'selection_end': 114L,
          'selection_start': 114L,
          'zoom': 0L},
         1584765238.521],
        [loc('../Anaconda3/Lib/genericpath.py'),
         {'attrib-starts': [('_check_arg_types|0|',
                             139)],
          'code-line': '                            (funcname, s.__class__._'\
                       '_name__)) from None\n',
          'first-line': 128L,
          'folded-linenos': [],
          'sel-line': 148L,
          'sel-line-start': 4572L,
          'selection_end': 4572L,
          'selection_start': 4572L,
          'zoom': 0L},
         1584767057.035]],
        9),
        'current-loc': loc('json-test.py'),
        'editor-state-list': [(loc('json-test.py'),
                               {'attrib-starts': [],
                                'code-line': "    parser.add_argument('--end"\
        "',type=int,default=None)\r\n",
                                'first-line': 9L,
                                'folded-linenos': [],
                                'sel-line': 27L,
                                'sel-line-start': 1037L,
                                'selection_end': 1051L,
                                'selection_start': 1051L,
                                'zoom': 0L})],
        'has-focus': True,
        'locked': False},
        [loc('json-test.py')]),
                               'open_files': [u'json-test.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.5},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((1,
                           1),
                          1584770233.757),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {},
                 'splits': 1,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    0),
                                   1584764105.417),
                 'user_data': {}},
        'window-alloc': (39,
                         -23,
                         1378,
                         749)}]}
guimgr.recent-documents = [loc('json-test.py')]
guimgr.visual-state = {loc('../Anaconda3/Lib/argparse.py'): {'attrib-starts': [('_'\
        'ActionsContainer|0|',
        1238),
        ('_ActionsContainer|0|.add_argument|0|',
         1321)],
        'code-line': '                raise ValueError("length of metavar tu'\
                     'ple does not match nargs")\n',
        'first-line': 1344L,
        'folded-linenos': [],
        'sel-line': 1364L,
        'sel-line-start': 48095L,
        'selection_end': 48095L,
        'selection_start': 48095L,
        'zoom': 0L},
                       loc('../Anaconda3/Lib/genericpath.py'): {'attrib-star'\
        'ts': [('_check_arg_types|0|',
                139)],
        'code-line': '                            (funcname, s.__class__.__n'\
                     'ame__)) from None\n',
        'first-line': 128L,
        'folded-linenos': [],
        'sel-line': 148L,
        'sel-line-start': 4572L,
        'selection_end': 4572L,
        'selection_start': 4572L,
        'zoom': 0L}}
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('default',
                        [u''])}
proj.pyexec = {None: ('custom',
                      u'/Users/Simon/Anaconda3/Scripts/wrap_anaconda.bat')}
